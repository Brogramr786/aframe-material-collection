{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/primitives/button.js","webpack:///./src/primitives/fab_button.js","webpack:///./src/primitives/fab_button_small.js","webpack:///./src/primitives/switch.js","webpack:///./src/primitives/checkbox.js","webpack:///./src/primitives/radio.js","webpack:///./src/primitives/text-input.js","webpack:///./src/primitives/number-input.js","webpack:///./src/primitives/int-input.js","webpack:///./src/primitives/password-input.js","webpack:///./src/primitives/scroll-pane.js","webpack:///./src/primitives/renderer.js","webpack:///./src/components/text.js","webpack:///./src/components/btn.js","webpack:///./src/components/icon.js","webpack:///./src/components/rounded.js","webpack:///./src/components/ripple.js","webpack:///./src/components/switch.js","webpack:///./src/components/scroll-pane.js","webpack:///./src/components/mouse-shim.js","webpack:///./src/components/double-click.js","webpack:///./src/components/checkbox.js","webpack:///./src/components/radio.js","webpack:///./src/components/border.js","webpack:///./src/components/curved-plane.js","webpack:///./src/components/modal.js","webpack:///./src/components/renderer.js","webpack:///./src/components/yoga.js","webpack:///./src/utils.js","webpack:///./src/index.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;AClFA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mFAAmF;AACnF;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT,mBAAmB;AACnB,sBAAsB,oBAAoB;AAC1C,qBAAqB,MAAM,cAAc,iCAAiC;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,G;;;;;;AC3CD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uFAAuF;AACvF;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT,mBAAmB;AACnB,qBAAqB,MAAM,YAAY,yCAAyC;AAChF,mBAAmB,MAAM;AACzB,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,G;;;;;;ACjCD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6FAA6F;AAC7F;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT,mBAAmB;AACnB,qBAAqB,MAAM,gBAAgB,+BAA+B;AAC1E,mBAAmB,MAAM,gBAAgB;AACzC,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,G;;;;;;AChCD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mFAAmF;AACnF;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,CAAC,G;;;;;;ACfD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,qFAAqF;AACrF;AACA;;AAEA,SAAS;AACT;AACA,kBAAkB,YAAY;AAC9B;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,CAAC,G;;;;;;ACxBD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kFAAkF;AAClF;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA,kBAAkB,YAAY;AAC9B;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,G;;;;;;AChCD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uFAAuF;AACvF;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,G;;;;;;ACpBD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yFAAyF;AACzF;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,G;;;;;;ACrBD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sFAAsF;AACtF;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,G;;;;;;ACrBD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2FAA2F;AAC3F;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,G;;;;;;ACrBD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wFAAwF;AACxF;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,G;;;;;;ACtBD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qFAAqF;AACrF;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,G;;;;;;ACtBD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,0BAA0B;AACzC,gBAAgB,0BAA0B;AAC1C,gBAAgB,YAAY;AAC5B,eAAe,gBAAgB;AAC/B,yBAAyB,mBAAmB;AAC5C,wBAAwB,mBAAmB;AAC3C,wBAAwB,mBAAmB;AAC3C,mBAAmB,gCAAgC;AACnD,qBAAqB,kBAAkB;AACvC,oBAAoB,mBAAmB;AACvC,sBAAsB,mBAAmB;AACzC,6BAA6B,yBAAyB;AACtD,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,YAAY;AACrE;AACA;AACA;;AAEA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,yDAAyD,mEAAmE;AAC5H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,E;;;;;;AC7MD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,uBAAuB;AACzC,qBAAqB,2BAA2B;AAChD,sBAAsB,6BAA6B;AACnD,kBAAkB;AAClB,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,gCAAgC,OAAO;AACvC,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,CAAC,E;;;;;;ACzFD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,qCAAqC;AACnD,cAAc,qBAAqB,aAAa;AAChD,gBAAgB,4BAA4B;AAC5C,eAAe;AACf,KAAK;AACL;AACA,2HAA2H,uGAAuG;AAClO;AACA;AACA;AACA,CAAC,E;;;;;;ACnBD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,uBAAuB,8BAA8B;AACrD,uBAAuB,wBAAwB;AAC/C,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,CAAC,E;;;;;;ACjCD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAgB,gBAAgB;AAChC,kBAAkB,wBAAwB;AAC1C,sBAAsB,uBAAuB;AAC7C,mBAAmB,uBAAuB;AAC1C,uBAAuB,6BAA6B;AACpD,cAAc,qBAAqB,SAAS;AAC5C,gBAAgB,6BAA6B;AAC7C,kBAAkB;AAClB,KAAK;AACL;AACA;AACA;AACA,8FAA8F,kEAAkE;AAChK;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,yBAAyB,UAAU;AACnC,iBAAiB,MAAM;AACvB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA,yBAAyB,MAAM;AAC/B,iBAAiB,MAAM;AACvB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,CAAC,E;;;;;;ACnGD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAgB,8BAA8B;AAC9C,kBAAkB,8BAA8B;AAChD,uBAAuB,kBAAkB;AACzC,qBAAqB,kBAAkB;AACvC,6BAA6B,kBAAkB;AAC/C,mBAAmB,eAAe;AAClC,wBAAwB,wBAAwB;AAChD,sBAAsB,2BAA2B;AACjD,6BAA6B,yBAAyB;AACtD,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,WAAW,cAAc;AACtF;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,mGAAmG,8BAA8B;AACjI;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,CAAC,E;;;;;;ACtHD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAgB,0BAA0B;AAC1C,eAAe,0BAA0B;AACzC,uBAAuB,2BAA2B;AAClD,uBAAuB,wBAAwB;AAC/C,2BAA2B,kBAAkB;AAC7C,4BAA4B,wBAAwB;AACpD,kBAAkB,gBAAgB;AAClC,+BAA+B,wBAAwB;AACvD,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4FAA4F;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA,4FAA4F;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,CAAC,E;;;;;;ACzXD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,uDAAuD,qDAAqD;AAC5G;AACA,SAAS;AACT;AACA,CAAC,E;;;;;;ACnCD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,CAAC,E;;;;;;ACzBD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAgB,8BAA8B;AAC9C,wBAAwB,mBAAmB;AAC3C,0BAA0B,mBAAmB;AAC7C,wBAAwB,mBAAmB;AAC3C,wBAAwB,8BAA8B;AACtD,kBAAkB,8BAA8B;AAChD,6BAA6B;AAC7B,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,oDAAoD,gBAAgB;AACpE,oDAAoD,wBAAwB;AAC5E,SAAS;AACT,oDAAoD,qBAAqB;AACzE,oDAAoD,sCAAsC;AAC1F;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,yBAAyB,IAAI;AAC7B,iBAAiB,MAAM;AACvB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,E;;;;;;ACvKD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAgB,YAAY;AAC5B,kBAAkB,gCAAgC;AAClD,wBAAwB,mBAAmB;AAC3C,yBAAyB,6BAA6B;AACtD,0BAA0B,mBAAmB;AAC7C,wBAAwB,mBAAmB;AAC3C,mBAAmB,gCAAgC;AACnD,6BAA6B,yBAAyB;AACtD,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,IAAI;AAC7B,iBAAiB,aAAa;AAC9B;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,WAAW;AACpC,iBAAiB,MAAM;AACvB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,CAAC,E;;;;;;AChGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,8BAA8B;AACrD,uBAAuB,wBAAwB;AAC/C,qBAAqB,+BAA+B;AACpD,eAAe,kBAAkB;AACjC,wBAAwB;AACxB,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA,gGAAgG,sDAAsD;;AAEtJ;AACA,CAAC,E;;;;;;ACpCD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe;AACf,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,WAAW;AACtC,gCAAgC,6BAA6B;AAC7D;AACA;AACA;AACA;AACA;AACA,CAAC,E;;;;;;AC/BD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,gBAAgB;AAC/B,cAAc;AACd,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,0BAA0B;AACpD;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA,6BAA6B,OAAO;AACpC,qBAAqB,KAAK;AAC1B;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,SAAS;AACT;AACA,CAAC,E;;;;;;ACxDD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,iBAAiB;AACnC,yBAAyB,iBAAiB;AAC1C,+BAA+B,wBAAwB;AACvD,uBAAuB,qBAAqB,gBAAgB;AAC5D,mBAAmB,qBAAqB,SAAS;AACjD,0BAA0B,qBAAqB,eAAe;AAC9D,wBAAwB,8BAA8B;AACtD,aAAa,yBAAyB;AACtC,4BAA4B;AAC5B,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oHAAoH,kBAAkB;AACtI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,iGAAiG,gBAAgB;AACjH;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,YAAY;AACzC,qBAAqB,UAAU;AAC/B;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,eAAe;AAC9D;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,yBAAyB;AAC/C;AACA;AACA;AACA,oCAAoC,oDAAoD;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,oCAAoC;AAC1D;AACA;AACA,kDAAkD,yCAAyC;AAC3F;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,E;;;;;;AC1ND;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C,qBAAqB,gBAAgB;AACrC,oBAAoB,gBAAgB;AACpC,kBAAkB,mBAAmB;AACrC,eAAe,yBAAyB;AACxC,wBAAwB,eAAe;AACvC,kBAAkB,mBAAmB;AACrC,sBAAsB,mBAAmB;AACzC,kBAAkB,kBAAkB;AACpC,wBAAwB,gBAAgB;AACxC,iBAAiB,sBAAsB;AACvC,qBAAqB,sBAAsB;AAC3C,sBAAsB,sBAAsB;AAC5C,oBAAoB,sBAAsB;AAC1C,uBAAuB,sBAAsB;AAC7C,kBAAkB,sBAAsB;AACxC,sBAAsB,sBAAsB;AAC5C,uBAAuB,sBAAsB;AAC7C,qBAAqB,sBAAsB;AAC3C,wBAAwB,sBAAsB;AAC9C,iBAAiB,sBAAsB;AACvC,qBAAqB,sBAAsB;AAC3C,sBAAsB,sBAAsB;AAC5C,oBAAoB,sBAAsB;AAC1C,uBAAuB,sBAAsB;AAC7C,qBAAqB,8BAA8B;AACnD,yBAAyB,8BAA8B;AACvD,0BAA0B,8BAA8B;AACxD,wBAAwB,8BAA8B;AACtD,2BAA2B,8BAA8B;AACzD,uBAAuB,yBAAyB;AAChD,4BAA4B,sBAAsB;AAClD,6BAA6B,sBAAsB;AACnD,2BAA2B,sBAAsB;AACjD,8BAA8B,sBAAsB;AACpD,oBAAoB,mBAAmB;AACvC,2BAA2B,yBAAyB;AACpD,kBAAkB,yBAAyB;AAC3C,oBAAoB,yBAAyB;AAC7C,mBAAmB,mBAAmB;AACtC,mBAAmB,mBAAmB;AACtC,kBAAkB,mBAAmB;AACrC,kBAAkB,mBAAmB;AACrC,0BAA0B,mBAAmB;AAC7C,0BAA0B,mBAAmB;AAC7C,yBAAyB,mBAAmB;AAC5C,yBAAyB,mBAAmB;AAC5C,kBAAkB,mBAAmB;AACrC,uBAAuB,sBAAsB;AAC7C,wBAAwB,sBAAsB;AAC9C,sBAAsB,sBAAsB;AAC5C,yBAAyB,sBAAsB;AAC/C,yBAAyB,mBAAmB;AAC5C,8BAA8B,sBAAsB;AACpD,+BAA+B,sBAAsB;AACrD,6BAA6B,sBAAsB;AACnD,gCAAgC,sBAAsB;AACtD,eAAe,mBAAmB;AAClC,gBAAgB,mBAAmB;AACnC,mBAAmB,8BAA8B;AACjD,oBAAoB,8BAA8B;AAClD,sBAAsB,mBAAmB;AACzC,uBAAuB,mBAAmB;AAC1C,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,8FAA8F;AAC7I;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,sBAAsB,2BAA2B;AACjD;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,E;;;;;;;;;;AC1OD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,C;;AC1CA;AACA;AACA;AACA;AACA;AACc;;AAEd;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"aframe-material-collection.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 29);\n","/* global AFRAME */\r\n/**\r\n * Button Primitive for aframe-material-collection.\r\n * @namespace aframe-material-collection\r\n * @primitive a-ui-button\r\n * @author Shane Harris\r\n */\r\n\r\nmodule.exports = AFRAME.registerPrimitive('a-ui-button', AFRAME.utils.extendDeep({}, AFRAME.primitives.getMeshMixin(), {\r\n    defaultComponents: {\r\n        geometry: {\r\n            primitive: 'plane',\r\n            width: 0.5,\r\n            height: 0.175\r\n        },\r\n        material: {\r\n            color: '#009688',\r\n            shader: 'flat',\r\n        },\r\n        \"ui-btn\":{},\r\n        \"ui-rounded\":{borderRadius:0.0025},\r\n        \"ui-ripple\":{size:{x:0.5,y:0.175},clampToSquare:true,zIndex:0.001},\r\n        text:{\r\n            font:'roboto',\r\n            align:'center',\r\n            zOffset:0.002,\r\n            wrapCount:10,\r\n            alphaTest:0.4\r\n        }\r\n    },\r\n    mappings: {\r\n        height: 'geometry.height',\r\n        width: 'geometry.width',\r\n        color: 'material.color',\r\n        transparent: 'material.transparent',\r\n        \"font-color\":'text.color',\r\n        \"ripple-color\":'ui-ripple.color',\r\n        \"ripple-size\":'ui-ripple.size',\r\n        \"ripple-z-index\":'ui-ripple.zIndex',\r\n        \"text-value\": 'text.value',\r\n        \"wrap-count\":'text.wrapCount',\r\n        disabled:'ui-btn.disabled'\r\n    }\r\n}));","/* global AFRAME */\r\n/**\r\n * Floating Action Button Primitive for aframe-material-collection.\r\n * @namespace aframe-material-collection\r\n * @primitive a-ui-fab-button\r\n * @author Shane Harris\r\n */\r\n\r\nmodule.exports = AFRAME.registerPrimitive('a-ui-fab-button', AFRAME.utils.extendDeep({}, AFRAME.primitives.getMeshMixin(), {\r\n    defaultComponents: {\r\n        geometry: {\r\n            primitive: 'circle',\r\n            radius: 0.1,\r\n            segments:6\r\n        },\r\n        material: {\r\n            color: '#009688',\r\n            shader: 'flat',\r\n        },\r\n        \"ui-btn\":{},\r\n        \"ui-ripple\":{size:{x:0.1,y:0.1},zIndex:0.002,fadeDelay:300,duration:500},\r\n        \"ui-icon\":{size:{x:0.105,y:0.105}}\r\n    },\r\n    mappings: {\r\n        radius: 'geometry.radius',\r\n        color: 'material.color',\r\n        transparent: 'material.transparent',\r\n        src: 'ui-icon.src',\r\n        \"ripple-color\":'ui-ripple.color',\r\n        \"ripple-size\":'ui-ripple.size',\r\n        \"ripple-z-index\":'ui-ripple.zIndex',\r\n        disabled:'ui-btn.disabled'\r\n    }\r\n}));","/* global AFRAME */\r\n/**\r\n * Floating Action Button Small Primitive for aframe-material-collection.\r\n * @namespace aframe-material-collection\r\n * @primitive a-ui-fab-button-small\r\n * @author Shane Harris\r\n */\r\nmodule.exports = AFRAME.registerPrimitive('a-ui-fab-button-small', AFRAME.utils.extendDeep({}, AFRAME.primitives.getMeshMixin(), {\r\n    defaultComponents: {\r\n        geometry: {\r\n            primitive: 'circle',\r\n            radius: 0.075,\r\n            segments:6\r\n        },\r\n        material: {\r\n            color: '#009688',\r\n            shader: 'flat',\r\n        },\r\n        \"ui-btn\":{},\r\n        \"ui-ripple\":{size:{x:0.125,y:0.125},zIndex:-0.001,color:'#ff0000'},\r\n        \"ui-icon\":{size:{x:0.075,y:0.075}, src:'icons/sort_white_64dp.png'}\r\n    },\r\n    mappings: {\r\n        radius: 'geometry.radius',\r\n        color: 'material.color',\r\n        transparent: 'material.transparent',\r\n        src: 'ui-icon.src',\r\n        \"ripple-color\":'ui-ripple.color',\r\n        \"ripple-size\":'ui-ripple.size',\r\n        \"ripple-z-index\":'ui-ripple.zIndex',\r\n        disabled:'ui-btn.disabled'\r\n    }\r\n}));","/* global AFRAME */\r\n/**\r\n * Switch Primitive for aframe-material-collection.\r\n * @namespace aframe-material-collection\r\n * @primitive a-ui-switch\r\n * @author Shane Harris\r\n */\r\nmodule.exports = AFRAME.registerPrimitive('a-ui-switch', AFRAME.utils.extendDeep({}, AFRAME.primitives.getMeshMixin(), {\r\n    defaultComponents: {\r\n        \"ui-switch\":{}\r\n    },\r\n    mappings: {\r\n        value: 'ui-switch.value',\r\n        disabled: 'ui-switch.disabled',\r\n    }\r\n}));","/* global AFRAME */\r\n/**\r\n * Checkbox Primitive for aframe-material-collection.\r\n * @namespace aframe-material-collection\r\n * @primitive a-ui-checkbox\r\n * @author Shane Harris\r\n */\r\n\r\nmodule.exports = AFRAME.registerPrimitive('a-ui-checkbox', AFRAME.utils.extendDeep({}, AFRAME.primitives.getMeshMixin(), {\r\n    defaultComponents: {\r\n        \"ui-checkbox\":{\r\n\r\n        },\r\n        \"ui-ripple\":{\r\n            size:{x:0.1,y:0.1},\r\n            zIndex:-0.001,\r\n            color:'#afafaf'\r\n        }\r\n    },\r\n    mappings: {\r\n        value: 'ui-checkbox.value',\r\n        disabled: 'ui-checkbox.disabled',\r\n        indeterminate:'ui-checkbox.indeterminate'\r\n    }\r\n}));","/* global AFRAME */\r\n/**\r\n * Radio Primitive for aframe-material-collection.\r\n * @namespace aframe-material-collection\r\n * @primitive a-ui-radio\r\n * @author Shane Harris\r\n */\r\nmodule.exports = AFRAME.registerPrimitive('a-ui-radio', AFRAME.utils.extendDeep({}, AFRAME.primitives.getMeshMixin(), {\r\n    defaultComponents: {\r\n        \"ui-radio\":{},\r\n        \"geometry\":{\r\n            primitive:'ring',\r\n            radiusInner:0.0575,\r\n            radiusOuter:0.0675,\r\n            segmentsTheta:6\r\n        },\r\n        \"material\":{\r\n            shader:'flat',\r\n            color:'#afafaf'\r\n        },\r\n        \"ui-ripple\":{\r\n            size:{x:0.1,y:0.1},\r\n            zIndex:-0.001,\r\n            color:'#afafaf'\r\n        }\r\n    },\r\n    mappings: {\r\n        color:'ui-radio.selectedColor',\r\n        value: 'ui-radio.value',\r\n        selected: 'ui-radio.selected',\r\n        disabled: 'ui-radio.disabled',\r\n    }\r\n}));","/* global AFRAME */\r\n/**\r\n * Text Input Primitive for aframe-material-collection.\r\n * @namespace aframe-material-collection\r\n * @primitive a-ui-text-input\r\n * @author Shane Harris\r\n */\r\nmodule.exports = AFRAME.registerPrimitive('a-ui-text-input', AFRAME.utils.extendDeep({}, AFRAME.primitives.getMeshMixin(), {\r\n    defaultComponents: {\r\n        \"ui-text\":{\r\n            placeHolder:'Text...'\r\n        },\r\n        \"ui-double-click\":{}\r\n    },\r\n    mappings: {\r\n        width:\"ui-text.width\",\r\n        height:\"ui-text.height\",\r\n        value:\"ui-text.value\",\r\n        \"place-holder\":\"ui-text.placeHolder\"\r\n    }\r\n}));","/* global AFRAME */\r\n/**\r\n * Number Input Primitive for aframe-material-collection.\r\n * @namespace aframe-material-collection\r\n * @primitive a-ui-number-input\r\n * @author Shane Harris\r\n */\r\nmodule.exports = AFRAME.registerPrimitive('a-ui-number-input', AFRAME.utils.extendDeep({}, AFRAME.primitives.getMeshMixin(), {\r\n    defaultComponents: {\r\n        \"ui-text\":{\r\n            type:'number',\r\n            placeHolder:'Number...'\r\n        },\r\n        \"ui-double-click\":{}\r\n    },\r\n    mappings: {\r\n        width:\"ui-text.width\",\r\n        height:\"ui-text.height\",\r\n        value:\"ui-text.value\",\r\n        \"place-holder\":\"ui-text.placeHolder\"\r\n    }\r\n}));","/* global AFRAME */\r\n/**\r\n * Integer Input Primitive for aframe-material-collection.\r\n * @namespace aframe-material-collection\r\n * @primitive a-ui-int-input\r\n * @author Shane Harris\r\n */\r\nmodule.exports = AFRAME.registerPrimitive('a-ui-int-input', AFRAME.utils.extendDeep({}, AFRAME.primitives.getMeshMixin(), {\r\n    defaultComponents: {\r\n        \"ui-text\":{\r\n            type:'int',\r\n            placeHolder:'Whole Number...'\r\n        },\r\n        \"ui-double-click\":{}\r\n    },\r\n    mappings: {\r\n        width:\"ui-text.width\",\r\n        height:\"ui-text.height\",\r\n        value:\"ui-text.value\",\r\n        \"place-holder\":\"ui-text.placeHolder\"\r\n    }\r\n}));","/* global AFRAME */\r\n/**\r\n *  Password Primitive for aframe-material-collection.\r\n * @namespace aframe-material-collection\r\n * @primitive a-ui-password-input\r\n * @author Shane Harris\r\n */\r\nmodule.exports = AFRAME.registerPrimitive('a-ui-password-input', AFRAME.utils.extendDeep({}, AFRAME.primitives.getMeshMixin(), {\r\n    defaultComponents: {\r\n        \"ui-text\":{\r\n            type:'password',\r\n            placeHolder:''\r\n        },\r\n        \"ui-double-click\":{}\r\n    },\r\n    mappings: {\r\n        width:\"ui-text.width\",\r\n        height:\"ui-text.height\",\r\n        value:\"ui-text.value\",\r\n        \"place-holder\":\"ui-text.placeHolder\"\r\n    }\r\n}));","/* global AFRAME */\r\n/**\r\n * Scroll Pane Primitive for aframe-material-collection.\r\n * @namespace aframe-material-collection\r\n * @primitive a-ui-scroll-pane\r\n * @author Shane Harris\r\n */\r\nmodule.exports = AFRAME.registerPrimitive('a-ui-scroll-pane', AFRAME.utils.extendDeep({}, AFRAME.primitives.getMeshMixin(), {\r\n    defaultComponents: {\r\n        \"ui-scroll-pane\":{\r\n\r\n        }\r\n    },\r\n    mappings: {\r\n        width:\"ui-scroll-pane.width\",\r\n        height:\"ui-scroll-pane.height\",\r\n        \"scroll-z-offset\":\"ui-scroll-pane.scrollZOffset\",\r\n        \"handle-color\":\"ui-scroll-pane.scrollHandleColor\",\r\n        \"scroll-padding\":\"ui-scroll-pane.scrollPadding\",\r\n        \"look-controls-el\":\"ui-scroll-pane.cameraEl\",\r\n        \"look-controls-component\":\"ui-scroll-pane.lookControlsComponent\"\r\n    }\r\n}));","/* global AFRAME */\r\n/**\r\n * Renderer Primitive for aframe-material-collection.\r\n * @namespace aframe-material-collection\r\n * @primitive a-ui-renderer\r\n * @author Shane Harris\r\n */\r\nmodule.exports = AFRAME.registerPrimitive('a-ui-renderer', AFRAME.utils.extendDeep({}, AFRAME.primitives.getMeshMixin(), {\r\n    defaultComponents: {\r\n        \"ui-renderer\":{}\r\n    },\r\n    mappings: {\r\n        \"ui-panel\":\"ui-renderer.uiPanel\",\r\n        \"look-controls-el\":\"ui-renderer.lookControlsEl\",\r\n        \"look-controls-component\":\"ui-renderer.lookControlsComponent\",\r\n        \"panel-position\":\"ui-renderer.panelPosition\",\r\n        \"panel-size\":\"ui-renderer.panelSize\",\r\n        \"render-resolution\":\"ui-renderer.renderResolution\",\r\n        \"debug-raycaster\":\"ui-renderer.debugRaycaster\",\r\n        \"fps\":\"ui-renderer.fps\",\r\n        \"intersectable-class\":\"ui-renderer.intersectableClass\",\r\n    }\r\n}));","/* global AFRAME,THREE */\r\n/**\r\n * Text input component Component for aframe-material-collection. Includes support for number/int only input.\r\n * @namespace aframe-material-collection\r\n * @component ui-text\r\n * @author Shane Harris\r\n */\r\n\r\nif (typeof CanvasInput === 'undefined') {\r\n    throw 'aframe-material-collection requires CanvasInput to be loaded first - <script src=\"https://cdn.rawgit.com/shaneharris/CanvasInput/master/CanvasInput.js\"></script>';\r\n}\r\nmodule.exports = AFRAME.registerComponent('ui-text', {\r\n    schema: {\r\n        width:{type:'number',default:0.5},\r\n        height:{type:'number',default:0.1},\r\n        value: {default: ''},\r\n        type: {default: 'text'},\r\n        lineFocusColor: {default: '#009688'},\r\n        lineBlurColor: {default: '#cfcfcf'},\r\n        disabledColor: {default: '#afafaf'},\r\n        disabled: {type: 'boolean', default: false},\r\n        fontFamily: {default: 'Roboto'},\r\n        fontColor: {default: '#4f4f4f'},\r\n        placeHolder: {default: 'Text...'},\r\n        intersectableClass: {default: 'intersectable'},\r\n    },\r\n    init(){\r\n\r\n        // Setup text input box.\r\n        this.backing = document.createElement('a-plane');\r\n        this.backing.setAttribute('width',this.data.width);\r\n        this.backing.setAttribute('height',this.data.height);\r\n        this.backing.setAttribute('class',this.data.intersectableClass+' no-yoga-layout');\r\n        this.backing.setAttribute('opacity',0);\r\n        this.backing.setAttribute('scale','1 1 0');\r\n        this.el.appendChild(this.backing);\r\n        this.textMaterial = new THREE.MeshBasicMaterial();\r\n        this.textPlane = new THREE.Mesh(new THREE.PlaneGeometry(this.data.width,this.data.height),this.textMaterial);\r\n        this.el.object3D.add(this.textPlane);\r\n        this.textPlane.position.set(0,0,0.0001);\r\n\r\n        // Add under line for showing focus state.\r\n        this.underLine = document.createElement('a-plane');\r\n        this.underLine.setAttribute('width',this.data.width-0.05);\r\n        this.underLine.setAttribute('height',0.005);\r\n        this.underLine.setAttribute('position','0 -0.05 0.001');\r\n        this.underLine.setAttribute('class','no-yoga-layout');\r\n        this.underLine.setAttribute('shader','flat');\r\n        this.underLine.setAttribute('color',this.data.disabled?this.data.disabledColor:this.data.lineBlurColor);\r\n        this.el.appendChild(this.underLine);\r\n        // Handle click to focus the input text.\r\n        this.el.addEventListener('click',e=>this.focus());\r\n        // Double click to select all text.\r\n        this.el.addEventListener('dblclick',e=>this.select());\r\n        // Handle the blur event for setting the input value.\r\n        this.blurHandler = ()=>this.blur();\r\n        this.setValue();\r\n    },\r\n    tick(){\r\n        // If this element is focused then render the canvas input.\r\n        if(!this.is_focussed)return;\r\n        this.el.sceneEl.canvas_input.render();\r\n        this.textMaterial.map.needsUpdate = true;\r\n    },\r\n    numberOnly(e,is_float){\r\n        // Stolen from stack overflow.\r\n        if ([46, 8, 9, 27, 13, 110].indexOf(e.keyCode) !== -1 ||\r\n            // Allow: Ctrl/cmd+A\r\n            (e.keyCode === 65 && (e.ctrlKey === true || e.metaKey === true)) ||\r\n            // Allow: Ctrl/cmd+C\r\n            (e.keyCode === 67 && (e.ctrlKey === true || e.metaKey === true)) ||\r\n            // Allow: Ctrl/cmd+X\r\n            (e.keyCode === 88 && (e.ctrlKey === true || e.metaKey === true)) ||\r\n            // Allow: home, end, left, right\r\n            (e.keyCode >= 35 && e.keyCode <= 39)) {\r\n            // let it happen, don't do anything\r\n            return;\r\n        }\r\n        // Regex to allow float/int input - float inpit allows \"0.\" for as you type numbers - need to remove on blur.\r\n        // TODO: Need to remove trailing dot on blur to make a valid number.\r\n        if(!((is_float?/^\\d*((\\.)|(\\.\\d+))?$/g:/^\\d*?$/g).test(this.el.sceneEl.canvas_input.value()+e.key))){\r\n            e.preventDefault();\r\n        }\r\n    },\r\n    floatOnly(e){\r\n        return this.numberOnly(e,true);\r\n    },\r\n    setValue(){\r\n        this.setupCanvasInput();\r\n        this.el.sceneEl.canvas_input.render();\r\n        // Grap a frame from the canvas input wiith the current input value for displaying when not in focus.\r\n        let image = new Image();\r\n        image.src = this.el.sceneEl.canvas_input.renderCanvas().toDataURL(\"image/png\");\r\n        let texture = new THREE.Texture(image);\r\n        texture.needsUpdate = true;\r\n        texture.minFilter = THREE.LinearFilter;\r\n        this.textMaterial = new THREE.MeshBasicMaterial({map:texture});\r\n        this.textPlane.material = this.textMaterial;\r\n        // Update clipping planes for the new material.\r\n        this.setClippingPlanes();\r\n\r\n    },\r\n    select(){\r\n        // Select the text on double click.\r\n        this.el.sceneEl.canvas_input.selectText();\r\n    },\r\n    focus(){\r\n        // Start Changes\r\n        UI.utils.isChanging(this.el.sceneEl,this.el.object3D.uuid);\r\n        // Reset the global canvas input to this current inputs settings.\r\n        this.resetCanvasInput();\r\n        //this.el.focus();\r\n        this.el.sceneEl.canvas_input.focus();\r\n        this.el.sceneEl.canvas_input.onkeydown(e=>{\r\n            // Prevent input for integer and float only.\r\n            if(this.data.type===\"number\"){\r\n                this.floatOnly(e);\r\n            }else if(this.data.type===\"int\"){\r\n                this.numberOnly(e);\r\n            }\r\n        });\r\n        if(this.data.value === this.data.placeHolder){\r\n            // reset value if the same as placeholder.\r\n            this.el.sceneEl.canvas_input.value('');\r\n        }\r\n        // Set the current input to the input canvas texture.\r\n        this.textMaterial = new THREE.MeshBasicMaterial({map:new THREE.Texture(this.el.sceneEl.canvas_input.renderCanvas())});\r\n        this.textPlane.material = this.textMaterial;\r\n        // Update clipping planes for new material.\r\n        this.setClippingPlanes();\r\n        // Set the underline to the focussed state.\r\n        this.underLine.setAttribute('color',this.data.lineFocusColor);\r\n        this.textMaterial.map.minFilter = THREE.LinearFilter;\r\n        // Set focused flag\r\n        this.is_focussed = true;\r\n        // Add mouse down event handler for blur event to the render dom element.\r\n        this.el.sceneEl.renderer.domElement.addEventListener('mousedown',this.blurHandler);\r\n    },\r\n    setClippingPlanes(){\r\n        // If content clips are set for the scroll plane, then set them to the current material and set clipping enabled.\r\n        if(this.el._content_clips){\r\n            this.textMaterial.clippingPlanes = this.el._content_clips;\r\n            this.textMaterial.clipShadows = true;\r\n        }\r\n    },\r\n    blur(){\r\n        // Clicked off the input text field.\r\n        this.is_focussed = false;\r\n        this.el.sceneEl.renderer.domElement.removeEventListener('mousedown',this.blurHandler);\r\n        let new_value = this.el.sceneEl.canvas_input.value();\r\n        // Update the current valuue.\r\n        this.data.value = new_value;\r\n        // Reset the under line color to blur state.\r\n        this.underLine.setAttribute('color',this.data.lineBlurColor);\r\n        // Blur the canvas element to grab a frame without the carret.\r\n        this.el.sceneEl.canvas_input.blur();\r\n        // Set the input current value image.\r\n        this.setValue();\r\n        // Stop Changes\r\n        UI.utils.stoppedChanging(this.el.object3D.uuid);\r\n    },\r\n    resetCanvasInput(){\r\n        // Set the canvas input to this current inputs settings.\r\n        if(this.el.sceneEl.canvas_input) {\r\n            this.el.sceneEl.canvas_input.width((this.data.width - 0.1) * 300);\r\n            this.el.sceneEl.canvas_input.fontFamily(this.data.fontFamily);\r\n            this.el.sceneEl.canvas_input.fontColor(this.data.fontColor);\r\n            this.el.sceneEl.canvas_input.placeHolder(this.data.placeHolder);\r\n            this.el.sceneEl.canvas_input.value(this.data.value);\r\n            this.el.sceneEl.canvas_input.borderWidth(0);\r\n        }\r\n    },\r\n    updateSchema(){\r\n        if(this.data){\r\n            // Reset the current settings if changed programatically.\r\n            this.resetCanvasInput();\r\n        }\r\n    },\r\n    setupCanvasInput(){\r\n        // Setup the input canvas if not already setup\r\n        let canvas = document.getElementById('textCanvas');\r\n        canvas.width = (this.data.width)*300;\r\n        this.resetCanvasInput();\r\n        if(this.el.sceneEl.canvas_input){\r\n            return;\r\n        }\r\n        canvas.height = 45;\r\n        let input_settings = {\r\n            canvas:canvas,\r\n            fontSize:18,\r\n            fontFamily: this.data.fontFamily,\r\n            fontColor: this.data.fontColor,\r\n            width:(this.data.width-0.1)*300,\r\n            padding: 12,\r\n            borderWidth: 0,\r\n            borderRadius:0,\r\n            backgroundColor: '#fff',\r\n            placeHolder:this.data.placeHolder,\r\n            placeHolderColor:'#cfcfcf',\r\n            boxShadow: '0px 0px 0px #fff',\r\n            innerShadow:'0px 0px 0px rgba(255,255,255, 1)',\r\n            value:this.data.value\r\n        };\r\n        this.el.sceneEl.canvas_input = new CanvasInput(input_settings);\r\n    }\r\n});","/* global AFRAME,TWEEN */\r\n/**\r\n * Button base Component for aframe-material-collection. This is used as the base component for all the button primitives.\r\n * @namespace aframe-material-collection\r\n * @component ui-btn\r\n * @author Shane Harris\r\n */\r\n\r\nmodule.exports = AFRAME.registerComponent('ui-btn', {\r\n    schema:{\r\n        duration:{type:'int',default:250},\r\n        hoverHeight:{type:'number',default:0.01},\r\n        activeHeight:{type:'number',default:-0.001},\r\n        disabled:{type:'boolean',default:false}\r\n    },\r\n    updateSchema(){\r\n      // TODO: handle updates to the button state, disabled flag here.\r\n    },\r\n    init() {\r\n        // Store the current button z value for animating mouse events\r\n        this.defaultZ = this.el.object3D.position.z;\r\n        // register input events for interaction\r\n        if(!this.data.disabled){\r\n            this.el.addEventListener('mouseenter', e=>this.mouseEnter(e));\r\n            this.el.addEventListener('mousedown', e=>this.mouseDown(e));\r\n            this.el.addEventListener('mouseup', e=>this.mouseUp(e));\r\n            this.el.addEventListener('mouseleave', e=>this.mouseLeave(e));\r\n        }\r\n    },\r\n    mouseEnter(e){\r\n        const _this = this;\r\n        // Lift the button up for hover animation\r\n        this.tween(this.defaultZ,this.defaultZ+this.data.hoverHeight,function(){\r\n            _this.el.object3D.position.z = this.x;\r\n        },function(){\r\n            _this.el.object3D.position.z = _this.defaultZ+_this.data.hoverHeight;\r\n        });\r\n        // Propagate event on parent element.\r\n        this.el.emit('ui-mouse-enter',e);\r\n    },\r\n    mouseLeave(e){\r\n        // Ignore mouse leave event if the button was clicked - mouse up already resets to default state.\r\n        if(this.is_clicked){\r\n            return this.is_clicked = false;\r\n        }\r\n        // Reset button state from hover\r\n        this.resetAnimation(this.defaultZ+this.data.hoverHeight);\r\n        // Propagate event on parent element.\r\n        this.el.emit('ui-mouse-leave',e);\r\n    },\r\n    mouseUp(e){\r\n        this.is_clicked = true;\r\n        // Reset button state from pressed\r\n        this.resetAnimation(this.defaultZ+this.data.activeHeight);\r\n        this.el.emit('ui-mouse-up',e);\r\n    },\r\n    mouseDown(e){\r\n        const _this = this;\r\n        // Press state animation from hovered\r\n        this.tween(this.defaultZ+this.data.hoverHeight,this.defaultZ+this.data.activeHeight,function(){\r\n            _this.el.object3D.position.z = this.x;\r\n        },function(){\r\n            _this.el.object3D.position.z = _this.defaultZ+_this.data.activeHeight;\r\n        });\r\n        // Propagate event on parent element.\r\n        this.el.emit('ui-mouse-down',e);\r\n    },\r\n    resetAnimation(start_z){\r\n        let _this = this;\r\n        this.tween(start_z,this.defaultZ,function(){\r\n            _this.el.object3D.position.z = this.x;\r\n        },function(){\r\n            _this.el.object3D.position.z = _this.defaultZ;\r\n        })\r\n    },\r\n    tween(from,to,callback,complete){\r\n        let _this = this;\r\n        // Start changes\r\n        UI.utils.isChanging(this.el.sceneEl,this.el.object3D.uuid);\r\n        return new TWEEN.Tween({x:from})\r\n            .to({ x: to}, this.data.duration)\r\n            .onUpdate(callback)\r\n            .onComplete(function(){\r\n                // Stop changes\r\n                UI.utils.stoppedChanging(_this.el.object3D.uuid);\r\n                return complete.call(this);\r\n            })\r\n            .easing(TWEEN.Easing.Exponential.Out).start();\r\n    }\r\n});","/* global AFRAME,THREE */\r\n/**\r\n * A component to load an icon and set some defaults for positioning and transparency.\r\n * @namespace aframe-material-collection\r\n * @component ui-icon\r\n * @author Shane Harris\r\n */\r\nmodule.exports = AFRAME.registerComponent('ui-icon', {\r\n    schema: {\r\n        src: {default: 'icons/send_white_64dp.png'},\r\n        size:{type:'vec2',default:{x:0.1,y:0.1}},\r\n        zIndex:{type:'number',default:0.003},\r\n        color:{default:'#fff'}\r\n    },\r\n    init() {\r\n        this.icon = new THREE.Mesh(new THREE.PlaneGeometry(this.data.size.x,this.data.size.y),new THREE.MeshBasicMaterial({color:this.data.color,alphaTest:0.4,transparent:true,map:new THREE.TextureLoader().load(this.data.src)}));\r\n        this.icon.position.set(0,0,this.data.zIndex);\r\n        this.el.object3D.add(this.icon);\r\n    }\r\n});","/* global AFRAME,THREE */\r\n/**\r\n * Rounded corners Component for aframe-material-collection. Expects an a-plane entity.\r\n * @namespace aframe-material-collection\r\n * @component ui-rounded\r\n * @author Shane Harris\r\n */\r\n\r\nmodule.exports = AFRAME.registerComponent('ui-rounded', {\r\n    schema: {\r\n        borderRadius: {type: 'number', default: 0.01},\r\n        curveSegments:{type: 'int', default: 1},\r\n    },\r\n    init() {\r\n        let mesh = this.el.getObject3D('mesh');\r\n        let roundedRectShape = new THREE.Shape();\r\n        // Draw the Rounded rectangle shape centered in the object - from three.js shapes example.\r\n        ( function roundedRect( ctx, x, y, width, height, radius ) {\r\n            ctx.moveTo( x, y + radius );\r\n            ctx.lineTo( x, y + height - radius );\r\n            ctx.quadraticCurveTo( x, y + height, x + radius, y + height );\r\n            ctx.lineTo( x + width - radius, y + height );\r\n            ctx.quadraticCurveTo( x + width, y + height, x + width, y + height - radius );\r\n            ctx.lineTo( x + width, y + radius );\r\n            ctx.quadraticCurveTo( x + width, y, x + width - radius, y );\r\n            ctx.lineTo( x + radius, y );\r\n            ctx.quadraticCurveTo( x, y, x, y + radius );\r\n        } )( roundedRectShape, -mesh.geometry.metadata.parameters.width/2, -mesh.geometry.metadata.parameters.height/2, mesh.geometry.metadata.parameters.width, mesh.geometry.metadata.parameters.height, this.data.borderRadius );\r\n        // Update the geometry.\r\n        mesh.geometry = new THREE.ShapeGeometry(roundedRectShape,this.data.curveSegments);\r\n        // Emit rounded-loaded event once the geometry has been updated.\r\n        this.el.emit('rounded-loaded', null, false);\r\n    }\r\n});","/* global AFRAME,TWEEN,THREE */\r\n/**\r\n * Ripple Component for aframe-material-collection. Add a ripple to an entity with options for controlling\r\n * clamping the animation and offsetting the ripple z position to place on top or bottom\r\n * @namespace aframe-material-collection\r\n * @component ui-ripple\r\n * @author Shane Harris\r\n */\r\n\r\nmodule.exports = AFRAME.registerComponent('ui-ripple',{\r\n    schema:{\r\n        color: {default: '#fff'},\r\n        duration:{type:'int',default:1000},\r\n        fadeDuration:{type:'int',default:750},\r\n        fadeDelay:{type:'int',default:250},\r\n        clampToSquare:{type:'boolean',default:false},\r\n        size:{type:'vec2',default:{x:1,y:1}},\r\n        zIndex:{type:'number',default:-0.001},\r\n        segments:{type:'int',default:6}\r\n    },\r\n    init(){\r\n        // Setup circle geometry for ripple effect\r\n        this.rippleGeometry = new THREE.CircleGeometry(Math.max(this.data.size.x,this.data.size.y),this.data.segments);\r\n        this.ripple = new THREE.Mesh(this.rippleGeometry.clone(),new THREE.MeshBasicMaterial({color:this.data.color,transparent:true, opacity:0.4,alphaTest:0.1}));\r\n        this.ripple.scale.set(0.00001,0.00001,0.00001);\r\n        this.el.object3D.add(this.ripple);\r\n        this.el.addEventListener('mousedown',this.click.bind(this));\r\n        this.ripple.position.set(0,0,this.data.zIndex);\r\n        // Set clipping planes if clamping to square\r\n        if(this.data.clampToSquare){\r\n\r\n            this.content_clips = [\r\n                new THREE.Plane( new THREE.Vector3( 0, 1, 0 ), (this.data.size.y/2) ),\r\n                new THREE.Plane( new THREE.Vector3( 0, -1, 0 ), (this.data.size.y/2) ),\r\n                new THREE.Plane( new THREE.Vector3( -1, 0, 0 ), (this.data.size.x/2) ),\r\n                new THREE.Plane( new THREE.Vector3( 1, 0, 0 ), (this.data.size.x/2) )\r\n            ];\r\n        }\r\n    },\r\n    click(e){\r\n        if(this.isRippling){\r\n            // Throttle clicks.\r\n            return e.preventDefault();\r\n        }\r\n        this.isRippling = true;\r\n        // Set clipping planes if clamping to square\r\n        if(this.data.clampToSquare){\r\n            this.setRippleClips(this.ripple.material);\r\n        }\r\n        // Animate the size of the circle ripple from the center of the entity.\r\n        this.tweenSize(this.ripple.geometry);\r\n        // Fade the circle out as it ripples.\r\n        this.tweenOpacity(this.ripple.material);\r\n    },\r\n    setRippleClips(){\r\n        // update content clips world positions from this current element.\r\n        this.content_clips[0].set(new THREE.Vector3( 0, 1, 0 ), (this.data.size.y/2));\r\n        this.content_clips[1].set(new THREE.Vector3( 0, -1, 0 ), (this.data.size.y/2));\r\n        this.content_clips[2].set(new THREE.Vector3( -1, 0, 0 ), (this.data.size.x/2));\r\n        this.content_clips[3].set(new THREE.Vector3( 1, 0, 0 ), (this.data.size.x/2));\r\n        //this.el.sceneEl.object3D.updateMatrixWorld();\r\n        this.content_clips[0].applyMatrix4(this.el.object3D.matrixWorld);\r\n        this.content_clips[1].applyMatrix4(this.el.object3D.matrixWorld);\r\n        this.content_clips[2].applyMatrix4(this.el.object3D.matrixWorld);\r\n        this.content_clips[3].applyMatrix4(this.el.object3D.matrixWorld);\r\n        this.ripple.material.clippingPlanes = this.el._content_clips?this.el._content_clips.concat(this.content_clips):this.content_clips;\r\n        this.ripple.material.clipShadows = true;\r\n        this.ripple.material.needsUpdate = true;\r\n    },\r\n    tweenSize(geometry){\r\n        let _this = this;\r\n        // Start changes\r\n        UI.utils.isChanging(this.el.sceneEl,_this.ripple.uuid);\r\n        new TWEEN.Tween({x:0.00001})\r\n            .to({ x: 1}, this.data.duration)\r\n            .onUpdate(function(){\r\n                _this.ripple.scale.set(this.x,this.x,this.x);\r\n            })\r\n            .onComplete(()=>{\r\n                _this.ripple.scale.set(0.00001,0.00001,0.00001);\r\n                // Reset throttle flag.\r\n                this.isRippling = false;\r\n                // Stop changes\r\n                UI.utils.stoppedChanging(_this.ripple.uuid);\r\n            })\r\n            .easing(TWEEN.Easing.Exponential.Out).start();\r\n    },\r\n    tweenOpacity(material){\r\n        new TWEEN.Tween({x:0.4})\r\n            .to({ x: 0}, this.data.fadeDuration)\r\n            .delay(this.data.fadeDelay)\r\n            .onUpdate(function(){\r\n                material.opacity = this.x;\r\n            })\r\n            .onComplete(()=>{\r\n                material.opacity = 0.4;\r\n            })\r\n            .easing(TWEEN.Easing.Exponential.Out).start();\r\n    }\r\n});","/* global AFRAME,TWEEN,THREE */\r\n/**\r\n * Switch Component for aframe-material-collection. Includes a disabled state.\r\n * @namespace aframe-material-collection\r\n * @component ui-switch\r\n * @author Shane Harris\r\n */\r\n\r\nmodule.exports = AFRAME.registerComponent('ui-switch', {\r\n    schema: {\r\n        value: {type:'boolean',default: false},\r\n        disabled:{type:'boolean',default: false},\r\n        progressColor:{default:'#4db6ac'},\r\n        handleColor:{default:'#009688'},\r\n        handleDisabledColor:{default:'#afafaf'},\r\n        railColor:{default:'#fff'},\r\n        switchDuration:{type:'int',default: 350},\r\n        handleZIndex:{type:'number',default:0.01},\r\n        intersectableClass: {default: 'intersectable'},\r\n    },\r\n    updateSchema(){\r\n        if(this.data){\r\n            if(this.data.disabled){\r\n                if(this.data.value){\r\n                    this.data.value=false;\r\n                    this.click();\r\n                }\r\n            }else{\r\n                this.click();\r\n            }\r\n            this.setDisabled();\r\n        }\r\n    },\r\n    init() {\r\n        this.width = 0.3;\r\n        this.height = 0.1;\r\n        // Setup handle circle entity.\r\n        this.handleEl = document.createElement('a-circle');\r\n        this.handleEl.setAttribute('radius',0.055);\r\n        this.handleEl.setAttribute('color',this.data.handleColor);\r\n        this.handleEl.setAttribute('shader','flat');\r\n        this.handleEl.setAttribute('ui-ripple','size:0.1 0.1;color:#999;fadeDelay:300;duration:500');\r\n        this.handleEl.setAttribute('class',this.data.intersectableClass+' no-yoga-layout');\r\n        this.handleEl.setAttribute('position','-0.05 0 '+this.data.handleZIndex);\r\n        this.handleEl.setAttribute('segments',6);\r\n        this.el.appendChild(this.handleEl);\r\n\r\n        // Setup rail entity.\r\n        this.railEl = document.createElement('a-plane');\r\n        this.railEl.setAttribute('width','0.15');\r\n        this.railEl.setAttribute('height','0.05');\r\n        this.railEl.setAttribute('shader','flat');\r\n        this.railEl.setAttribute('ui-rounded','borderRadius:0.025');\r\n        this.railEl.setAttribute('color',this.data.railColor);\r\n        this.railEl.setAttribute('class',this.data.intersectableClass+' no-yoga-layout');\r\n        this.el.appendChild(this.railEl);\r\n        // Wait for the rounded edge on the rail to load to clone the geometry for the\r\n        // selected progress bar part of the rail\r\n        this.railEl.addEventListener('rounded-loaded',()=>this.getRailObject(this.railEl.object3D));\r\n        this.clickHandler = e=>{\r\n            this.data.value = !this.data.value;\r\n            this.click();\r\n            // Prevent default behaviour of event\r\n            if(e.detail.preventDefault){\r\n                e.detail.preventDefault();\r\n            }\r\n        };\r\n        this.setDisabled();\r\n    },\r\n    setDisabled(){\r\n        // Add / Remove click handlers based on disabled state.\r\n        if(this.data.disabled){\r\n            this.handleEl.removeEventListener('mousedown',this.clickHandler);\r\n            this.handleEl.setAttribute('color',this.data.handleDisabledColor);\r\n        }else{\r\n            this.handleEl.addEventListener('mousedown',this.clickHandler);\r\n            this.handleEl.setAttribute('color',this.data.handleColor);\r\n        }\r\n    },\r\n    click(){\r\n        // Animate the switch handle and the progress bar.\r\n        this.tweenHandle();\r\n        this.tweenProgress();\r\n    },\r\n    getRailObject(object){\r\n        // Get the rounded shape geomtery.\r\n        object.traverse(child=>{\r\n            if(child.geometry&&child.geometry.type===\"ShapeGeometry\"){\r\n                this.progress = new THREE.Mesh(child.geometry.clone(),new THREE.MeshBasicMaterial({color:this.data.progressColor}));\r\n                this.progress.position.set(-0.075,0,0.001);\r\n                this.progress.scale.set(0.00001,1,1);\r\n                this.el.object3D.add(this.progress);\r\n            }\r\n        });\r\n    },\r\n    tweenProgress(){\r\n        if(this.progress){\r\n            new TWEEN.Tween(this.progress.position)\r\n                .to(new THREE.Vector3(this.data.value?0:-0.075,0,0.001), this.data.switchDuration)\r\n                .easing(TWEEN.Easing.Exponential.Out).start();\r\n            new TWEEN.Tween(this.progress.scale)\r\n                .to(new THREE.Vector3(this.data.value?1:0.00001,1,1), this.data.switchDuration)\r\n                .easing(TWEEN.Easing.Exponential.Out).start();\r\n        }\r\n    },\r\n    tweenHandle(){\r\n        if(this.handleEl){\r\n            // Start changes\r\n            UI.utils.isChanging(this.el.sceneEl,this.el.object3D.uuid);\r\n            new TWEEN.Tween(this.handleEl.object3D.position)\r\n                .to(new THREE.Vector3(this.data.value?0.05:-0.05,0,this.data.handleZIndex), this.data.switchDuration)\r\n                .onComplete(()=>{\r\n                    // Stop changes\r\n                    UI.utils.stoppedChanging(this.el.object3D.uuid);\r\n                })\r\n                .easing(TWEEN.Easing.Exponential.Out).start();\r\n        }\r\n    }\r\n});","/* global AFRAME,THREE */\r\n/**\r\n * Scroll Pane for aframe-material-collection. Expects\r\n * @namespace aframe-material-collection\r\n * @component ui-scroll-pane\r\n * @author Shane Harris\r\n */\r\n\r\nmodule.exports = AFRAME.registerComponent('ui-scroll-pane', {\r\n    schema: {\r\n        height:{type:'number',default:1.2},\r\n        width:{type:'number',default:2.9},\r\n        scrollPadding:{type:'number',default:0.05},\r\n        scrollZOffset:{type:'number',default:0},\r\n        scrollHandleColor:{default:'#009688'},\r\n        intersectableClass:{default:'intersectable'},\r\n        cameraEl:{type:'selector'},\r\n        lookControlsComponent:{default:'look-controls'},\r\n    },\r\n    init() {\r\n        // Setup scroll bar and panel backing.\r\n        this.setupElements();\r\n        // Grab content container.\r\n        this.container = this.el.querySelector('.container');\r\n        if(typeof this.container === 'undefined'){\r\n            throw 'ui-scroll-pane needs an entity inside it with the class \"container\" - <a-entity class=\"container\"></a-entity>';\r\n        }\r\n        // Setup scroll bar.\r\n        this.scrollBarWidth = this.rail.getAttribute('width');\r\n        this.container.setAttribute('position',(-this.data.width/2)+' '+((this.data.height/2))+' 0');\r\n        this.rail.setAttribute('position',((this.data.width/2)+this.data.scrollPadding)+' 0 '+(this.data.scrollZOffset+0.0002));\r\n        this.handle.setAttribute('position',((this.data.width/2)+this.data.scrollPadding)+' 0 '+(this.data.scrollZOffset+0.0005));\r\n        this.el.sceneEl.renderer.localClippingEnabled = true;\r\n        // Setup content clips.\r\n        this.content_clips = [\r\n            new THREE.Plane( new THREE.Vector3( 0, 1, 0 ), (this.data.height/2) ),\r\n            new THREE.Plane( new THREE.Vector3( 0, -1, 0 ), (this.data.height/2) ),\r\n            new THREE.Plane( new THREE.Vector3( -1, 0, 0 ), (this.data.width/2) ),\r\n            new THREE.Plane( new THREE.Vector3( 1, 0, 0 ), (this.data.width/2) )\r\n        ];\r\n        // Pause/play camera look controls\r\n        const playPauseCamera = method=>{\r\n            if(this.data.cameraEl&&this.data.cameraEl.components[this.data.lookControlsComponent]){\r\n                this.data.cameraEl.components[this.data.lookControlsComponent][method]();\r\n            }\r\n        };\r\n        // Setup mouse move handler for scrolling and updating scroll handle.\r\n        const mousemove = e=>this.mouseMove(e);\r\n        // Start scroll\r\n        this.handle.addEventListener('mousedown',e=>{\r\n            // Pause look controls to allow scrolling\r\n            playPauseCamera('pause');\r\n            this.isDragging = true;\r\n            // Store the start point offset\r\n            this.handlePos = this.handle.object3D.worldToLocal(e.detail.intersection.point).y;\r\n            this.backgroundPanel.addEventListener('ui-mousemove',mousemove);\r\n            // Start changes\r\n            UI.utils.isChanging(this.el.sceneEl,this.handle.uuid);\r\n            // Prevent default behaviour of event\r\n            UI.utils.preventDefault(e);\r\n        });\r\n        // End scroll\r\n        const endScroll = e=>{\r\n            if(this.isDragging){\r\n                this.backgroundPanel.removeEventListener('ui-mousemove',mousemove);\r\n                // Play look controls once scrolling is finished\r\n                playPauseCamera('play');\r\n                this.isDragging = false;\r\n                // Stop changes\r\n                UI.utils.stoppedChanging(this.handle.uuid);\r\n                UI.utils.stoppedChanging(this.rail.uuid);\r\n                // Prevent default behaviour of event\r\n                UI.utils.preventDefault(e);\r\n            }\r\n        };\r\n        this.backgroundPanel.addEventListener('mouseup',endScroll);\r\n        this.backgroundPanel.addEventListener('mouseleave',endScroll);\r\n        // // Handle clicks on rail to scroll\r\n        this.rail.addEventListener('mousedown',e=>{\r\n\r\n            UI.utils.isChanging(this.el.sceneEl,this.rail.uuid);\r\n            // Pause look controls\r\n            this.isDragging = true;\r\n            // Reset handle pos to center of handle\r\n            this.handlePos = 0;\r\n            // Scroll immediately and register mouse move events.\r\n            this.scroll(this.rail.object3D.worldToLocal(e.detail.intersection.point).y);\r\n            this.backgroundPanel.addEventListener('ui-mousemove',mousemove);\r\n            // Prevent default behaviour of event\r\n            UI.utils.preventDefault(e);\r\n        });\r\n\r\n        // Setup content clips after the scene is loaded to be able to access all entity materials\r\n        this.el.sceneEl.addEventListener('loaded',()=>{\r\n            // update content clips world positions from this current element.\r\n            this.el.sceneEl.object3D.updateMatrixWorld();\r\n            this.updateContentClips();\r\n            this.updateContent();\r\n            this.el.emit('scroll-pane-loaded');\r\n        });\r\n        this.setupMouseWheelScroll();\r\n    },\r\n    updateContentClips(){\r\n        this.content_clips[0].applyMatrix4(this.el.object3D.matrixWorld);\r\n        this.content_clips[1].applyMatrix4(this.el.object3D.matrixWorld);\r\n        this.content_clips[2].applyMatrix4(this.el.object3D.matrixWorld);\r\n        this.content_clips[3].applyMatrix4(this.el.object3D.matrixWorld);\r\n    },\r\n    updateContent(){\r\n        this.setChildClips();\r\n        if(typeof Yoga !== 'undefined')this.initialiseYoga(this.container,this.data.width*100);\r\n        this.container.yoga_node.calculateLayout(this.data.width*100, 'auto', Yoga.DIRECTION_LTR);\r\n        this.content_height = Number.NEGATIVE_INFINITY;\r\n        if(typeof Yoga !== 'undefined')this.updateYoga(this.container);\r\n        this.handleSize = THREE.Math.clamp((this.data.height/this.content_height),0.1,1);\r\n        this.handle.setAttribute('height',this.data.height*this.handleSize);\r\n        this.handle.setAttribute('width',this.handleSize===1?0.00000001:0.1);\r\n        this.rail.setAttribute('width',this.handleSize===1?0.00000001:0.1);\r\n        this.rail.setAttribute('color',this.handleSize===1?'#efefef':'#fff');\r\n        this.handle.setAttribute('position',((this.data.width/2)+this.data.scrollPadding)+' '+(this.data.height-(this.data.height*this.handleSize))/2+' '+(this.data.scrollZOffset+0.0005));\r\n    },\r\n    mouseMove(e){\r\n        if(this.isDragging){\r\n            let pos = this.rail.object3D.worldToLocal(e.detail.intersection.point);\r\n            this.scroll(pos.y-this.handlePos);\r\n        }\r\n    },\r\n    scroll(positionY){\r\n        let min = (-this.data.height/2)+(this.data.height*this.handleSize)/2;\r\n        let max = (this.data.height/2)-(this.data.height*this.handleSize)/2;\r\n        // Set scroll position with start point offset.\r\n        let scroll_pos = THREE.Math.clamp(positionY,min,max);\r\n        let scroll_perc = 1-((scroll_pos-min)/(max-min));\r\n        this.container.object3D.position.y = ((this.content_height-this.data.height)*scroll_perc)+(this.data.height/2);\r\n        this.handle.setAttribute('position',((this.data.width/2)+this.data.scrollPadding)+' '+scroll_pos+' '+(this.data.scrollZOffset+0.0005));\r\n    },\r\n    setupMouseWheelScroll(){\r\n        this.backgroundPanel.addEventListener('ui-mousewheel',e=>{\r\n            if(this.handleSize!==1){\r\n                // Start changes\r\n                UI.utils.isChanging(this.el.sceneEl,this.el.object3D.uuid);\r\n                this.scroll(this.handle.getAttribute('position').y+(-e.detail.evt.deltaY/800));\r\n                // Stop changes\r\n                UI.utils.stoppedChanging(this.el.object3D.uuid);\r\n                UI.utils.preventDefault(e);\r\n            }\r\n        });\r\n    },\r\n    setupElements(){\r\n        // Setup background with mouse input to catch mouse move events when not exactly over the scroll bar.\r\n        this.backgroundPanel = document.createElement('a-plane');\r\n        this.backgroundPanel.setAttribute('class','background '+this.data.intersectableClass);\r\n        this.backgroundPanel.setAttribute('width',this.data.width+1);\r\n        this.backgroundPanel.setAttribute('height',this.data.height+1);\r\n        this.backgroundPanel.setAttribute('position','0 0 -0.013');\r\n        this.backgroundPanel.setAttribute('opacity',0.0001);\r\n        this.backgroundPanel.setAttribute('transparent',true);\r\n\r\n        this.el.appendChild(this.backgroundPanel);\r\n\r\n        // Add scroll bar rail.\r\n        this.rail = document.createElement('a-plane');\r\n        this.rail.setAttribute('class','rail '+this.data.intersectableClass);\r\n        this.rail.setAttribute('width',0.1);\r\n        this.rail.setAttribute('height',this.data.height);\r\n        this.rail.setAttribute('shader','flat');\r\n        this.el.appendChild(this.rail);\r\n\r\n        // Add scroll bar handle.\r\n        this.handle = document.createElement('a-plane');\r\n        this.handle.setAttribute('class','handle '+this.data.intersectableClass);\r\n        this.handle.setAttribute('width',0.1);\r\n        this.handle.setAttribute('height',this.data.height);\r\n        this.handle.setAttribute('color',this.data.scrollHandleColor);\r\n        this.handle.setAttribute('shader','flat');\r\n        this.el.appendChild(this.handle);\r\n    },\r\n    setupYogaNode(node,width,height,properties){\r\n        // Parse yoga properties and call the yoga methods to setup this layout node.\r\n        if(!properties.hasOwnProperty('setWidth'))node.setWidth(width);\r\n        if(!properties.hasOwnProperty('setHeight'))node.setHeight(height);\r\n        for(let method in properties){\r\n            if(properties.hasOwnProperty(method)&&method.indexOf('Edge')===-1){\r\n                if([\"setMarginLeft\",\"setMarginPercentLeft\",\"setPaddingLeft\",\"setBorderLeft\",\"setPositionLeft\",\"setPositionPercentLeft\"]\r\n                    .indexOf(method)>-1){\r\n                    node[method](Yoga.EDGE_LEFT,properties[method]);\r\n                }else if([\"setMarginRight\",\"setMarginPercentRight\",\"setPaddingRight\",\"setBorderRight\",\"setPositionRight\",\"setPositionPercentRight\"]\r\n                    .indexOf(method)>-1){\r\n                    node[method](Yoga.EDGE_RIGHT,properties[method]);\r\n                }else if([\"setMarginTop\",\"setMarginPercentTop\",\"setPaddingTop\",\"setBorderTop\",\"setPositionTop\",\"setPositionPercentTop\"]\r\n                    .indexOf(method)>-1){\r\n                    node[method](Yoga.EDGE_TOP,properties[method]);\r\n                }else if([\"setMarginBottom\",\"setMarginPercentBottom\",\"setPaddingBottom\",\"setBorderBottom\",\"setPositionBottom\",\"setPositionPercentBottom\"]\r\n                    .indexOf(method)>-1){\r\n                    node[method](Yoga.EDGE_BOTTOM,properties[method]);\r\n                }else if([\"setMargin\",\"setMarginPercent\",\"setPadding\",\"setBorder\",\"setPosition\",\"setPositionPercent\"]\r\n                    .indexOf(method)>-1){\r\n                    node[method](Yoga.EDGE_ALL,properties[method]);\r\n                }else if(method.indexOf('setMarginAuto')>-1){\r\n                    let side = method.replace('setMarginAuto','');\r\n                    switch(side){\r\n                        case \"\":\r\n                            node[method](Yoga.EDGE_ALL);\r\n                            break;\r\n                        case \"Left\":\r\n                            node[method](Yoga.EDGE_LEFT);\r\n                            break;\r\n                        case \"Right\":\r\n                            node[method](Yoga.EDGE_RIGHT);\r\n                            break;\r\n                        case \"Top\":\r\n                            node[method](Yoga.EDGE_TOP);\r\n                            break;\r\n                        case \"Bottom\":\r\n                            node[method](Yoga.EDGE_BOTTOM);\r\n                            break;\r\n                    }\r\n                }else if([\"setWidthAuto\",\"setHeightAuto\"]\r\n                .indexOf(method)>-1) {\r\n                    node[method]();\r\n                }else{\r\n                    node[method](properties[method]);\r\n                }\r\n            }\r\n        }\r\n    },\r\n    initialiseYoga(parent){\r\n        // Traverse the tree and setup Yoga layout nodes with default settings\r\n        // or settings specified in the elements yoga properties component.\r\n        parent = parent||this.container;\r\n        // Automatically detect the entity width / height by the element tagname.\r\n        let width = 0,height = 0;\r\n        switch(parent.tagName){\r\n            case \"A-TEXT\":\r\n            case \"A-TRIANGLE\":\r\n            case \"A-UI-TEXT-INPUT\":\r\n            case \"A-UI-NUMBER-INPUT\":\r\n            case \"A-UI-INT-INPUT\":\r\n            case \"A-UI-PASSWORD-INPUT\":\r\n                width = parent.getAttribute('width');\r\n                height = parent.getAttribute('height');\r\n                break;\r\n            case \"A-UI-BUTTON\":\r\n            case \"A-PLANE\":\r\n            case \"A-ENTITY\":\r\n                width = Number(parent.components.geometry?parent.components.geometry.data.width:parent.getAttribute('width'));\r\n                height = Number(parent.components.geometry?parent.components.geometry.data.height:parent.getAttribute('height'));\r\n                break;\r\n            case \"A-UI-FAB-BUTTON\":\r\n            case \"A-UI-FAB-BUTTON-SMALL\":\r\n            case \"A-CIRCLE\":\r\n                width = Number(parent.components.geometry?parent.components.geometry.data.radius*2:(parent.getAttribute('radius')||0)*2);\r\n                height = width;\r\n                break;\r\n            case \"A-RING\":\r\n                width = Number(parent.components.geometry?parent.components.geometry.data[\"radius-outer\"]*2:(parent.getAttribute('radius-outer')||0)*2);\r\n                height = width;\r\n                break;\r\n            case \"A-UI-SWITCH\":\r\n            case \"A-UI-CHECKBOX\":\r\n            case \"A-UI-RADIO\":\r\n                let componentName = parent.tagName.substr(2).toLowerCase();\r\n                width = parent.components[componentName].width;\r\n                height = parent.components[componentName].height;\r\n                break;\r\n        }\r\n\r\n        if(!parent.yoga_node){\r\n            parent.yoga_node = Yoga.Node.create();\r\n            if(parent.components[\"ui-yoga\"]){\r\n                this.setupYogaNode(parent.yoga_node,width ? width * 100 : 'auto',height ? height * 100 : 'auto',\r\n                    parent.components[\"ui-yoga\"].getProperties());\r\n            }else{\r\n                parent.yoga_node.setWidth(width ? width * 100 : 'auto');\r\n                parent.yoga_node.setHeight(height ? height * 100 : 'auto');\r\n                parent.yoga_node.setJustifyContent(Yoga.JUSTIFY_FLEX_START);\r\n                parent.yoga_node.setFlexDirection(Yoga.FLEX_DIRECTION_ROW);\r\n                parent.yoga_node.setAlignContent(Yoga.ALIGN_AUTO);\r\n                parent.yoga_node.setFlexWrap(Yoga.WRAP_WRAP);\r\n            }\r\n            // Add the yoga node to the Yoga tree.\r\n            if(parent.parentElement&&parent.parentElement.yoga_node){\r\n                // Default margin if none set;\r\n                if(!parent.components[\"ui-yoga\"]){\r\n                    parent.yoga_node.setMargin(Yoga.EDGE_RIGHT, 5);\r\n                    parent.yoga_node.setMargin(Yoga.EDGE_BOTTOM, 5);\r\n                }\r\n                parent.parentElement.yoga_node.insertChild(parent.yoga_node,parent.parentElement.yoga_node.getChildCount());\r\n            }else{\r\n                // Default root padding if none set;\r\n                if(!parent.components[\"ui-yoga\"]){\r\n                    parent.yoga_node.setPadding(Yoga.EDGE_ALL,2);\r\n                }\r\n            }\r\n        }\r\n        [].slice.call(parent.children).forEach(child=>{\r\n            if(child.classList.contains('no-yoga-layout')){\r\n                return;\r\n            }\r\n            this.initialiseYoga(child);\r\n        });\r\n    },\r\n    updateYoga(parent){\r\n        // Update the entity positions from the Yoga layout.\r\n        [].slice.call(parent.children).forEach(child=>{\r\n            if(child.classList.contains('no-yoga-layout')){\r\n                return;\r\n            }\r\n            let position;\r\n            if(child.tagName===\"A-ENTITY\"){\r\n                position = {\r\n                    x:(child.yoga_node.getComputedLeft()/100),\r\n                    y:(child.yoga_node.getComputedTop()/100),\r\n                };\r\n            }else{\r\n                position = {\r\n                    x:(child.yoga_node.getComputedLeft()/100)+(child.yoga_node.getComputedWidth()/200),\r\n                    y:(child.yoga_node.getComputedTop()/100)+(child.yoga_node.getComputedHeight()/200),\r\n                };\r\n            }\r\n            let highest = (child.yoga_node.getComputedTop()/100)+(child.yoga_node.getComputedHeight()/100);\r\n            if(highest>this.content_height){\r\n                this.content_height = highest;\r\n            }\r\n            child.setAttribute('position',position.x+' '+(-position.y)+' '+child.getAttribute('position').z);\r\n            this.updateYoga(child);\r\n        });\r\n    },\r\n    setChildClips(parent){\r\n        // Traverse the entity tree inside the content container and add content clips to each material found.\r\n        parent = parent||this.container;\r\n        [].slice.call(parent.children).forEach(child=>{\r\n            child._content_clips = this.content_clips;\r\n            let traverse = ()=>{\r\n                child.object3D.traverse(object=>{\r\n                    if(object.material){\r\n                        // Add shader chunks to be able to clip shader materials - needed for <a-text> entities.\r\n                        if(object.material.isRawShaderMaterial){\r\n                            object.material.onBeforeCompile = function ( shader ) {\r\n                                let vertexParts = shader.vertexShader.split('\\n');\r\n                                let vertexMainIndex = vertexParts.indexOf('void main(void) {');\r\n                                vertexParts.splice(vertexMainIndex,0,'#include <clipping_planes_pars_vertex>');\r\n                                vertexParts.splice(vertexMainIndex+2,0,'#include <begin_vertex>');\r\n                                vertexParts.splice(vertexParts.length-2,0,'#include <project_vertex>');\r\n                                vertexParts.splice(vertexParts.length-2,0,'#include <clipping_planes_vertex>');\r\n                                shader.vertexShader = vertexParts.join('\\n');\r\n                                let fragmentParts = shader.fragmentShader.split('\\n');\r\n                                let fragmentMainIndex = fragmentParts.indexOf('void main() {');\r\n                                fragmentParts.splice(fragmentMainIndex,0,'#include <clipping_planes_pars_fragment>');\r\n                                fragmentParts.splice(fragmentMainIndex+2,0,'#include <clipping_planes_fragment>');\r\n                                shader.fragmentShader = fragmentParts.join('\\n');\r\n                            };\r\n                            object.material.clipping = true;\r\n                        }\r\n                        // Set the content clipping planes.\r\n                        object.material.clippingPlanes = this.content_clips;\r\n                        object.material.clipShadows = true;\r\n                        object.material.needsUpdate = true;\r\n                    }\r\n                });\r\n            };\r\n            if(child.components.text){\r\n                // Wait for the font to load first.\r\n                child.addEventListener('textfontset',()=>{\r\n\r\n                    UI.utils.isChanging(this.el.sceneEl,this.el.object3D.uuid);\r\n                    traverse();\r\n\r\n                    setTimeout(()=>UI.utils.stoppedChanging(this.el.object3D.uuid),200);\r\n                })\r\n            }else{\r\n                traverse();\r\n            }\r\n            // Recurse.\r\n            this.setChildClips(child);\r\n        })\r\n    }\r\n});","/* global AFRAME */\r\n/**\r\n * A component shim the mouse move event for the AFRAME cursor raycaster.\r\n * @namespace aframe-material-collection\r\n * @component ui-mouse-shim\r\n * @author Shane Harris\r\n */\r\nmodule.exports = AFRAME.registerComponent('ui-mouse-shim', {\r\n    schema:{\r\n        fps:{type:'number',default:60}\r\n    },\r\n    init(){\r\n        if (!this.el.components.raycaster) {\r\n            throw 'ui-mouse-move component needs the raycaster component to be added.'\r\n        }\r\n        // Add support for mouse wheel\r\n        this.el.sceneEl.renderer.domElement.addEventListener( 'mousewheel', this.onMouseWheel.bind(this), false);\r\n    },\r\n    onMouseWheel(e){\r\n        this.emitMouseEvent('ui-mousewheel',e);\r\n    },\r\n    tick() {\r\n        if(new Date().getTime()-this.lastMouseMoveTime<(1000/this.data.fps))return;\r\n        this.emitMouseEvent('ui-mousemove');\r\n        this.lastMouseMoveTime = new Date().getTime();\r\n    },\r\n    emitMouseEvent(eventType,event){\r\n        // Get current intersections from raycaster component.\r\n        this.el.components.raycaster.intersections.forEach(intersection=>{\r\n            if(intersection.object.el){\r\n                // Emit custom mouse move event ont he intersected element.\r\n                intersection.object.el.emit(eventType,{cursorEl:this.el,intersection:intersection,evt:event})\r\n            }\r\n        });\r\n    }\r\n});","/* global AFRAME */\r\n/**\r\n * Checkbox A simple component to listen for two click events in quick succession.\r\n * @namespace aframe-material-collection\r\n * @component ui-double-click\r\n * @author Shane Harris\r\n */\r\nmodule.exports = AFRAME.registerComponent('ui-double-click', {\r\n    schema:{\r\n        timeout:{type:'int',default:200}\r\n    },\r\n    init() {\r\n        let last_click = 0;\r\n        // Add click event for listening for two clicks within the specified timespan.\r\n        this.el.addEventListener('mousedown',e=>{\r\n            let now = new Date().getTime();\r\n            if(now-last_click<this.data.timeout){\r\n                this.el.emit('dblclick',e);\r\n                // Reset last click\r\n                last_click = 0;\r\n                e.preventDefault();\r\n            }\r\n            last_click = now;\r\n        })\r\n    }\r\n});","/* global AFRAME,TWEEN */\r\n/**\r\n * Checkbox Component for aframe-material-collection. Includes animation and disabled state.\r\n * @namespace aframe-material-collection\r\n * @component ui-checkbox\r\n * @author Shane Harris\r\n */\r\n\r\nmodule.exports = AFRAME.registerComponent('ui-checkbox', {\r\n    schema: {\r\n        value: {type:'boolean',default: false},\r\n        selectedColor: {default: '#009688'},\r\n        unselectedColor: {default: '#7f7f7f'},\r\n        disabledColor: {default: '#afafaf'},\r\n        indeterminate: {type:'boolean',default: false},\r\n        disabled:{type:'boolean',default: false},\r\n        intersectableClass: {default: 'intersectable'}\r\n    },\r\n    init() {\r\n        this.width = 0.15;\r\n        this.height = 0.15;\r\n        this.container = document.createElement('a-entity');\r\n        this.container.setAttribute('class','no-yoga-layout');\r\n        this.el.appendChild(this.container);\r\n        this.setupLines();\r\n        // Add backing element to make the whole object clickable.\r\n        let backing = document.createElement('a-plane');\r\n        backing.setAttribute('width',0.105);\r\n        backing.setAttribute('height',0.105);\r\n        backing.setAttribute('position','0 0 -0.002');\r\n        backing.setAttribute('shader','flat');\r\n        backing.setAttribute('class',this.data.intersectableClass+' no-yoga-layout');\r\n        backing.setAttribute('opacity',0.0001);\r\n        backing.setAttribute('transparent',true);\r\n        this.el.appendChild(backing);\r\n        this.clickHandler = ()=>{\r\n            this.data.value = !this.data.value;\r\n            this.click();\r\n        };\r\n        // Setup initial state\r\n        this.setSelected();\r\n        this.setDisabled();\r\n        this.setTransform(1);\r\n    },\r\n    updateSchema(){\r\n        if(this.data){\r\n            this.setDisabled();\r\n            if(this.data.disabled){\r\n                if(this.data.value){\r\n                    this.data.value=false;\r\n                    this.data.indeterminate=false;\r\n                    this.click();\r\n                }\r\n            }else{\r\n                this.click();\r\n            }\r\n        }\r\n    },\r\n    setTransform(x){\r\n        // Adjust position and rotation based on the interpolated value x between 0 and 1.\r\n        // Used to offset the checkbox when in a checked state\r\n        if(this.data.value){\r\n            this.container.setAttribute('rotation',{x:0,y:0,z:-45*x});\r\n            this.container.setAttribute('position',{x:-0.025*x,y:0.05*x,z:0});\r\n        }else{\r\n            this.container.setAttribute('rotation',{x:0,y:0,z:-45+(45*x)});\r\n            this.container.setAttribute('position',{x:0.025-(0.025*x),y:0.05-(0.05*x),z:0});\r\n        }\r\n    },\r\n    click(){\r\n        // Reset indeterminate state on click\r\n        this.data.indeterminate = false;\r\n        // Hide / Show left and top lines for checked state, or right line aswell for intermediate state.\r\n        this.setSelected();\r\n        // run animation\r\n        this.animateSelected()\r\n    },\r\n    animateSelected(){\r\n        let _this = this;\r\n        // Start changes\r\n        UI.utils.isChanging(this.el.sceneEl,this.el.object3D.uuid);\r\n        new TWEEN.Tween({x:0})\r\n            .to({ x: 1}, 200)\r\n            .onUpdate(function(){\r\n                _this.setTransform(this.x);\r\n            })\r\n            .onComplete(function(){\r\n                // Stop changes\r\n                UI.utils.stoppedChanging(_this.el.object3D.uuid);\r\n            })\r\n            .easing(TWEEN.Easing.Exponential.Out).start();\r\n    },\r\n    setSelected(){\r\n        // Hide / Show lines that make up checkbox based on the current state.\r\n        if(this.data.value){\r\n            this.topLine.setAttribute('scale','0.000001 0.000001 0.000001');\r\n            this.leftLine.setAttribute('scale','0.000001 0.000001 0.000001');\r\n            this.bottomLine.setAttribute('scale','1 1 1');\r\n            this.rightLine.setAttribute('scale','1 1 1');\r\n            this.bottomLine.setAttribute('position','0.025 -0.05 0');\r\n            this.rightLine.setAttribute('position','0.05 0 0');\r\n            this.bottomLine.setAttribute('rotation','0 0 90');\r\n            this.bottomLine.setAttribute('height',0.05);\r\n            this.bottomLine.setAttribute('color',this.data.selectedColor);\r\n            this.rightLine.setAttribute('color',this.data.selectedColor);\r\n        }else if(this.data.indeterminate){\r\n            this.topLine.setAttribute('scale','0.000001 0.000001 0.000001');\r\n            this.leftLine.setAttribute('scale','0.000001 0.000001 0.000001');\r\n            this.bottomLine.setAttribute('scale','1 1 1');\r\n            this.rightLine.setAttribute('scale','0.000001 0.000001 0.000001');\r\n            this.bottomLine.setAttribute('position','0 0 0');\r\n            this.bottomLine.setAttribute('rotation','0 0 90');\r\n            this.bottomLine.setAttribute('height',0.1);\r\n            this.bottomLine.setAttribute('color',this.data.unselectedColor);\r\n            this.rightLine.setAttribute('color',this.data.unselectedColor);\r\n        }else{\r\n            this.topLine.setAttribute('scale','1 1 1');\r\n            this.leftLine.setAttribute('scale','1 1 1');\r\n            this.bottomLine.setAttribute('scale','1 1 1');\r\n            this.rightLine.setAttribute('scale','1 1 1');\r\n            this.bottomLine.setAttribute('height',0.1);\r\n            this.leftLine.setAttribute('position','-0.05 0 0');\r\n            this.rightLine.setAttribute('position','0.05 0 0');\r\n            this.topLine.setAttribute('position','0 0.05 0');\r\n            this.bottomLine.setAttribute('position','0 -0.05 0');\r\n            this.topLine.setAttribute('rotation','0 0 90');\r\n            this.bottomLine.setAttribute('rotation','0 0 90');\r\n            this.bottomLine.setAttribute('color',this.data.unselectedColor);\r\n            this.rightLine.setAttribute('color',this.data.unselectedColor);\r\n        }\r\n    },\r\n    setupLines(){\r\n        // Add four lines to make a square wireframe\r\n        this.leftLine = this.line(true);\r\n        this.rightLine = this.line(true);\r\n        this.topLine = this.line(true);\r\n        this.bottomLine = this.line(true);\r\n        this.container.appendChild(this.topLine);\r\n        this.container.appendChild(this.leftLine);\r\n        this.container.appendChild(this.bottomLine);\r\n        this.container.appendChild(this.rightLine);\r\n    },\r\n    setDisabled(){\r\n        // Check and set the disabled state of the checkbox - add / remove click handler.\r\n        if(this.data.disabled){\r\n            this.el.removeEventListener('mousedown',this.clickHandler);\r\n            this.topLine.setAttribute('color',this.data.disabledColor);\r\n            this.leftLine.setAttribute('color',this.data.disabledColor);\r\n            this.rightLine.setAttribute('color',this.data.disabledColor);\r\n            this.bottomLine.setAttribute('color',this.data.disabledColor);\r\n        }else{\r\n            this.el.addEventListener('mousedown',this.clickHandler);\r\n            this.topLine.setAttribute('color',this.data.unselectedColor);\r\n            this.leftLine.setAttribute('color',this.data.unselectedColor);\r\n            this.rightLine.setAttribute('color',this.data.value?this.data.selectedColor:this.data.unselectedColor);\r\n            this.bottomLine.setAttribute('color',this.data.value?this.data.selectedColor:this.data.unselectedColor);\r\n        }\r\n    },\r\n    line(is_vertical){\r\n        // Create horizontal/vertical line.\r\n        let line = document.createElement('a-plane');\r\n        line.setAttribute('width',is_vertical?0.01:0.105);\r\n        line.setAttribute('height',is_vertical?0.105:0.01);\r\n        line.setAttribute('class','no-yoga-layout');\r\n        line.setAttribute('shader','flat');\r\n        return line;\r\n    }\r\n});","/* global AFRAME,TWEEN */\r\n/**\r\n * Radio Component for aframe-material-collection. Resets other radio buttons siblings and includes a disabled state.\r\n * @namespace aframe-material-collection\r\n * @component ui-radio\r\n * @author Shane Harris\r\n */\r\n\r\nmodule.exports = AFRAME.registerComponent('ui-radio', {\r\n    schema: {\r\n        value: {default: ''},\r\n        selected:{type: 'boolean', default: false},\r\n        selectedColor: {default: '#009688'},\r\n        selectedRadius: {type:'number',default: 0.045},\r\n        unselectedColor: {default: '#5f5f5f'},\r\n        disabledColor: {default: '#afafaf'},\r\n        disabled: {type: 'boolean', default: false},\r\n        intersectableClass: {default: 'intersectable'},\r\n    },\r\n    init() {\r\n        this.width = this.data.size||0.15;\r\n        this.height = this.data.size||0.15;\r\n        // Create center circle for checked state.\r\n        this.filled_circle = document.createElement('a-circle');\r\n        this.filled_circle.setAttribute('radius',this.data.selectedRadius);\r\n        this.filled_circle.setAttribute('scale','0 0 0');\r\n        this.filled_circle.setAttribute('color',this.data.disabled?this.data.disabledColor:this.data.selectedColor);\r\n        this.filled_circle.setAttribute('shader','flat');\r\n        this.filled_circle.setAttribute('class','no-yoga-layout');\r\n        this.filled_circle.setAttribute('segments',6);\r\n        this.el.components.material.material.color = new THREE.Color(this.data.disabled?this.data.disabledColor:this.data.unselectedColor);\r\n        this.el.appendChild(this.filled_circle);\r\n        // Create backing for getting click events.\r\n        let backing = document.createElement('a-circle');\r\n        backing.setAttribute('radius',this.data.selectedRadius);\r\n        backing.setAttribute('position','0 0 -0.002');\r\n        backing.setAttribute('class',this.data.intersectableClass+' no-yoga-layout');\r\n        backing.setAttribute('shader','flat');\r\n        backing.setAttribute('segments',6);\r\n        backing.setAttribute('opacity',0.0001);\r\n        backing.setAttribute('transparent',true);\r\n        this.el.appendChild(backing);\r\n        // Set this if it is checked.\r\n        if(this.data.selected){\r\n            this.click();\r\n        }\r\n        // TODO: need to add play/pause methods for registering/unregistering events.\r\n        if(!this.data.disabled){\r\n            this.el.addEventListener('mousedown',e=>this.click(e));\r\n        }\r\n    },\r\n    deselect(){\r\n        // Deselect this radio with a scale animation on the circle.\r\n        this.el.setAttribute('selected',false);\r\n        let _this = this;\r\n        // Start changes\r\n        UI.utils.isChanging(this.el.sceneEl,this.filled_circle.object3D.uuid);\r\n        new TWEEN.Tween({x:1})\r\n            .to({ x: 0.000001}, 200)\r\n            .onUpdate(function(){\r\n                _this.filled_circle.object3D.scale.set(this.x,this.x,this.x);\r\n            })\r\n            .onComplete(()=>{\r\n                // Stop changes\r\n                UI.utils.stoppedChanging(_this.filled_circle.object3D.uuid);\r\n                this.isRippling = false;\r\n            })\r\n            .easing(TWEEN.Easing.Exponential.Out).start();\r\n    },\r\n    click(){\r\n        // Get all other radio siblings and reset their state if they are selected.\r\n        [].slice.call(this.el.parentNode.querySelectorAll('a-ring,a-ui-radio')).filter(el=>el!==this.el).forEach(ring=>{\r\n            if(ring.components['ui-radio']&&ring.getAttribute('selected')===\"true\"){\r\n                ring.components['ui-radio'].deselect();\r\n            }\r\n        });\r\n        // Set this radio's selected state.\r\n        this.el.setAttribute('selected',true);\r\n        // Throttle animations.\r\n        if(this.isSelecting)return;\r\n        this.isSelecting = true;\r\n        let _this = this;\r\n        // Start changes\r\n        UI.utils.isChanging(this.el.sceneEl,this.filled_circle.object3D.uuid);\r\n        new TWEEN.Tween({x:0.000001})\r\n            .to({ x: 1}, 250)\r\n            .onUpdate(function(){\r\n                _this.filled_circle.object3D.scale.set(this.x,this.x,this.x);\r\n            })\r\n            .onComplete(()=>{\r\n                // Stop changes\r\n                UI.utils.stoppedChanging(this.filled_circle.object3D.uuid);\r\n                this.isSelecting = false;\r\n            })\r\n            .easing(TWEEN.Easing.Exponential.Out).start();\r\n    }\r\n});","/* global AFRAME,THREE */\r\n/**\r\n * Rounded borders Component for aframe-material-collection. Expects an a-plane entity.\r\n * @namespace aframe-material-collection\r\n * @component ui-border\r\n * @author Shane Harris\r\n */\r\nmodule.exports = AFRAME.registerComponent('ui-border', {\r\n    schema: {\r\n        borderRadius: {type: 'number', default: 0.01},\r\n        curveSegments:{type: 'int', default: 1},\r\n        borderWidth:{type: 'number', default: 0.015},\r\n        color:{default:\"#8f8f8f\"},\r\n        numberOfPoints:{type:'int',default:180}\r\n    },\r\n    init() {\r\n        let mesh = this.el.getObject3D('mesh');\r\n        let roundedRectShape = new THREE.Shape();\r\n        // Draw the Rounded rectangle shape centered in the object - from three.js shapes example.\r\n        ( function roundedRect( ctx, x, y, width, height, radius ) {\r\n            ctx.moveTo( x, y + radius );\r\n            ctx.lineTo( x, y + height - radius );\r\n            ctx.quadraticCurveTo( x, y + height, x + radius, y + height );\r\n            ctx.lineTo( x + width - radius, y + height );\r\n            ctx.quadraticCurveTo( x + width, y + height, x + width, y + height - radius );\r\n            ctx.lineTo( x + width, y + radius );\r\n            ctx.quadraticCurveTo( x + width, y, x + width - radius, y );\r\n            ctx.lineTo( x + radius, y );\r\n            ctx.quadraticCurveTo( x, y, x, y + radius );\r\n        } )( roundedRectShape, -mesh.geometry.metadata.parameters.width/2, -mesh.geometry.metadata.parameters.height/2, mesh.geometry.metadata.parameters.width, mesh.geometry.metadata.parameters.height, this.data.borderRadius );\r\n\r\n        let points = roundedRectShape.getSpacedPoints(this.data.numberOfPoints);\r\n        let geometryPoints = new THREE.BufferGeometry().setFromPoints( points );\r\n        this.el.setObject3D('mesh',new THREE.Points( geometryPoints, new THREE.PointsMaterial( { color: this.data.color, size: this.data.borderWidth } ) ));\r\n\r\n    }\r\n});","/* global AFRAME */\r\n/**\r\n * A curved-plane component to curve a plane primitive.\r\n * @namespace aframe-material-collection\r\n * @component ui-curved-plane\r\n * @author Shane Harris\r\n */\r\n\r\nmodule.exports = AFRAME.registerComponent('ui-curved-plane', {\r\n    schema: {\r\n        depth:{type:'number',default:0.03}\r\n    },\r\n    init(){\r\n        let mesh = this.el.getObject3D('mesh');\r\n        let width = this.el.getAttribute('width');\r\n        let height = this.el.getAttribute('height');\r\n        let browser_pane = new THREE.PlaneGeometry(width, height, 5, 1);\r\n        let curve = new THREE.CubicBezierCurve3(\r\n            browser_pane.vertices[0],\r\n            new THREE.Vector3(0.375*width, 0, -this.data.depth*width ),\r\n            new THREE.Vector3(0.625*width, 0, -this.data.depth*width ),\r\n            browser_pane.vertices[(browser_pane.vertices.length/2) - 1]\r\n        );\r\n        let planePoints = curve.getPoints(Math.abs(browser_pane.vertices.length/2)-1);\r\n        for (let edgeI = 1; edgeI < 3; edgeI++) {\r\n            for (let pointI = 0; pointI < planePoints.length; pointI++) {\r\n                browser_pane.vertices[(edgeI === 2 ? planePoints.length + pointI : pointI)].z = planePoints[pointI].z;\r\n            }\r\n        }\r\n        mesh.geometry = browser_pane;\r\n    }\r\n});","/* global AFRAME,THREE */\r\n/**\r\n * Modal Component for aframe-material-collection.\r\n * @namespace aframe-material-collection\r\n * @component ui-modal\r\n * @author Shane Harris\r\n */\r\nmodule.exports = AFRAME.registerComponent('ui-modal', {\r\n    schema: {\r\n        modal:{type:'selector'},\r\n        main:{type:'selector'}\r\n    },\r\n    init(){\r\n        if(this.data.modal&&this.data.main){\r\n            // Get the modal panel to be able to animate its scale on open/close.\r\n            this.modalPanel = document.querySelector(this.data.modal.getAttribute('ui-panel'));\r\n            let mainComponents = this.data.main.components;\r\n            let modalComponents = this.data.modal.components;\r\n            // Pause rendering of modal until opened.\r\n            if(modalComponents&&modalComponents['ui-renderer']){\r\n                modalComponents['ui-renderer'].pause();\r\n            }\r\n            // Setup close listeners for anything with the class close-modal.\r\n            let close_buttons = this.data.modal.querySelectorAll('.close-modal');\r\n            for(let i = 0; i < close_buttons.length; i++ ){\r\n                let close_button = close_buttons[i];\r\n                close_button.addEventListener('mousedown',()=>{\r\n                    // Pause the modal rendering and play the main rendering again.\r\n                    modalComponents['ui-renderer'].pause();\r\n                    mainComponents['ui-renderer'].playRender();\r\n                    this.tweenModalScale(1,0.0000001);\r\n                });\r\n            }\r\n            // Add click handler for opening the modal, pause the main render screen and play the modal renderer\r\n            this.el.addEventListener('mousedown',()=>{\r\n                if(mainComponents&&mainComponents['ui-renderer']){\r\n                    mainComponents['ui-renderer'].pauseRender();\r\n                    this.tweenModalScale(0.0000001,1);\r\n                    modalComponents['ui-renderer'].play();\r\n                }\r\n            });\r\n        }\r\n    },\r\n    tweenModalScale(from,to){\r\n        return new Promise(r=>{\r\n            let _this = this;\r\n            new TWEEN.Tween({x:from})\r\n                .to({x:to}, 250)\r\n                .onUpdate(function(){\r\n                    if(_this.modalPanel)\r\n                        _this.modalPanel.setAttribute('scale',this.x+' '+this.x+' '+this.x);\r\n                })\r\n                .onComplete(r)\r\n                .easing(TWEEN.Easing.Exponential.Out).start();\r\n        });\r\n    }\r\n});","/* global AFRAME */\r\n/**\r\n * A component to render the UI to a flat plane, removing the objects from the scene and rendering them separately to a\r\n * render target.\r\n * @namespace aframe-material-collection\r\n * @component ui-renderer\r\n * @author Shane Harris\r\n */\r\nmodule.exports = AFRAME.registerComponent('ui-renderer', {\r\n    schema: {\r\n        uiPanel: {type: 'selector'},\r\n        lookControlsEl: {type: 'selector'},\r\n        lookControlsComponent:{default:'look-controls'},\r\n        panelPosition:{type:'vec3',default:{x:0,y:1.6,z:-1}},\r\n        panelSize:{type:'vec2',default:{x:6,y:3}},\r\n        renderResolution:{type:'vec2',default:{x:2048,y:1024}},\r\n        debugRaycaster:{type:'boolean',default: false},\r\n        fps:{type:'number',default:45},\r\n        intersectableClass:{default:'intersectable'}\r\n    },\r\n    init() {\r\n        this.setupBackDrop();\r\n        if(!this.data.uiPanel){\r\n            this.meshEl = this.setupUIPanel();\r\n        }else{\r\n            this.meshEl = this.data.uiPanel;\r\n        }\r\n        // Remove this object from the scene to be rendered separately.\r\n        this.el.object3D.parent.remove(this.el.object3D);\r\n        // Setup fixed camera nd render target.\r\n        this.camera = new THREE.PerspectiveCamera( 100, 2, 0.1, 1000 );\r\n        // Setup render target\r\n        this.renderTarget = new THREE.WebGLRenderTarget(this.data.renderResolution.x,this.data.renderResolution.y, { antialias: true } );\r\n        // Set the texture to the ui panel mesh.\r\n        this.meshEl.getObject3D('mesh').material.map = this.renderTarget.texture;\r\n        // Listen for change events to enable rendering.\r\n        this.isRendering = true;\r\n        this.stoppedRendering = false;\r\n        // Listen for change events to enable/disable rendering\r\n        this.el.sceneEl.addEventListener('ui-changing',()=>{\r\n            this.stoppedRendering = false;\r\n            this.isRendering = true;\r\n        });\r\n        this.el.sceneEl.addEventListener('ui-changing-stopped',()=>{\r\n            this.isRendering = false;\r\n        });\r\n        // Setup raycaster for relaying mouse/keyboard events\r\n        this.raycaster = new THREE.Raycaster();\r\n        this.helper = new THREE.Mesh(new THREE.SphereGeometry(0.01),new THREE.MeshBasicMaterial({color:'#ff0000'}));\r\n        // Add cursor helper to object\r\n        if(this.data.debugRaycaster)this.el.object3D.add(this.helper);\r\n        // Set last render time\r\n        this.lastRenderTime = 0;\r\n        this.isFrozen = false;\r\n    },\r\n    pauseRender(){\r\n        return this.playRender(true)\r\n    },\r\n    playRender(isPaused){\r\n        let _this = this;\r\n        return new Promise(resolve=>{\r\n            if(_this.isFrozen===isPaused||_this.isAnimatingBackground)return resolve();\r\n            _this.isAnimatingBackground = true;\r\n            if(!_this.isFrozen)this.backdrop.setAttribute('scale','1 1 1');\r\n            let fromScale = _this.isFrozen?0.9:0.000001;\r\n            let toScale = _this.isFrozen?0.000001:0.9;\r\n            let duration = _this.isFrozen?350:500;\r\n            if(_this.isFrozen){\r\n                _this.isFrozen = isPaused;\r\n                _this.play();\r\n            }\r\n            UI.utils.isChanging(_this.el.sceneEl,_this.backdrop.uuid);\r\n            new TWEEN.Tween({x:fromScale})\r\n                .to({x:toScale}, duration)\r\n                .onUpdate(function(){\r\n                    _this.backdrop.setAttribute('opacity',this.x);\r\n                })\r\n                .onComplete(()=>{\r\n                    _this.isFrozen = isPaused;\r\n                    _this.isAnimatingBackground = false;\r\n                    // Stop changes\r\n                    UI.utils.stoppedChanging(this.backdrop.uuid);\r\n                    if(_this.isFrozen){\r\n                        _this.pause();\r\n                    }else{\r\n                        this.backdrop.setAttribute('scale','0.000001 0.000001 0.000001');\r\n                    }\r\n                    resolve();\r\n                })\r\n                .easing(TWEEN.Easing.Exponential.Out).start();\r\n        });\r\n    },\r\n    setupBackDrop(){\r\n        this.backdrop = document.createElement('a-plane');\r\n        this.backdrop.setAttribute('transparent',true);\r\n        this.backdrop.setAttribute('opacity',0.000001);\r\n        this.backdrop.setAttribute('color','#000');\r\n        this.backdrop.setAttribute('shader','flat');\r\n        this.backdrop.setAttribute('position',{x:0,y:0,z:-0.2});\r\n        this.backdrop.setAttribute('width',1);\r\n        this.backdrop.setAttribute('height',1);\r\n        this.backdrop.setAttribute('scale','0.000001 0.000001 0.000001');\r\n        this.el.appendChild(this.backdrop);\r\n    },\r\n    play(){\r\n        this.lastMouseMoveTime = 0;\r\n        // Register event listeners\r\n        // Mousedown and mouseup do not have the correct intersection point. Use last mouse move event if available instead.\r\n        // TODO: raise issue with aframe / submit PR;\r\n        this.click = e=>this.mouseEvent('click',this.lastMoveEvent||e);\r\n        this.mousedown = e=>this.mouseEvent('mousedown',this.lastMoveEvent||e);\r\n        this.mouseup = e=>this.mouseEvent('mouseup',this.lastMoveEvent||e);\r\n        this.mousewheel = e=>this.mouseEvent('ui-mousewheel',e.detail.evt);\r\n        this.mousemove = e=>{\r\n            // Save mousemove event for mousedown/mouseup events.\r\n            this.lastMoveEvent = e;\r\n            this.mouseEvent('ui-mousemove',e);\r\n        };\r\n        this.meshEl.addEventListener('mousedown',this.mousedown);\r\n        this.meshEl.addEventListener('mouseup',this.mouseup);\r\n        this.meshEl.addEventListener('click',this.click);\r\n        this.meshEl.addEventListener('ui-mousemove',this.mousemove);\r\n        this.meshEl.addEventListener('ui-mousewheel',this.mousewheel);\r\n    },\r\n    pause(){\r\n        this.meshEl.removeEventListener('mousedown',this.mousedown);\r\n        this.meshEl.removeEventListener('mouseup',this.mouseup);\r\n        this.meshEl.removeEventListener('click',this.click);\r\n        this.meshEl.removeEventListener('ui-mousemove',this.mousemove);\r\n        this.meshEl.removeEventListener('ui-mousewheel',this.mousewheel);\r\n    },\r\n    setupUIPanel(){\r\n        let uiPanel = document.createElement('a-plane');\r\n        uiPanel.setAttribute('position',this.data.panelPosition);\r\n        uiPanel.setAttribute('width',this.data.panelSize.x);\r\n        uiPanel.setAttribute('height',this.data.panelSize.y);\r\n        this.el.sceneEl.appendChild(uiPanel);\r\n        return uiPanel;\r\n    },\r\n    mouseEvent(type,e){\r\n        let mouse = {x:0,y:0};\r\n        if(e.detail.intersection){\r\n            let localPoint = this.el.object3D.worldToLocal(e.detail.intersection.point);\r\n            mouse = {\r\n                x:localPoint.x/this.meshEl.getAttribute('width')*2,\r\n                y:localPoint.y/this.meshEl.getAttribute('height')*2\r\n            };\r\n        }\r\n        if(type==='ui-mousewheel'&&e.detail.evt){\r\n            mouse.deltaY = e.detail.deltaY;\r\n            mouse.deltaX = e.detail.deltaX;\r\n        }\r\n        if(type==='mousedown'&&this.lookControlsEl&&this.lookControlsEl.components['look-controls']){\r\n            this.lookControlsEl.components[this.data.lookControlsComponent].pause()\r\n        }\r\n        if(type==='mouseup'&&this.lookControlsEl&&this.lookControlsEl.components['look-controls']){\r\n            this.lookControlsEl.components[this.data.lookControlsComponent].play()\r\n        }\r\n        this.raycastIntersections(e,mouse,type);\r\n    },\r\n    raycastIntersections(e,mouse,type){\r\n        if(!this.camera)return;\r\n        this.raycaster.setFromCamera( mouse, this.camera );\r\n        // this.helper.setDirection(this.raycaster.ray.direction);\r\n        let intersections = this.raycaster.intersectObjects( this.el.object3D.children, true );\r\n        this.prevIntersectionEls = this.prevIntersectionEls||[];\r\n        let intersectionEls = [];\r\n        if(intersections.length&&this.data.debugRaycaster){\r\n            let intersectionPoint = intersections[0].point;\r\n            if(intersections[0].object===this.helper&&intersections.length>1){\r\n                intersectionPoint = intersections[1].point;\r\n            }\r\n            this.helper.position.copy(intersectionPoint);\r\n            this.helper.position.x-=0.03;\r\n        }\r\n        let defaultPrevented = false;\r\n        for(let i = 0;i < intersections.length; i++){\r\n            let intersection = intersections[i];\r\n            // Only emit events on objecst with an element attached\r\n            if(intersection.object.el&&intersection.object.el.classList.contains(this.data.intersectableClass)){\r\n                let currentEvent = {intersection:intersection,evt:e,preventDefault:()=>{defaultPrevented=true}};\r\n                // If this is the first time weve seen this element then emit the mouseenter event.\r\n                if(this.prevIntersectionEls.indexOf(intersection.object.el)===-1&&!defaultPrevented){\r\n                    intersection.object.el.emit('mouseenter',currentEvent);\r\n                }\r\n                // Emit the mouse event received\r\n                if(!defaultPrevented){\r\n                    intersection.object.el.emit(type,currentEvent);\r\n                }\r\n                // Store the intersection on the element.\r\n                intersection.object.el.intersection = intersection;\r\n                // Add the current el to the list to check against previous intersection els.\r\n                intersectionEls.push(intersection.object.el);\r\n            }\r\n        }\r\n        // Find any intersections that have disappeared to emit the mouse leave event.\r\n        for(let i = 0;i < this.prevIntersectionEls.length; i++){\r\n            let intersectionEl = this.prevIntersectionEls[i];\r\n            if(intersectionEls.indexOf(intersectionEl)===-1){\r\n                intersectionEl.emit('mouseleave',{intersection:intersectionEl.intersection});\r\n            }\r\n        }\r\n        // Store the current intersected elements for the next iteration.\r\n        this.prevIntersectionEls = intersectionEls;\r\n    },\r\n    tick(){\r\n        if(this.isFrozen)return;\r\n        if(new Date().getTime()-this.lastRenderTime<(1000/this.data.fps)&&this.isRendering)return;\r\n        if(this.stoppedRendering)return;\r\n        this.el.object3D.traverse(child=>{\r\n            child.updateMatrixWorld();\r\n        });\r\n        this.el.sceneEl.renderer.render(this.el.object3D,this.camera,this.renderTarget);\r\n        this.lastRenderTime = new Date().getTime();\r\n        if(!this.isRendering){\r\n            this.stoppedRendering = true;\r\n        }\r\n    }\r\n});","/* global AFRAME,Yoga */\r\n/**\r\n * Yogo Layout Engine mapped to a Component for aframe-material-collection - https://yogalayout.com\r\n * @namespace aframe-material-collection\r\n * @component ui-yoga\r\n * @author Shane Harris\r\n */\r\n\r\nif (typeof Yoga === 'undefined') {\r\n    throw 'ui-yoga component requires the Yoga Layout Engine to be loaded - https://yogalayout.com';\r\n}\r\n// Map yoga enums to frendly names.\r\n// TODO: Need to expose the padding/border/margin side as seperate options to allow for combinations.\r\nmodule.exports = AFRAME.registerComponent('ui-yoga', {\r\n    schema: {\r\n        alignContent: {default: 'flex-start'},\r\n        alignItems: {default: 'auto'},\r\n        alignSelf: {default: 'auto'},\r\n        display: {default: 'default'},\r\n        flex: {type:'number',default: 1},\r\n        flexDirection: {default: 'row'},\r\n        flexWrap:{default: 'default'},\r\n        aspectRatio: {default: 'default'},\r\n        overflow:{default:'default'},\r\n        justifyContent:{default:'start'},\r\n        border: {type:'int',default: 0},\r\n        borderLeft: {type:'int',default: 0},\r\n        borderRight: {type:'int',default: 0},\r\n        borderTop: {type:'int',default: 0},\r\n        borderBottom: {type:'int',default: 0},\r\n        padding: {type:'int',default: 0},\r\n        paddingLeft: {type:'int',default: 0},\r\n        paddingRight: {type:'int',default: 0},\r\n        paddingTop: {type:'int',default: 0},\r\n        paddingBottom: {type:'int',default: 0},\r\n        margin: {type:'int',default: 0},\r\n        marginLeft: {type:'int',default: 0},\r\n        marginRight: {type:'int',default: 0},\r\n        marginTop: {type:'int',default: 0},\r\n        marginBottom: {type:'int',default: 0},\r\n        marginAuto: {type:'boolean',default: false},\r\n        marginAutoLeft: {type:'boolean',default: false},\r\n        marginAutoRight: {type:'boolean',default: false},\r\n        marginAutoTop: {type:'boolean',default: false},\r\n        marginAutoBottom: {type:'boolean',default: false},\r\n        marginPercent:{type:'number',default: 0},\r\n        marginPercentLeft: {type:'int',default: 0},\r\n        marginPercentRight: {type:'int',default: 0},\r\n        marginPercentTop: {type:'int',default: 0},\r\n        marginPercentBottom: {type:'int',default: 0},\r\n        flexBasis: {default: 'default'},\r\n        flexBasisPercent: {type:'number',default: 0},\r\n        flexGrow:{type:'number',default: 0},\r\n        flexShrink:{type:'number',default: 1},\r\n        maxHeight:{default: 'default'},\r\n        minHeight:{default: 'default'},\r\n        maxWidth:{default: 'default'},\r\n        minWidth:{default: 'default'},\r\n        maxHeightPercent:{default: 'default'},\r\n        minHeightPercent:{default: 'default'},\r\n        maxWidthPercent:{default: 'default'},\r\n        minWidthPercent:{default: 'default'},\r\n        position:{default: 'default'},\r\n        positionLeft: {type:'int',default: 0},\r\n        positionRight: {type:'int',default: 0},\r\n        positionTop: {type:'int',default: 0},\r\n        positionBottom: {type:'int',default: 0},\r\n        positionPercent:{default: 'default'},\r\n        positionPercentLeft: {type:'int',default: 0},\r\n        positionPercentRight: {type:'int',default: 0},\r\n        positionPercentTop: {type:'int',default: 0},\r\n        positionPercentBottom: {type:'int',default: 0},\r\n        width:{default: 'default'},\r\n        height:{default: 'default'},\r\n        widthAuto:{type:'boolean',default: false},\r\n        heightAuto:{type:'boolean',default: false},\r\n        widthPercent:{default: 'default'},\r\n        heightPercent:{default: 'default'},\r\n    },\r\n    init(){\r\n        this.setProperties();\r\n    },\r\n    updateSchema(){\r\n        this.setProperties();\r\n    },\r\n    setProperties(){\r\n        this.properties = this.properties||[];\r\n        this.properties.length = 0;\r\n        // Store the current valid yoga properties;\r\n        for(let name in this.data){\r\n            if(this.data.hasOwnProperty(name)&&\r\n                this.data[name]!=='default'&&this.data[name]){\r\n                let value = this.mapPropertyToEnum(name);\r\n                if(value)this.properties.push({method:'set'+name.charAt(0).toUpperCase() + name.substr(1),value:this.mapPropertyToEnum(name)});\r\n            }\r\n        }\r\n    },\r\n    getProperties(){\r\n        // Get the current yoga properties array as an object\r\n        let propertiesObj = {};\r\n        for(let i = 0;i < this.properties.length;i++){\r\n            propertiesObj[this.properties[i].method] = this.properties[i];\r\n        }\r\n        return propertiesObj;\r\n    },\r\n    mapPropertyToEnum(name){\r\n        // Get the yoga enum for the friendly name.\r\n        switch(true){\r\n            case name.indexOf('align') > -1:\r\n                return this.enums.align[this.data[name]];\r\n            case name.indexOf('Edge') > -1:\r\n                return this.enums.edge[this.data[name]];\r\n            case name === 'flexDirection':\r\n            case name === 'flexWrap':\r\n            case name === 'positionType':\r\n            case name === 'overflow':\r\n            case name === 'display':\r\n            case name === 'justifyContent':\r\n                return this.enums[name][this.data[name]];\r\n            default:\r\n                return this.data[name];\r\n        }\r\n    },\r\n    enums:{\r\n        align:{\r\n            count:Yoga.ALIGN_COUNT,\r\n            auto:Yoga.ALIGN_AUTO,\r\n            \"flex-start\":Yoga.ALIGN_FLEX_START,\r\n            center:Yoga.ALIGN_CENTER,\r\n            \"flex-end\":Yoga.ALIGN_FLEX_END,\r\n            stretch:Yoga.ALIGN_STRETCH,\r\n            baseline:Yoga.ALIGN_BASELINE,\r\n            \"space-between\":Yoga.ALIGN_SPACE_BETWEEN,\r\n            \"space-around\":Yoga.ALIGN_SPACE_AROUND,\r\n        },\r\n        dimension:{\r\n            count:Yoga.DIMENSION_COUNT,\r\n            width:Yoga.DIMENSION_WIDTH,\r\n            height:Yoga.DIMENSION_HEIGHT,\r\n        },\r\n        direction:{\r\n            count:Yoga.DIRECTION_COUNT,\r\n            inherit:Yoga.DIRECTION_INHERIT,\r\n            ltr:Yoga.DIRECTION_LTR,\r\n            rtl:Yoga.DIRECTION_RTL,\r\n        },\r\n        display:{\r\n            count:Yoga.DISPLAY_COUNT,\r\n            flex:Yoga.DISPLAY_FLEX,\r\n            none:Yoga.DISPLAY_NONE,\r\n        },\r\n        edge:{\r\n            count:Yoga.EDGE_COUNT,\r\n            left:Yoga.EDGE_LEFT,\r\n            top:Yoga.EDGE_TOP,\r\n            right:Yoga.EDGE_RIGHT,\r\n            bottom:Yoga.EDGE_BOTTOM,\r\n            start:Yoga.EDGE_START,\r\n            end:Yoga.EDGE_END,\r\n            horizontal:Yoga.EDGE_HORIZONTAL,\r\n            vertical:Yoga.EDGE_VERTICAL,\r\n            all:Yoga.EDGE_ALL,\r\n        },\r\n        experimental:{\r\n            count:Yoga.EXPERIMENTAL_FEATURE_COUNT,\r\n            \"flex-basis\":Yoga.EXPERIMENTAL_FEATURE_WEB_FLEX_BASIS,\r\n        },\r\n        flexDirection:{\r\n            count:Yoga.FLEX_DIRECTION_COUNT,\r\n            column:Yoga.FLEX_DIRECTION_COLUMN,\r\n            \"column-reverse\":Yoga.FLEX_DIRECTION_COLUMN_REVERSE,\r\n            row:Yoga.FLEX_DIRECTION_ROW,\r\n            reverse:Yoga.FLEX_DIRECTION_ROW_REVERSE,\r\n        },\r\n        justifyContent:{\r\n            count:Yoga.JUSTIFY_COUNT,\r\n            start:Yoga.JUSTIFY_FLEX_START,\r\n            center:Yoga.JUSTIFY_CENTER,\r\n            end:Yoga.JUSTIFY_FLEX_END,\r\n            between:Yoga.JUSTIFY_SPACE_BETWEEN,\r\n            around:Yoga.JUSTIFY_SPACE_AROUND,\r\n            evenly:Yoga.JUSTIFY_SPACE_EVENLY,\r\n        },\r\n        logLevel:{\r\n            count:Yoga.LOG_LEVEL_COUNT,\r\n            error:Yoga.LOG_LEVEL_ERROR,\r\n            warn:Yoga.LOG_LEVEL_WARN,\r\n            info:Yoga.LOG_LEVEL_INFO,\r\n            debug:Yoga.LOG_LEVEL_DEBUG,\r\n            verbose:Yoga.LOG_LEVEL_VERBOSE,\r\n            fatal:Yoga.LOG_LEVEL_FATAL,\r\n        },\r\n        measureMode:{\r\n            count:Yoga.MEASURE_MODE_COUNT,\r\n            undefined:Yoga.MEASURE_MODE_UNDEFINED,\r\n            exactly:Yoga.MEASURE_MODE_EXACTLY,\r\n            \"at-most\":Yoga.MEASURE_MODE_AT_MOST,\r\n        },\r\n        nodeType:{\r\n            count:Yoga.NODE_TYPE_COUNT,\r\n            default:Yoga.NODE_TYPE_DEFAULT,\r\n            text:Yoga.NODE_TYPE_TEXT,\r\n        },\r\n        overflow:{\r\n            count:Yoga.OVERFLOW_COUNT,\r\n            visible:Yoga.OVERFLOW_VISIBLE,\r\n            hidden:Yoga.OVERFLOW_HIDDEN,\r\n            scroll:Yoga.OVERFLOW_SCROLL,\r\n        },\r\n        positionType:{\r\n            count:Yoga.POSITION_TYPE_COUNT,\r\n            relative:Yoga.POSITION_TYPE_RELATIVE,\r\n            absolute:Yoga.POSITION_TYPE_ABSOLUTE,\r\n        },\r\n        printOptions:{\r\n            count:Yoga.PRINT_OPTIONS_COUNT,\r\n            layout:Yoga.PRINT_OPTIONS_LAYOUT,\r\n            style:Yoga.PRINT_OPTIONS_STYLE,\r\n            children:Yoga.PRINT_OPTIONS_CHILDREN,\r\n        },\r\n        unit:{\r\n            count:Yoga.UNIT_COUNT,\r\n            undefined:Yoga.UNIT_UNDEFINED,\r\n            point:Yoga.UNIT_POINT,\r\n            percent:Yoga.UNIT_PERCENT,\r\n            auto:Yoga.UNIT_AUTO,\r\n        },\r\n        flexWrap:{\r\n            count:Yoga.WRAP_COUNT,\r\n            \"no-wrap\":Yoga.WRAP_NO_WRAP,\r\n            wrap:Yoga.WRAP_WRAP,\r\n            \"wrap-reverse\":Yoga.WRAP_WRAP_REVERSE,\r\n        }\r\n    }\r\n});","export class Utils{\r\n    constructor(){\r\n        this.changesDetected = {};\r\n        this.is_changeing = false;\r\n    }\r\n    isFirstOrLastChange(){\r\n        let has_none = true;\r\n        for (let o in this.changesDetected) {\r\n            if(!this.is_changeing){\r\n                this.scene.emit('ui-changing');\r\n            }\r\n            has_none = false;\r\n            this.is_changeing = true;\r\n            break;\r\n        }\r\n        if(has_none){\r\n            if(this.is_changeing){\r\n                let oldAfterRender = this.scene.object3D.onAfterRender;\r\n                this.scene.object3D.onAfterRender = ()=>{\r\n                    this.scene.emit('ui-changing-stopped');\r\n                    this.scene.object3D.onAfterRender = oldAfterRender;\r\n                }\r\n            }\r\n            this.is_changeing = false;\r\n        }\r\n    }\r\n    preventDefault(e){\r\n        if(e.detail.preventDefault && typeof e.detail.preventDefault === \"function\"){\r\n            e.detail.preventDefault();\r\n        }\r\n    }\r\n    isChanging(scene,ref){\r\n        this.scene = this.scene||scene;\r\n        this.changesDetected[ref] = 0;\r\n        this.isFirstOrLastChange();\r\n    }\r\n    stoppedChanging(ref){\r\n        if(ref in this.changesDetected){\r\n            delete this.changesDetected[ref];\r\n        }\r\n        this.isFirstOrLastChange();\r\n    }\r\n}","/* global AFRAME */\r\n/**\r\n * Application entry point\r\n * @author Shane Harris\r\n */\r\nimport {Utils} from \"./utils\";\r\n\r\nlet version = require('./../package.json').version;\r\nconsole.log('aframe-material-collection version '+version);\r\n\r\nif (typeof AFRAME === 'undefined') {\r\n    throw 'aframe-material-collection requires AFRAME to be loaded first. - <script src=\"https://aframe.io/releases/0.8.2/aframe.min.js\"></script>';\r\n}\r\nlet utils = new Utils();\r\n\r\nwindow.UI = {\r\n    // Utils\r\n    utils:utils,\r\n    // Primitives\r\n    a_ui_button: require('./primitives/button'),\r\n    a_ui_fab_button: require('./primitives/fab_button'),\r\n    a_ui_fab_button_small: require('./primitives/fab_button_small'),\r\n    a_ui_switch: require('./primitives/switch'),\r\n    a_ui_checkbox: require('./primitives/checkbox'),\r\n    a_ui_radio: require('./primitives/radio'),\r\n    a_ui_text_input: require('./primitives/text-input'),\r\n    a_ui_number_input: require('./primitives/number-input'),\r\n    a_ui_int_input: require('./primitives/int-input'),\r\n    a_ui_password_input: require('./primitives/password-input'),\r\n    a_ui_scroll_pane: require('./primitives/scroll-pane'),\r\n    a_ui_renderer: require('./primitives/renderer'),\r\n\r\n    // Components\r\n    text: require('./components/text'),\r\n    btn: require('./components/btn'),\r\n    icon: require('./components/icon'),\r\n    rounded: require('./components/rounded'),\r\n    ripple: require('./components/ripple'),\r\n    ui_switch: require('./components/switch'),\r\n    scroll_pane: require('./components/scroll-pane'),\r\n    mouse_shim: require('./components/mouse-shim'),\r\n    double_click: require('./components/double-click'),\r\n    checkbox: require('./components/checkbox'),\r\n    radio: require('./components/radio'),\r\n    border: require('./components/border'),\r\n    curvedPlane: require('./components/curved-plane'),\r\n    modal: require('./components/modal'),\r\n    renderer: require('./components/renderer'),\r\n    yoga_properties: require('./components/yoga'),\r\n};\r\n//module.exports = UI;\r\n\r\n"],"sourceRoot":""}