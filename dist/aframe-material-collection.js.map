{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/primitives/button.js","webpack:///./src/primitives/fab_button.js","webpack:///./src/primitives/fab_button_small.js","webpack:///./src/primitives/switch.js","webpack:///./src/primitives/toast.js","webpack:///./src/primitives/checkbox.js","webpack:///./src/primitives/radio.js","webpack:///./src/primitives/input-text.js","webpack:///./src/primitives/text-input.js","webpack:///./src/primitives/number-input.js","webpack:///./src/primitives/int-input.js","webpack:///./src/primitives/password-input.js","webpack:///./src/primitives/scroll-pane.js","webpack:///./src/primitives/renderer.js","webpack:///./src/components/text.js","webpack:///./src/components/input-text.js","webpack:///./src/components/btn.js","webpack:///./src/components/icon.js","webpack:///./src/components/rounded.js","webpack:///./src/components/ripple.js","webpack:///./src/components/switch.js","webpack:///./src/components/toast.js","webpack:///./src/components/scroll-pane.js","webpack:///./src/components/mouse-shim.js","webpack:///./src/components/double-click.js","webpack:///./src/components/checkbox.js","webpack:///./src/components/radio.js","webpack:///./src/components/border.js","webpack:///./src/components/curved-plane.js","webpack:///./src/components/color-picker.js","webpack:///./src/components/modal.js","webpack:///./src/components/renderer.js","webpack:///./src/components/yoga.js","webpack:///./src/index.js","webpack:///./src/utils.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","AFRAME","registerPrimitive","utils","extendDeep","primitives","getMeshMixin","defaultComponents","geometry","primitive","width","height","material","color","shader","ui-btn","ui-rounded","borderRadius","ui-ripple","size","x","y","clampToSquare","zIndex","text","font","align","zOffset","wrapCount","alphaTest","mappings","transparent","font-color","ripple-color","ripple-size","ripple-z-index","text-value","wrap-count","border-radius","curve-segments","disabled","radius","segments","fadeDelay","duration","ui-icon","icon-color","src","ui-switch","opacity","curveSegments","ui-checkbox","indeterminate","ui-radio","radiusInner","radiusOuter","segmentsTheta","selected","ui-input-text","placeHolder","ui-double-click","type","place-holder","camera-el","look-controls-component","wasd-controls-component","ui-text","ui-scroll-pane","scroll-z-offset","handle-color","scroll-padding","look-controls-el","ui-renderer","ui-panel","panel-position","panel-size","render-resolution","debug-raycaster","fps","intersectable-class","registerComponent","schema","default","lineFocusColor","lineBlurColor","disabledColor","fontFamily","fontColor","intersectableClass","[object Object]","CanvasInput","console","warn","this","backing","document","createElement","setAttribute","data","el","appendChild","textMaterial","THREE","MeshBasicMaterial","textPlane","Mesh","PlaneGeometry","object3D","add","position","set","underLine","addEventListener","e","focus","select","blurHandler","blur","setValue","is_focussed","sceneEl","canvas_input","render","map","needsUpdate","is_float","indexOf","keyCode","ctrlKey","metaKey","test","preventDefault","numberOnly","setupCanvasInput","image","Image","renderCanvas","toDataURL","texture","Texture","minFilter","LinearFilter","setClippingPlanes","selectText","UI","isChanging","uuid","resetCanvasInput","onkeydown","floatOnly","renderer","domElement","_content_clips","clippingPlanes","clipShadows","removeEventListener","new_value","stoppedChanging","borderWidth","canvas","getElementById","input_settings","fontSize","padding","backgroundColor","placeHolderColor","boxShadow","innerShadow","depends","cameraEl","lookControlsComponent","wasdControlsComponent","setupElements","selectionStart","selectionLength","startSelection","scrollOffset","alphabet","scrollIndex","chars","split","charsAllowed","length","push","char","isMoving","mousemove","onMousemove","keydown","handleKeyboardEvent","playPauseCamera","setSelection","setTimeout","setupScrollClips","getValue","content_clips","Plane","Vector3","setScrollClips","child","children","layout","_linesTotal","getAttribute","increaseWrap","updateMatrixWorld","applyMatrix4","matrixWorld","concat","selectionHeight","selectionHighlight","getObject3D","carret","output","isFocused","setupCarret","window","underline","clearInterval","carretInterval","pop","code","check","log","splice","shiftKey","shiftStartPos","Math","abs","stopPropagation","setScrolledValue","setCharacters","currentSelection","getSelectionPosition","selection","getNearestGlyph","end","start","container","className","setInterval","worldToLocal","detail","intersection","point","clone","method","components","querySelector","positions","glyphs","scale","lastPosition","glyph","currentWidth","current","id","left","startPosition","endPosition","Number","parentWidth","tempPosition","startDiff","POSITIVE_INFINITY","endDiff","currentPosition","right","carretPosition","hoverHeight","activeHeight","defaultZ","z","mouseEnter","mouseDown","mouseUp","mouseLeave","_this","tween","is_clicked","resetAnimation","start_z","from","to","callback","complete","TWEEN","Tween","onUpdate","onComplete","easing","Easing","Exponential","Out","icon","TextureLoader","load","mesh","roundedRectShape","Shape","ctx","moveTo","lineTo","quadraticCurveTo","metadata","parameters","ShapeGeometry","emit","fadeDuration","rippleGeometry","CircleGeometry","max","ripple","click","isRippling","setRippleClips","tweenSize","tweenOpacity","delay","progressColor","handleColor","handleDisabledColor","railColor","switchDuration","handleZIndex","setDisabled","handleEl","railEl","getRailObject","clickHandler","tweenHandle","tweenProgress","traverse","progress","toastEl","message","originalPosition","closeTween","stop","shorten","scrollPadding","scrollZOffset","scrollHandleColor","scrollBarWidth","rail","handle","localClippingEnabled","mouseMove","isDragging","handlePos","backgroundPanel","endScroll","scroll","updateContent","setupMouseWheelScroll","setContent","body","noAutoReload","firstChild","yoga_node","removeChild","Promise","resolve","loadedWrapper","insertAdjacentHTML","updateContentClips","currentUuid","generateUUID","setChildClips","Yoga","initialiseYoga","calculateLayout","DIRECTION_LTR","content_height","NEGATIVE_INFINITY","updateYoga","handleSize","clamp","pos","positionY","min","scroll_pos","scroll_perc","evt","deltaY","node","properties","setWidth","setHeight","EDGE_LEFT","EDGE_RIGHT","EDGE_TOP","EDGE_BOTTOM","EDGE_ALL","replace","parent","tagName","componentName","substr","toLowerCase","Node","setupYogaNode","getProperties","setJustifyContent","JUSTIFY_FLEX_START","setFlexDirection","FLEX_DIRECTION_ROW","setAlignContent","ALIGN_AUTO","setFlexWrap","WRAP_WRAP","parentElement","setMargin","insertChild","getChildCount","setPadding","slice","forEach","classList","contains","getComputedLeft","getComputedTop","getComputedWidth","getComputedHeight","highest","isRawShaderMaterial","onBeforeCompile","vertexParts","vertexShader","vertexMainIndex","join","fragmentParts","fragmentShader","fragmentMainIndex","clipping","clearTimeout","fontRenderTimeout","raycaster","onMouseWheel","emitMouseEvent","Date","getTime","lastMouseMoveTime","eventType","event","intersections","cursorEl","timeout","last_click","now","selectedColor","unselectedColor","setupLines","setSelected","setTransform","animateSelected","topLine","leftLine","bottomLine","rightLine","line","is_vertical","selectedRadius","filled_circle","Color","parentNode","querySelectorAll","filter","ring","deselect","isSelecting","numberOfPoints","roundedRect","setObject3D","isHole","shapeCtx","Path","holes","depth","browser_pane","planePoints","CubicBezierCurve3","vertices","getPoints","edgeI","pointI","backingColor","backingColorBottom","targetEl","setupColorWheel","setupBrightnessSlider","setupColorPreview","setupBacking","setupEvents","open","close","selectCallback","tweenPickerScale","then","circleBacking","flatShading","fog","side","planeBacking","planeBackingBottom","buttonConfirm","hex","getHex","buttonCancel","hexValue","colorPreview","hsv","h","v","colorWheel","ShaderMaterial","uniforms","brightness","brightnessSlider","color1","color2","brightnessResetLeft","brightnessResetRight","updateColor","rgb","hsvToRgb","g","b","getHexString","isMouseDown","polarPosition","sqrt","angle","PI","atan2","f","q","floor","round","modal","main","modalPanel","mainComponents","modalComponents","pause","close_buttons","pauseRender","tweenModalScale","play","playRender","uiPanel","lookControlsEl","panelPosition","panelSize","renderResolution","debugRaycaster","setupBackDrop","meshEl","setupUIPanel","remove","camera","PerspectiveCamera","renderTarget","WebGLRenderTarget","antialias","stoppedRendering","isRendering","Raycaster","helper","SphereGeometry","lastRenderTime","isFrozen","time","isPaused","isAnimatingBackground","backdrop","fromScale","toScale","mouseEvent","lastMoveEvent","mousedown","mouseup","mousewheel","mouse","localPoint","deltaX","raycastIntersections","setFromCamera","intersectObjects","prevIntersectionEls","intersectionEls","intersectionPoint","copy","defaultPrevented","currentEvent","intersectionEl","delta","vrModeEnabled","vr","enabled","alignContent","alignItems","alignSelf","display","flex","flexDirection","flexWrap","aspectRatio","overflow","justifyContent","border","borderLeft","borderRight","borderTop","borderBottom","paddingLeft","paddingRight","paddingTop","paddingBottom","margin","marginLeft","marginRight","marginTop","marginBottom","marginAuto","marginAutoLeft","marginAutoRight","marginAutoTop","marginAutoBottom","marginPercent","marginPercentLeft","marginPercentRight","marginPercentTop","marginPercentBottom","flexBasis","flexBasisPercent","flexGrow","flexShrink","maxHeight","minHeight","maxWidth","minWidth","maxHeightPercent","minHeightPercent","maxWidthPercent","minWidthPercent","positionLeft","positionRight","positionTop","positionBottom","positionPercent","positionPercentLeft","positionPercentRight","positionPercentTop","positionPercentBottom","widthAuto","heightAuto","widthPercent","heightPercent","setProperties","mapPropertyToEnum","charAt","toUpperCase","propertiesObj","enums","edge","count","ALIGN_COUNT","auto","flex-start","ALIGN_FLEX_START","center","ALIGN_CENTER","flex-end","ALIGN_FLEX_END","stretch","ALIGN_STRETCH","baseline","ALIGN_BASELINE","space-between","ALIGN_SPACE_BETWEEN","space-around","ALIGN_SPACE_AROUND","dimension","DIMENSION_COUNT","DIMENSION_WIDTH","DIMENSION_HEIGHT","direction","DIRECTION_COUNT","inherit","DIRECTION_INHERIT","ltr","rtl","DIRECTION_RTL","DISPLAY_COUNT","DISPLAY_FLEX","none","DISPLAY_NONE","EDGE_COUNT","top","bottom","EDGE_START","EDGE_END","horizontal","EDGE_HORIZONTAL","vertical","EDGE_VERTICAL","all","experimental","EXPERIMENTAL_FEATURE_COUNT","flex-basis","EXPERIMENTAL_FEATURE_WEB_FLEX_BASIS","FLEX_DIRECTION_COUNT","column","FLEX_DIRECTION_COLUMN","column-reverse","FLEX_DIRECTION_COLUMN_REVERSE","row","reverse","FLEX_DIRECTION_ROW_REVERSE","JUSTIFY_COUNT","JUSTIFY_CENTER","JUSTIFY_FLEX_END","between","JUSTIFY_SPACE_BETWEEN","around","JUSTIFY_SPACE_AROUND","evenly","JUSTIFY_SPACE_EVENLY","logLevel","LOG_LEVEL_COUNT","error","LOG_LEVEL_ERROR","LOG_LEVEL_WARN","info","LOG_LEVEL_INFO","debug","LOG_LEVEL_DEBUG","verbose","LOG_LEVEL_VERBOSE","fatal","LOG_LEVEL_FATAL","measureMode","MEASURE_MODE_COUNT","undefined","MEASURE_MODE_UNDEFINED","exactly","MEASURE_MODE_EXACTLY","at-most","MEASURE_MODE_AT_MOST","nodeType","NODE_TYPE_COUNT","NODE_TYPE_DEFAULT","NODE_TYPE_TEXT","OVERFLOW_COUNT","visible","OVERFLOW_VISIBLE","hidden","OVERFLOW_HIDDEN","OVERFLOW_SCROLL","positionType","POSITION_TYPE_COUNT","relative","POSITION_TYPE_RELATIVE","absolute","POSITION_TYPE_ABSOLUTE","printOptions","PRINT_OPTIONS_COUNT","PRINT_OPTIONS_LAYOUT","style","PRINT_OPTIONS_STYLE","PRINT_OPTIONS_CHILDREN","unit","UNIT_COUNT","UNIT_UNDEFINED","UNIT_POINT","percent","UNIT_PERCENT","UNIT_AUTO","WRAP_COUNT","no-wrap","WRAP_NO_WRAP","wrap","wrap-reverse","WRAP_WRAP_REVERSE","version","changesDetected","is_changeing","scene","string","ref","isFirstOrLastChange","index","a_ui_button","a_ui_fab_button","a_ui_fab_button_small","a_ui_switch","a_ui_toast","a_ui_checkbox","a_ui_radio","a_ui_input_text","a_ui_text_input","a_ui_number_input","a_ui_int_input","a_ui_password_input","a_ui_scroll_pane","a_ui_renderer","input_text","btn","rounded","switch","toast","scroll_pane","mouse_shim","double_click","checkbox","radio","curvedPlane","colorPicker","yoga_properties"],"mappings":"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","file":"aframe-material-collection.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 34);\n","/* global AFRAME */\r\n/**\r\n * Button Primitive for aframe-material-collection.\r\n * @namespace aframe-material-collection\r\n * @primitive a-ui-button\r\n * @author Shane Harris\r\n */\r\n\r\nmodule.exports = AFRAME.registerPrimitive('a-ui-button', AFRAME.utils.extendDeep({}, AFRAME.primitives.getMeshMixin(), {\r\n    defaultComponents: {\r\n        geometry: {\r\n            primitive: 'plane',\r\n            width: 0.5,\r\n            height: 0.175\r\n        },\r\n        material: {\r\n            color: '#009688',\r\n            shader: 'flat',\r\n        },\r\n        \"ui-btn\":{},\r\n        \"ui-rounded\":{borderRadius:0.0025},\r\n        \"ui-ripple\":{size:{x:0.5,y:0.175},clampToSquare:true,zIndex:0.001},\r\n        text:{\r\n            font:'roboto',\r\n            align:'center',\r\n            zOffset:0.002,\r\n            wrapCount:10,\r\n            alphaTest:0.4\r\n        }\r\n    },\r\n    mappings: {\r\n        height: 'geometry.height',\r\n        width: 'geometry.width',\r\n        color: 'material.color',\r\n        transparent: 'material.transparent',\r\n        \"font-color\":'text.color',\r\n        \"ripple-color\":'ui-ripple.color',\r\n        \"ripple-size\":'ui-ripple.size',\r\n        \"ripple-z-index\":'ui-ripple.zIndex',\r\n        \"text-value\": 'text.value',\r\n        \"wrap-count\":'text.wrapCount',\r\n        \"border-radius\":\"ui-rounded.borderRadius\",\r\n        \"curve-segments\":\"ui-rounded.curveSegments\",\r\n        disabled:'ui-btn.disabled'\r\n    }\r\n}));","/* global AFRAME */\r\n/**\r\n * Floating Action Button Primitive for aframe-material-collection.\r\n * @namespace aframe-material-collection\r\n * @primitive a-ui-fab-button\r\n * @author Shane Harris\r\n */\r\n\r\nmodule.exports = AFRAME.registerPrimitive('a-ui-fab-button', AFRAME.utils.extendDeep({}, AFRAME.primitives.getMeshMixin(), {\r\n    defaultComponents: {\r\n        geometry: {\r\n            primitive: 'circle',\r\n            radius: 0.1,\r\n            segments:6\r\n        },\r\n        material: {\r\n            color: '#009688',\r\n            shader: 'flat',\r\n        },\r\n        \"ui-btn\":{},\r\n        \"ui-ripple\":{size:{x:0.1,y:0.1},zIndex:0.002,fadeDelay:300,duration:500},\r\n        \"ui-icon\":{size:{x:0.105,y:0.105}}\r\n    },\r\n    mappings: {\r\n        radius: 'geometry.radius',\r\n        color: 'material.color',\r\n        \"icon-color\": 'ui-icon.color',\r\n        transparent: 'material.transparent',\r\n        src: 'ui-icon.src',\r\n        \"ripple-color\":'ui-ripple.color',\r\n        \"ripple-size\":'ui-ripple.size',\r\n        \"ripple-z-index\":'ui-ripple.zIndex',\r\n        disabled:'ui-btn.disabled'\r\n    }\r\n}));","/* global AFRAME */\r\n/**\r\n * Floating Action Button Small Primitive for aframe-material-collection.\r\n * @namespace aframe-material-collection\r\n * @primitive a-ui-fab-button-small\r\n * @author Shane Harris\r\n */\r\nmodule.exports = AFRAME.registerPrimitive('a-ui-fab-button-small', AFRAME.utils.extendDeep({}, AFRAME.primitives.getMeshMixin(), {\r\n    defaultComponents: {\r\n        geometry: {\r\n            primitive: 'circle',\r\n            radius: 0.075,\r\n            segments:6\r\n        },\r\n        material: {\r\n            color: '#009688',\r\n            shader: 'flat',\r\n        },\r\n        \"ui-btn\":{},\r\n        \"ui-ripple\":{size:{x:0.125,y:0.125},zIndex:-0.001,color:'#ff0000'},\r\n        \"ui-icon\":{size:{x:0.075,y:0.075}, src:'icons/sort_white_64dp.png'}\r\n    },\r\n    mappings: {\r\n        radius: 'geometry.radius',\r\n        color: 'material.color',\r\n        \"icon-color\": 'ui-icon.color',\r\n        transparent: 'material.transparent',\r\n        src: 'ui-icon.src',\r\n        \"ripple-color\":'ui-ripple.color',\r\n        \"ripple-size\":'ui-ripple.size',\r\n        \"ripple-z-index\":'ui-ripple.zIndex',\r\n        disabled:'ui-btn.disabled'\r\n    }\r\n}));","/* global AFRAME */\r\n/**\r\n * Switch Primitive for aframe-material-collection.\r\n * @namespace aframe-material-collection\r\n * @primitive a-ui-switch\r\n * @author Shane Harris\r\n */\r\nmodule.exports = AFRAME.registerPrimitive('a-ui-switch', AFRAME.utils.extendDeep({}, AFRAME.primitives.getMeshMixin(), {\r\n    defaultComponents: {\r\n        \"ui-switch\":{}\r\n    },\r\n    mappings: {\r\n        value: 'ui-switch.value',\r\n        disabled: 'ui-switch.disabled',\r\n    }\r\n}));","/* global AFRAME */\r\n/**\r\n * Toast Message Primitive for aframe-material-collection.\r\n * @namespace aframe-material-collection\r\n * @primitive a-ui-toast\r\n * @author Shane Harris\r\n */\r\n\r\nmodule.exports = AFRAME.registerPrimitive('a-ui-toast', AFRAME.utils.extendDeep({}, AFRAME.primitives.getMeshMixin(), {\r\n    defaultComponents: {\r\n        geometry: {\r\n            primitive: 'plane',\r\n            width: 0.5,\r\n            height: 0.2\r\n        },\r\n        material: {\r\n            color: '#010e0f',\r\n            shader: 'flat',\r\n            transparent:true,\r\n            opacity: 0.8\r\n        },\r\n        \"ui-rounded\":{borderRadius:0.01,curveSegments:3},\r\n        text:{\r\n            font:'roboto',\r\n            value:'Toast Message!',\r\n            align:'center',\r\n            zOffset:0.002,\r\n            wrapCount:20,\r\n        }\r\n    },\r\n    mappings: {\r\n        height: 'geometry.height',\r\n        width: 'geometry.width',\r\n        color: 'material.color',\r\n        transparent: 'material.transparent',\r\n        \"font-color\":'text.color',\r\n        \"text-value\": 'text.value',\r\n        \"wrap-count\":'text.wrapCount',\r\n        \"border-radius\":\"ui-rounded.borderRadius\",\r\n        \"curve-segments\":\"ui-rounded.curveSegments\"\r\n    }\r\n}));","/* global AFRAME */\r\n/**\r\n * Checkbox Primitive for aframe-material-collection.\r\n * @namespace aframe-material-collection\r\n * @primitive a-ui-checkbox\r\n * @author Shane Harris\r\n */\r\n\r\nmodule.exports = AFRAME.registerPrimitive('a-ui-checkbox', AFRAME.utils.extendDeep({}, AFRAME.primitives.getMeshMixin(), {\r\n    defaultComponents: {\r\n        \"ui-checkbox\":{\r\n\r\n        },\r\n        \"ui-ripple\":{\r\n            size:{x:0.1,y:0.1},\r\n            zIndex:-0.001,\r\n            color:'#afafaf'\r\n        }\r\n    },\r\n    mappings: {\r\n        value: 'ui-checkbox.value',\r\n        disabled: 'ui-checkbox.disabled',\r\n        indeterminate:'ui-checkbox.indeterminate'\r\n    }\r\n}));","/* global AFRAME */\r\n/**\r\n * Radio Primitive for aframe-material-collection.\r\n * @namespace aframe-material-collection\r\n * @primitive a-ui-radio\r\n * @author Shane Harris\r\n */\r\nmodule.exports = AFRAME.registerPrimitive('a-ui-radio', AFRAME.utils.extendDeep({}, AFRAME.primitives.getMeshMixin(), {\r\n    defaultComponents: {\r\n        \"ui-radio\":{},\r\n        \"geometry\":{\r\n            primitive:'ring',\r\n            radiusInner:0.0575,\r\n            radiusOuter:0.0675,\r\n            segmentsTheta:6\r\n        },\r\n        \"material\":{\r\n            shader:'flat',\r\n            color:'#afafaf'\r\n        },\r\n        \"ui-ripple\":{\r\n            size:{x:0.1,y:0.1},\r\n            zIndex:-0.001,\r\n            color:'#afafaf'\r\n        }\r\n    },\r\n    mappings: {\r\n        color:'ui-radio.selectedColor',\r\n        value: 'ui-radio.value',\r\n        selected: 'ui-radio.selected',\r\n        disabled: 'ui-radio.disabled',\r\n    }\r\n}));","/* global AFRAME */\r\n/**\r\n * Text Input Primitive for aframe-material-collection.\r\n * @namespace aframe-material-collection\r\n * @primitive a-ui-input-text\r\n * @author Shane Harris\r\n */\r\nmodule.exports = AFRAME.registerPrimitive('a-ui-input-text', AFRAME.utils.extendDeep({}, AFRAME.primitives.getMeshMixin(), {\r\n    defaultComponents: {\r\n        \"ui-input-text\":{\r\n            placeHolder:'Text...',\r\n            width:1,\r\n            height:0.2,\r\n            value:''\r\n        },\r\n        \"ui-double-click\":{}\r\n    },\r\n    mappings: {\r\n        width:\"ui-input-text.width\",\r\n        height:\"ui-input-text.height\",\r\n        type:\"ui-input-text.type\",\r\n        value:\"ui-input-text.value\",\r\n        \"place-holder\":\"ui-input-text.placeHolder\",\r\n        \"camera-el\":\"ui-input-text.cameraEl\",\r\n        \"look-controls-component\":\"ui-input-text.lookControlsComponent\",\r\n        \"wasd-controls-component\":\"ui-input-text.wasdControlsComponent\",\r\n    }\r\n}));","/* global AFRAME */\r\n/**\r\n * Text Input Primitive for aframe-material-collection.\r\n * @namespace aframe-material-collection\r\n * @primitive a-ui-text-input\r\n * @author Shane Harris\r\n */\r\nmodule.exports = AFRAME.registerPrimitive('a-ui-text-input', AFRAME.utils.extendDeep({}, AFRAME.primitives.getMeshMixin(), {\r\n    defaultComponents: {\r\n        \"ui-text\":{\r\n            placeHolder:'Text...'\r\n        },\r\n        \"ui-double-click\":{}\r\n    },\r\n    mappings: {\r\n        width:\"ui-text.width\",\r\n        height:\"ui-text.height\",\r\n        value:\"ui-text.value\",\r\n        \"place-holder\":\"ui-text.placeHolder\"\r\n    }\r\n}));","/* global AFRAME */\r\n/**\r\n * Number Input Primitive for aframe-material-collection.\r\n * @namespace aframe-material-collection\r\n * @primitive a-ui-number-input\r\n * @author Shane Harris\r\n */\r\nmodule.exports = AFRAME.registerPrimitive('a-ui-number-input', AFRAME.utils.extendDeep({}, AFRAME.primitives.getMeshMixin(), {\r\n    defaultComponents: {\r\n        \"ui-text\":{\r\n            type:'number',\r\n            placeHolder:'Number...'\r\n        },\r\n        \"ui-double-click\":{}\r\n    },\r\n    mappings: {\r\n        width:\"ui-text.width\",\r\n        height:\"ui-text.height\",\r\n        value:\"ui-text.value\",\r\n        \"place-holder\":\"ui-text.placeHolder\"\r\n    }\r\n}));","/* global AFRAME */\r\n/**\r\n * Integer Input Primitive for aframe-material-collection.\r\n * @namespace aframe-material-collection\r\n * @primitive a-ui-int-input\r\n * @author Shane Harris\r\n */\r\nmodule.exports = AFRAME.registerPrimitive('a-ui-int-input', AFRAME.utils.extendDeep({}, AFRAME.primitives.getMeshMixin(), {\r\n    defaultComponents: {\r\n        \"ui-text\":{\r\n            type:'int',\r\n            placeHolder:'Whole Number...'\r\n        },\r\n        \"ui-double-click\":{}\r\n    },\r\n    mappings: {\r\n        width:\"ui-text.width\",\r\n        height:\"ui-text.height\",\r\n        value:\"ui-text.value\",\r\n        \"place-holder\":\"ui-text.placeHolder\"\r\n    }\r\n}));","/* global AFRAME */\r\n/**\r\n *  Password Primitive for aframe-material-collection.\r\n * @namespace aframe-material-collection\r\n * @primitive a-ui-password-input\r\n * @author Shane Harris\r\n */\r\nmodule.exports = AFRAME.registerPrimitive('a-ui-password-input', AFRAME.utils.extendDeep({}, AFRAME.primitives.getMeshMixin(), {\r\n    defaultComponents: {\r\n        \"ui-text\":{\r\n            type:'password',\r\n            placeHolder:''\r\n        },\r\n        \"ui-double-click\":{}\r\n    },\r\n    mappings: {\r\n        width:\"ui-text.width\",\r\n        height:\"ui-text.height\",\r\n        value:\"ui-text.value\",\r\n        \"place-holder\":\"ui-text.placeHolder\"\r\n    }\r\n}));","/* global AFRAME */\r\n/**\r\n * Scroll Pane Primitive for aframe-material-collection.\r\n * @namespace aframe-material-collection\r\n * @primitive a-ui-scroll-pane\r\n * @author Shane Harris\r\n */\r\nmodule.exports = AFRAME.registerPrimitive('a-ui-scroll-pane', AFRAME.utils.extendDeep({}, AFRAME.primitives.getMeshMixin(), {\r\n    defaultComponents: {\r\n        \"ui-scroll-pane\":{\r\n\r\n        }\r\n    },\r\n    mappings: {\r\n        width:\"ui-scroll-pane.width\",\r\n        height:\"ui-scroll-pane.height\",\r\n        \"scroll-z-offset\":\"ui-scroll-pane.scrollZOffset\",\r\n        \"handle-color\":\"ui-scroll-pane.scrollHandleColor\",\r\n        \"scroll-padding\":\"ui-scroll-pane.scrollPadding\",\r\n        \"look-controls-el\":\"ui-scroll-pane.cameraEl\",\r\n        \"look-controls-component\":\"ui-scroll-pane.lookControlsComponent\"\r\n    }\r\n}));","/* global AFRAME */\r\n/**\r\n * Renderer Primitive for aframe-material-collection.\r\n * @namespace aframe-material-collection\r\n * @primitive a-ui-renderer\r\n * @author Shane Harris\r\n */\r\nmodule.exports = AFRAME.registerPrimitive('a-ui-renderer', AFRAME.utils.extendDeep({}, AFRAME.primitives.getMeshMixin(), {\r\n    defaultComponents: {\r\n        \"ui-renderer\":{}\r\n    },\r\n    mappings: {\r\n        \"ui-panel\":\"ui-renderer.uiPanel\",\r\n        \"look-controls-el\":\"ui-renderer.lookControlsEl\",\r\n        \"look-controls-component\":\"ui-renderer.lookControlsComponent\",\r\n        \"panel-position\":\"ui-renderer.panelPosition\",\r\n        \"panel-size\":\"ui-renderer.panelSize\",\r\n        \"render-resolution\":\"ui-renderer.renderResolution\",\r\n        \"debug-raycaster\":\"ui-renderer.debugRaycaster\",\r\n        \"fps\":\"ui-renderer.fps\",\r\n        \"intersectable-class\":\"ui-renderer.intersectableClass\",\r\n    }\r\n}));","/* global AFRAME,THREE */\r\n/**\r\n * Text input component Component for aframe-material-collection. Includes support for number/int only input.\r\n * @namespace aframe-material-collection\r\n * @component ui-text\r\n * @author Shane Harris\r\n */\r\n\r\nmodule.exports = AFRAME.registerComponent('ui-text', {\r\n    schema: {\r\n        width:{type:'number',default:0.5},\r\n        height:{type:'number',default:0.1},\r\n        value: {default: ''},\r\n        type: {default: 'text'},\r\n        lineFocusColor: {default: '#009688'},\r\n        lineBlurColor: {default: '#cfcfcf'},\r\n        disabledColor: {default: '#afafaf'},\r\n        disabled: {type: 'boolean', default: false},\r\n        fontFamily: {default: 'Roboto'},\r\n        fontColor: {default: '#4f4f4f'},\r\n        placeHolder: {default: 'Text...'},\r\n        intersectableClass: {default: 'intersectable'},\r\n    },\r\n    init(){\r\n\r\n        if (typeof CanvasInput === 'undefined') {\r\n            throw 'aframe-material-collection requires CanvasInput to be loaded first - <script src=\"https://cdn.rawgit.com/shaneharris/CanvasInput/master/CanvasInput.js\"></script>';\r\n        }\r\n        console.warn('ui-text is deprecated. please use ui-input-text instead. Thanks!')\r\n        // Setup text input box.\r\n        this.backing = document.createElement('a-plane');\r\n        this.backing.setAttribute('width',this.data.width);\r\n        this.backing.setAttribute('height',this.data.height);\r\n        this.backing.setAttribute('class',this.data.intersectableClass+' no-yoga-layout');\r\n        this.backing.setAttribute('opacity',0);\r\n        this.backing.setAttribute('scale','1 1 0');\r\n        this.el.appendChild(this.backing);\r\n        this.textMaterial = new THREE.MeshBasicMaterial();\r\n        this.textPlane = new THREE.Mesh(new THREE.PlaneGeometry(this.data.width,this.data.height),this.textMaterial);\r\n        this.el.object3D.add(this.textPlane);\r\n        this.textPlane.position.set(0,0,0.0001);\r\n\r\n        // Add under line for showing focus state.\r\n        this.underLine = document.createElement('a-plane');\r\n        this.underLine.setAttribute('width',this.data.width-0.05);\r\n        this.underLine.setAttribute('height',0.005);\r\n        this.underLine.setAttribute('position','0 -0.05 0.001');\r\n        this.underLine.setAttribute('class','no-yoga-layout');\r\n        this.underLine.setAttribute('shader','flat');\r\n        this.underLine.setAttribute('color',this.data.disabled?this.data.disabledColor:this.data.lineBlurColor);\r\n        this.el.appendChild(this.underLine);\r\n        // Handle click to focus the input text.\r\n        this.el.addEventListener('click',e=>this.focus());\r\n        // Double click to select all text.\r\n        this.el.addEventListener('dblclick',e=>this.select());\r\n        // Handle the blur event for setting the input value.\r\n        this.blurHandler = ()=>this.blur();\r\n        this.setValue();\r\n    },\r\n    tick(){\r\n        // If this element is focused then render the canvas input.\r\n        if(!this.is_focussed)return;\r\n        this.el.sceneEl.canvas_input.render();\r\n        this.textMaterial.map.needsUpdate = true;\r\n    },\r\n    numberOnly(e,is_float){\r\n        // Stolen from stack overflow.\r\n        if ([46, 8, 9, 27, 13, 110].indexOf(e.keyCode) !== -1 ||\r\n            // Allow: Ctrl/cmd+A\r\n            (e.keyCode === 65 && (e.ctrlKey === true || e.metaKey === true)) ||\r\n            // Allow: Ctrl/cmd+C\r\n            (e.keyCode === 67 && (e.ctrlKey === true || e.metaKey === true)) ||\r\n            // Allow: Ctrl/cmd+X\r\n            (e.keyCode === 88 && (e.ctrlKey === true || e.metaKey === true)) ||\r\n            // Allow: home, end, left, right\r\n            (e.keyCode >= 35 && e.keyCode <= 39)) {\r\n            // let it happen, don't do anything\r\n            return;\r\n        }\r\n        // Regex to allow float/int input - float inpit allows \"0.\" for as you type numbers - need to remove on blur.\r\n        // TODO: Need to remove trailing dot on blur to make a valid number.\r\n        if(e&&!((is_float?/^\\d*((\\.)|(\\.\\d+))?$/g:/^\\d*?$/g).test(this.el.sceneEl.canvas_input.value()+e.key))){\r\n            e.preventDefault();\r\n        }\r\n    },\r\n    floatOnly(e){\r\n        return this.numberOnly(e,true);\r\n    },\r\n    setValue(){\r\n        this.setupCanvasInput();\r\n        this.el.sceneEl.canvas_input.render();\r\n        // Grap a frame from the canvas input wiith the current input value for displaying when not in focus.\r\n        let image = new Image();\r\n        image.src = this.el.sceneEl.canvas_input.renderCanvas().toDataURL(\"image/png\");\r\n        let texture = new THREE.Texture(image);\r\n        texture.needsUpdate = true;\r\n        texture.minFilter = THREE.LinearFilter;\r\n        this.textMaterial = new THREE.MeshBasicMaterial({map:texture});\r\n        this.textPlane.material = this.textMaterial;\r\n        // Update clipping planes for the new material.\r\n        this.setClippingPlanes();\r\n\r\n    },\r\n    select(){\r\n        // Select the text on double click.\r\n        this.el.sceneEl.canvas_input.selectText();\r\n    },\r\n    focus(){\r\n        // Start Changes\r\n        UI.utils.isChanging(this.el.sceneEl,this.el.object3D.uuid);\r\n        // Reset the global canvas input to this current inputs settings.\r\n        this.resetCanvasInput();\r\n        //this.el.focus();\r\n        this.el.sceneEl.canvas_input.focus();\r\n        this.el.sceneEl.canvas_input.onkeydown(e=>{\r\n            // Prevent input for integer and float only.\r\n            if(this.data.type===\"number\"){\r\n                this.floatOnly(e);\r\n            }else if(this.data.type===\"int\"){\r\n                this.numberOnly(e);\r\n            }\r\n        });\r\n        if(this.data.value === this.data.placeHolder){\r\n            // reset value if the same as placeholder.\r\n            this.el.sceneEl.canvas_input.value('');\r\n        }\r\n        // Set the current input to the input canvas texture.\r\n        this.textMaterial = new THREE.MeshBasicMaterial({map:new THREE.Texture(this.el.sceneEl.canvas_input.renderCanvas())});\r\n        this.textPlane.material = this.textMaterial;\r\n        // Update clipping planes for new material.\r\n        this.setClippingPlanes();\r\n        // Set the underline to the focussed state.\r\n        this.underLine.setAttribute('color',this.data.lineFocusColor);\r\n        this.textMaterial.map.minFilter = THREE.LinearFilter;\r\n        // Set focused flag\r\n        this.is_focussed = true;\r\n        // Add mouse down event handler for blur event to the render dom element.\r\n        this.el.sceneEl.renderer.domElement.addEventListener('mousedown',this.blurHandler);\r\n    },\r\n    setClippingPlanes(){\r\n        // If content clips are set for the scroll plane, then set them to the current material and set clipping enabled.\r\n        if(this.el._content_clips){\r\n            this.textMaterial.clippingPlanes = this.el._content_clips;\r\n            this.textMaterial.clipShadows = true;\r\n        }\r\n    },\r\n    blur(){\r\n        // Clicked off the input text field.\r\n        this.is_focussed = false;\r\n        this.el.sceneEl.renderer.domElement.removeEventListener('mousedown',this.blurHandler);\r\n        let new_value = this.el.sceneEl.canvas_input.value();\r\n        // Update the current valuue.\r\n        this.data.value = new_value;\r\n        // Reset the under line color to blur state.\r\n        this.underLine.setAttribute('color',this.data.lineBlurColor);\r\n        // Blur the canvas element to grab a frame without the carret.\r\n        this.el.sceneEl.canvas_input.blur();\r\n        // Set the input current value image.\r\n        this.setValue();\r\n        // Stop Changes\r\n        UI.utils.stoppedChanging(this.el.object3D.uuid);\r\n    },\r\n    resetCanvasInput(){\r\n        // Set the canvas input to this current inputs settings.\r\n        if(this.el.sceneEl.canvas_input) {\r\n            this.el.sceneEl.canvas_input.width((this.data.width - 0.1) * 300);\r\n            this.el.sceneEl.canvas_input.fontFamily(this.data.fontFamily);\r\n            this.el.sceneEl.canvas_input.fontColor(this.data.fontColor);\r\n            this.el.sceneEl.canvas_input.placeHolder(this.data.placeHolder);\r\n            this.el.sceneEl.canvas_input.value(this.data.value);\r\n            this.el.sceneEl.canvas_input.borderWidth(0);\r\n        }\r\n    },\r\n    updateSchema(){\r\n        if(this.data){\r\n            // Reset the current settings if changed programatically.\r\n            this.resetCanvasInput();\r\n        }\r\n    },\r\n    setupCanvasInput(){\r\n        // Setup the input canvas if not already setup\r\n        let canvas = document.getElementById('textCanvas');\r\n        canvas.width = (this.data.width)*300;\r\n        this.resetCanvasInput();\r\n        if(this.el.sceneEl.canvas_input){\r\n            return;\r\n        }\r\n        canvas.height = 45;\r\n        let input_settings = {\r\n            canvas:canvas,\r\n            fontSize:18,\r\n            fontFamily: this.data.fontFamily,\r\n            fontColor: this.data.fontColor,\r\n            width:(this.data.width-0.1)*300,\r\n            padding: 12,\r\n            borderWidth: 0,\r\n            borderRadius:0,\r\n            backgroundColor: '#fff',\r\n            placeHolder:this.data.placeHolder,\r\n            placeHolderColor:'#cfcfcf',\r\n            boxShadow: '0px 0px 0px #fff',\r\n            innerShadow:'0px 0px 0px rgba(255,255,255, 1)',\r\n            value:this.data.value\r\n        };\r\n        this.el.sceneEl.canvas_input = new CanvasInput(input_settings);\r\n    }\r\n});","/* global AFRAME,TWEEN,THREE */\r\n/**\r\n * Text input component Component for aframe-material-collection. Includes support for number/int only input.\r\n * @namespace aframe-material-collection\r\n * @component ui-text-input\r\n * @author Shane Harris\r\n */\r\n\r\nmodule.exports = AFRAME.registerComponent('ui-input-text', {\r\n    depends:['text'],\r\n    schema: {\r\n        value: {default: ''},\r\n        disabled: {type: 'boolean', default: false},\r\n        type: {default: 'text'},\r\n        cameraEl:{type:'selector'},\r\n        width:{type:'number',default:1},\r\n        height:{type:'number',default:0.2},\r\n        lookControlsComponent:{default:'look-controls'},\r\n        wasdControlsComponent:{default:'wasd-controls'},\r\n        placeHolder:{default:'Text...'}\r\n    },\r\n    init(){\r\n        this.setupElements();\r\n        this.text.addEventListener('textfontset',()=>{\r\n            this.text.selectionStart = 0;\r\n            this.text.selectionLength = 0;\r\n            this.startSelection = 0;\r\n            this.scrollOffset = 0;\r\n            this.alphabet = {};\r\n            this.scrollIndex = 0;\r\n            let chars = this.data.value.split('');\r\n            this.chars = [];\r\n            this.charsAllowed = ['-','_','+','=','{','}','[',']',':',';','\\'','@','~','#','<','>',',','.','?','/','|','\\\\','`','¬'];\r\n            for(let i = 0; i < chars.length; i++){\r\n                this.chars.push({char:chars[i]});\r\n            }\r\n            this.blurHandler = ()=>this.blur();\r\n            this.isMoving = false;\r\n            let mousemove = this.onMousemove.bind(this);\r\n            this.keydown = e=>this.handleKeyboardEvent(e);\r\n            this.backing.addEventListener('mousedown',()=>{\r\n                this.focus();\r\n                this.playPauseCamera('pause');\r\n                this.backing.addEventListener('ui-mousemove',mousemove);\r\n            });\r\n            this.el.sceneEl.addEventListener('mouseup',()=>{\r\n                this.backing.removeEventListener('ui-mousemove',mousemove);\r\n                this.isMoving = false;\r\n                this.setSelection(this.text.selectionStart,this.text.selectionLength)\r\n            });\r\n            this.el.setAttribute('visible',false);\r\n            setTimeout(()=>{\r\n                this.setValue();\r\n                this.setupScrollClips();\r\n                this.el.setAttribute('visible',true);\r\n            });\r\n        });\r\n        this.el.getValue = this.getValue.bind(this);\r\n    },\r\n    setupScrollClips(){\r\n        this.content_clips = [\r\n            new THREE.Plane( new THREE.Vector3( -1, 0, 0 ), 0 ),\r\n            new THREE.Plane( new THREE.Vector3( 1, 0, 0 ), 0 )\r\n        ];\r\n        this.setScrollClips();\r\n    },\r\n    selectAll(){\r\n        this.text.selectionStart = 0;\r\n        this.text.selectionLength = this.chars.length;\r\n        this.setValue();\r\n    },\r\n    increaseWrap(){\r\n        let child = this.text.object3D.children[this.text.object3D.children.length-1];\r\n        if(!child)return;\r\n        if(child.geometry.layout._linesTotal>1){\r\n            this.text.setAttribute('width',this.text.getAttribute('width')*1.2);\r\n            this.text.setAttribute('wrap-pixels',this.text.getAttribute('width')*500);\r\n            this.text.setAttribute('x-offset',((this.text.getAttribute('width')-this.data.width)/2));\r\n            this.increaseWrap();\r\n        }\r\n    },\r\n    setScrollClips(){\r\n        this.text.object3D.updateMatrixWorld();\r\n        this.content_clips[0].set(new THREE.Vector3( -1, 0, 0 ), (this.data.width/2)+0.005);\r\n        this.content_clips[1].set(new THREE.Vector3( 1, 0, 0 ), (this.data.width/2)+0.005);\r\n        this.content_clips[0].applyMatrix4(this.backing.object3D.matrixWorld);\r\n        this.content_clips[1].applyMatrix4(this.backing.object3D.matrixWorld);\r\n\r\n        let child = this.text.object3D.children[this.text.object3D.children.length-1];\r\n        if(child)child.material.clippingPlanes = this.text._content_clips?this.text._content_clips.concat(this.content_clips):this.content_clips;\r\n        let selectionHeight = this.selectionHighlight.getObject3D('mesh');\r\n        if(selectionHeight){\r\n            selectionHeight.material.clippingPlanes = this.text._content_clips?this.text._content_clips.concat(this.content_clips):this.content_clips;\r\n        }\r\n        let carret = this.carret.getObject3D('mesh');\r\n        if(carret){\r\n            carret.material.clipShadows = true;\r\n            carret.material.needsUpdate = true;\r\n            carret.material.clippingPlanes = this.text._content_clips?this.text._content_clips.concat(this.content_clips):this.content_clips;\r\n        }\r\n    },\r\n    numberOnly(e,is_float){\r\n        // Stolen from stack overflow.\r\n        if ([46, 8, 9, 27, 13, 110].indexOf(e.keyCode) !== -1 ||\r\n            // Allow: Ctrl/cmd+A\r\n            (e.keyCode === 65 && (e.ctrlKey === true || e.metaKey === true)) ||\r\n            // Allow: Ctrl/cmd+C\r\n            (e.keyCode === 67 && (e.ctrlKey === true || e.metaKey === true)) ||\r\n            // Allow: Ctrl/cmd+X\r\n            (e.keyCode === 88 && (e.ctrlKey === true || e.metaKey === true)) ||\r\n            // Allow: home, end, left, right\r\n            (e.keyCode >= 35 && e.keyCode <= 39)) {\r\n            // let it happen, don't do anything\r\n            return true;\r\n        }\r\n        // Regex to allow float/int input - float inpit allows \"0.\" for as you type numbers - need to remove on blur.\r\n        // TODO: Need to remove trailing dot on blur to make a valid number.\r\n        let output = this.getValue();\r\n        if(e){\r\n            return ((is_float?/^\\d*((\\.)|(\\.\\d+))?$/g:/^\\d*?$/g).test(output+e.key));\r\n        }\r\n\r\n    },\r\n    floatOnly(e){\r\n        return this.numberOnly(e,true);\r\n    },\r\n    focus(){\r\n        if(this.isFocused)return;\r\n        this.isFocused = true;\r\n        this.setupCarret();\r\n        UI.utils.isChanging(this.el.sceneEl,this.text.object3D.uuid);\r\n        this.setValue();\r\n        this.setScrollClips();\r\n        setTimeout(()=>this.el.sceneEl.addEventListener('mousedown',this.blurHandler),50);\r\n        window.addEventListener('keydown', this.keydown);\r\n        this.underline.setAttribute('height',0.008);\r\n        this.underline.setAttribute('color','#009688');\r\n    },\r\n    blur(){\r\n        this.isFocused = false;\r\n        clearInterval(this.carretInterval)\r\n        this.carret.getObject3D('mesh').material.opacity = 0;\r\n        this.el.sceneEl.removeEventListener('mousedown',this.blurHandler);\r\n        this.playPauseCamera('play');\r\n        window.removeEventListener('keydown', this.keydown);\r\n        UI.utils.stoppedChanging(this.text.object3D.uuid);\r\n        this.underline.setAttribute('height',0.005);\r\n        this.underline.setAttribute('color','#bfbfbf');\r\n        if(this.chars.length&&this.chars[this.chars.length-1].char==='.'&&this.data.type===\"number\"){\r\n            this.chars.pop();\r\n            this.setValue();\r\n        }\r\n    },\r\n    handleKeyboardEvent(e){\r\n        if(e.keyCode===88&&e.ctrlKey) { //CTRL + X\r\n            // let selection = window.getSelection();\r\n            // selection.removeAllRanges();\r\n            //\r\n            // let textNode = document.createTextNode('lol')\r\n            // document.body.appendChild(textNode)\r\n            //\r\n            // let range = document.createRange();\r\n            // range.setStart(textNode, 1);\r\n            // range.setEnd(textNode, 3);\r\n            //\r\n            // selection.addRange(range)\r\n            //\r\n            // document.execCommand('copy')\r\n            //\r\n            // document.body.removeChild(textNode)\r\n            // TODO: Clipboard API?? - https://stackoverflow.com/questions/6413036/get-current-clipboard-content\r\n\r\n\r\n            // const modifyCopy = e => {\r\n            //     console.log('copy executed!')\r\n            //     e.clipboardData.setData('text/plain', 'Please don\\'t copy our work!');\r\n            //     e.preventDefault();\r\n            // };\r\n            //\r\n            // document.addEventListener('copy', modifyCopy);\r\n        }if(e.keyCode===67&&e.ctrlKey) { //CTRL + C\r\n\r\n        }else if(e.keyCode===86&&e.ctrlKey) { //CTRL + V\r\n\r\n        }else if(e.keyCode===65&&e.ctrlKey) { //CTRL + A\r\n            this.text.selectionStart = 0;\r\n            this.text.selectionLength = this.chars.length;\r\n        }else if(e.code.indexOf('Key')>-1||e.code.indexOf('Digit')>-1||this.charsAllowed.indexOf(e.key)>-1){\r\n            let check = true;\r\n            switch(this.data.type){\r\n                case \"number\":\r\n                    check = this.floatOnly(e);\r\n                    break;\r\n                case \"int\":\r\n                    console.log(this.numberOnly(e));\r\n                    check = this.numberOnly(e);\r\n                    break;\r\n            }\r\n            if(check){\r\n                this.chars.splice(this.text.selectionStart,this.text.selectionLength,{char:e.key});\r\n                this.text.selectionStart++;\r\n                this.text.selectionLength = 0;\r\n                console.log(this.text.selectionStart,this.text.selectionLength,{char:e.key});\r\n            }\r\n        }else if(e.keyCode===46){// Delete\r\n            this.chars.splice(this.text.selectionStart,this.text.selectionLength||1);\r\n            this.text.selectionStart = this.text.selectionStart>this.chars.length?this.chars.length:this.text.selectionStart;\r\n            this.text.selectionLength = 0;\r\n        }else if(e.keyCode===39){\r\n            if(!e.shiftKey){\r\n                if(this.text.selectionLength){\r\n                    this.text.selectionStart+=this.text.selectionLength;\r\n                }else{\r\n                    this.text.selectionStart++;\r\n                }\r\n                this.text.selectionLength = 0;\r\n                if(this.text.selectionStart>this.chars.length)this.text.selectionStart = this.chars.length;\r\n                delete this.shiftStartPos\r\n            }else{\r\n                if(!this.shiftStartPos){\r\n                    this.shiftStartPos = this.text.selectionStart;\r\n                }\r\n               if(this.text.selectionStart<this.shiftStartPos){\r\n                    this.text.selectionStart++;\r\n                    this.text.selectionLength=Math.abs(this.shiftStartPos-this.text.selectionStart);\r\n                }else{\r\n                    this.text.selectionLength++;\r\n                }\r\n\r\n            }\r\n        }else if(e.keyCode===37){\r\n            if(!e.shiftKey) {\r\n                if (!this.text.selectionLength) {\r\n                    this.text.selectionStart--;\r\n                }\r\n                this.text.selectionLength = 0;\r\n                if (this.text.selectionStart < 0) this.text.selectionStart = 0;\r\n                delete this.shiftStartPos\r\n            }else{\r\n                if(!this.shiftStartPos){\r\n                    this.shiftStartPos = this.text.selectionStart;\r\n                }\r\n                if(this.text.selectionStart+this.text.selectionLength>this.shiftStartPos){\r\n                    this.text.selectionLength--;\r\n                }else{\r\n                    this.text.selectionStart--;\r\n                    this.text.selectionLength=Math.abs(this.shiftStartPos-this.text.selectionStart);\r\n                }\r\n            }\r\n        }else{\r\n            if(this.text.selectionLength) {\r\n                if(e.keyCode===8) {// Backspace\r\n                    this.chars.splice(this.text.selectionStart, this.text.selectionLength  );\r\n                    this.text.selectionLength = 0;\r\n                }\r\n            }else{\r\n                if(e.keyCode===8){// Backspace\r\n                    if(this.text.selectionStart){\r\n                        this.chars.splice(this.text.selectionStart-1,this.text.selectionLength||1 );\r\n                        this.text.selectionStart = this.text.selectionStart-1;\r\n                    }\r\n                }else if(e.keyCode===32){ // Space\r\n                    this.chars.splice(this.text.selectionStart,0,{char:' '});\r\n                    this.text.selectionStart++;\r\n                }\r\n            }\r\n\r\n        }\r\n        this.setValue();\r\n        this.carret.getObject3D('mesh').material.opacity = 1;\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n    },\r\n    setValue(){\r\n        this.setScrolledValue();\r\n        this.setCharacters();\r\n        this.setSelection(this.text.selectionStart,this.text.selectionLength);\r\n        this.increaseWrap();\r\n    },\r\n    setScrolledValue(){\r\n        let output = this.getValue();\r\n        this.text.setAttribute('value',output);\r\n        if(!this.chars.length){\r\n            this.text.setAttribute('color','#bfbfbf');\r\n            this.text.setAttribute('value',this.data.placeHolder);\r\n        }else{\r\n            this.text.setAttribute('value',output);\r\n            this.text.setAttribute('color','#2f2f2f');\r\n        }\r\n    },\r\n    onMousemove(e){\r\n        let currentSelection = this.getSelectionPosition(e);\r\n        if(!this.isMoving){\r\n            this.isMoving = true;\r\n            this.startSelection = currentSelection;\r\n        }\r\n        let selection = this.getNearestGlyph(this.startSelection,currentSelection);\r\n        this.selectionHighlight.setAttribute('scale',(selection.end-selection.start)+' 1 1');\r\n        this.selectionHighlight.setAttribute('position',(selection.start+((selection.end-selection.start)/2))+' 0 0.001');\r\n        this.carret.setAttribute('position',selection.end+' 0 0.001');\r\n\r\n    },\r\n    setupElements(){\r\n\r\n\r\n        this.container = document.createElement('a-entity');\r\n        this.container.setAttribute('position',(this.data.width/2)+' 0 0');\r\n\r\n        this.text = document.createElement('a-text');\r\n        this.text.setAttribute('color','#2f2f2f');\r\n        this.text.setAttribute('anchor','center');\r\n        this.text.setAttribute('align','left');\r\n        this.text.setAttribute('width',this.data.width);\r\n        this.text.setAttribute('wrap-pixels',this.data.width*500);\r\n        this.text.className = 'no-yoga-layout';\r\n        this.text.setAttribute('height',this.data.height);\r\n        this.text.setAttribute('value',this.data.value);\r\n        this.container.appendChild(this.text);\r\n\r\n        this.selectionHighlight = document.createElement('a-plane');\r\n        this.selectionHighlight.setAttribute('width',1);\r\n        this.selectionHighlight.setAttribute('scale','0 1 1');\r\n        this.selectionHighlight.setAttribute('height',0.16);\r\n        this.selectionHighlight.setAttribute('transparent',true);\r\n        this.selectionHighlight.className = 'no-yoga-layout';\r\n        this.selectionHighlight.setAttribute('color','#009688');\r\n        this.selectionHighlight.setAttribute('shader','flat');\r\n        this.selectionHighlight.setAttribute('opacity',0.3);\r\n        this.selectionHighlight.setAttribute('position','0 0 0.001');\r\n        this.text.appendChild(this.selectionHighlight);\r\n\r\n        this.carret = document.createElement('a-plane');\r\n        this.carret.setAttribute('width',0.01);\r\n        this.carret.setAttribute('height',0.12);\r\n        this.carret.setAttribute('transparent',true);\r\n        this.carret.setAttribute('opacity',0);\r\n        this.carret.setAttribute('shader','flat');\r\n        this.carret.className = 'no-yoga-layout';\r\n        this.carret.setAttribute('color','#009688');\r\n        this.carret.setAttribute('position',-(this.data.width/2)+' 0 0.001');\r\n        this.text.appendChild(this.carret);\r\n\r\n\r\n        this.backing = document.createElement('a-plane');\r\n        this.backing.className = 'intersectable no-yoga-layout';\r\n        this.backing.setAttribute('width',this.data.width+0.1);\r\n        this.backing.setAttribute('height',this.data.height);\r\n        this.backing.setAttribute('color','white');\r\n        this.backing.setAttribute('shader','flat');\r\n        this.container.appendChild(this.backing);\r\n\r\n\r\n\r\n        this.underline = document.createElement('a-plane');\r\n        this.underline.setAttribute('width',this.data.width);\r\n        this.underline.setAttribute('height',0.005);\r\n        this.underline.className = 'no-yoga-layout';\r\n        this.underline.setAttribute('shader','flat');\r\n        this.underline.setAttribute('color','#bfbfbf');\r\n        this.underline.setAttribute('position','0 -0.072 0.001');\r\n        this.container.appendChild(this.underline);\r\n\r\n        this.el.appendChild(this.container);\r\n\r\n\r\n    },\r\n    setupCarret(){\r\n        let material = this.carret.getObject3D('mesh').material;\r\n        this.carretInterval = setInterval(()=>{\r\n            material.opacity = material.opacity?0:1;\r\n        },350);\r\n    },\r\n    getValue(){\r\n        let output = '';\r\n        for(let i = 0; i < this.chars.length; i++){\r\n            output+=this.chars[i].char;\r\n        }\r\n        return output;\r\n    },\r\n    getSelectionPosition(e){\r\n        this.el.object3D.updateMatrixWorld();\r\n        return this.text.object3D.worldToLocal(e.detail.intersection.point.clone()).x\r\n    },\r\n    playPauseCamera(method){\r\n        if(this.data.cameraEl){\r\n            if(this.data.cameraEl.components[this.data.lookControlsComponent]) {\r\n                this.data.cameraEl.components[this.data.lookControlsComponent][method]();\r\n            }\r\n            if(this.data.cameraEl.components[this.data.wasdControlsComponent]) {\r\n                this.data.cameraEl.components[this.data.wasdControlsComponent][method]();\r\n            }\r\n            if(method===\"play\"){\r\n                document.querySelector('a-scene').setAttribute('keyboard-shortcuts',\"enterVR: true\")\r\n            }\r\n            if(method===\"pause\"){\r\n                document.querySelector('a-scene').setAttribute('keyboard-shortcuts',\"enterVR: false\")\r\n            }\r\n        }\r\n    },\r\n    setCharacters(){\r\n        this.positions = [];\r\n        let child = this.text.object3D.children[this.text.object3D.children.length-1];\r\n        if(!this.chars.length||!child)return;\r\n        let glyphs = child.geometry.layout.glyphs;\r\n        let scale = child.scale.x;\r\n        let lastPosition = 0;\r\n        for(let i = 0; i < glyphs.length; i++){\r\n            let glyph = glyphs[i];\r\n            let currentWidth = (this.chars[i].char===' '?20:glyph.data.width);\r\n            let current = (((glyph.position[0]+currentWidth+glyph.position[1])*scale)+0.08);\r\n            if(i===0){\r\n                lastPosition = (((glyph.position[0]+glyph.position[1])*scale)+0.08)\r\n            }\r\n            if(!this.chars[i].id){\r\n                this.chars[i].id=glyph.data.id;\r\n                this.chars[i].width = current-lastPosition;\r\n            }\r\n            this.chars[i].left = lastPosition;\r\n            lastPosition = current;\r\n        }\r\n    },\r\n    getNearestGlyph(startPosition,endPosition){\r\n        let width = Number(this.text.getAttribute('width'));\r\n        let parentWidth = this.data.width;\r\n        if(endPosition<startPosition){\r\n            let tempPosition = endPosition;\r\n            endPosition = startPosition;\r\n            startPosition = tempPosition;\r\n        }\r\n        if(startPosition<-parentWidth/2){\r\n            startPosition = -parentWidth/2;\r\n        }\r\n        if(endPosition>width-parentWidth/2){\r\n            endPosition = width-parentWidth/2;\r\n        }\r\n        let startDiff = Number.POSITIVE_INFINITY;\r\n        let endDiff = Number.POSITIVE_INFINITY;\r\n        let output = {start:0,end:0};\r\n        if(this.chars.length){\r\n            for(let i = 0; i <= this.chars.length; i++){\r\n                let position = this.chars[i===this.chars.length?i-1:i];\r\n                let currentPosition = (i===this.chars.length?position.left+position.width:position.left)-(parentWidth)/2;\r\n                if(Math.abs(startPosition-currentPosition)<startDiff){\r\n                    startDiff = Math.abs(startPosition-currentPosition);\r\n                    output.start = currentPosition;\r\n                    this.text.selectionStart = i;\r\n                }\r\n                if(Math.abs(endPosition-currentPosition)<endDiff){\r\n                    endDiff = Math.abs(endPosition-currentPosition);\r\n                    output.end = currentPosition;\r\n                    this.text.selectionLength = i-this.text.selectionStart;\r\n                }\r\n            }\r\n        }\r\n        return output;\r\n    },\r\n    setSelection(start,length){\r\n        this.text.selectionStart = start;\r\n        this.text.selectionLength = length;\r\n        let right = 0,left = 0;\r\n        for(let i = 0; i < this.chars.length; i++){\r\n            let position = this.chars[i];\r\n            if(i>=start&&i<start+length+1){\r\n                let current = position.left;\r\n                if(i===start){\r\n                    left = current\r\n                }\r\n                right = current;\r\n            }\r\n        }\r\n        let end = this.chars.length?this.chars[this.chars.length-1].left+this.chars[this.chars.length-1].width:0;\r\n        if(start+length===this.chars.length){\r\n            right = end\r\n        }\r\n        if(start===this.chars.length){\r\n            left = right = end\r\n        }\r\n        let parentWidth = this.data.width;\r\n        this.selectionHighlight.setAttribute('scale',(right-left)+' 1 1');\r\n        this.selectionHighlight.setAttribute('position',(left+((right-left)/2)-((parentWidth)/2))+' 0 0.001')\r\n        let carretPosition = (right-((parentWidth)/2));\r\n        this.carret.setAttribute('position',carretPosition+' 0 0.001');\r\n\r\n        if(carretPosition>(parentWidth/2)-this.scrollOffset){\r\n            this.scrollOffset = -(carretPosition-(parentWidth/2));\r\n            this.text.setAttribute('position',this.scrollOffset+' 0 0');\r\n        }\r\n\r\n        if((carretPosition+parentWidth/2)<-this.scrollOffset){\r\n            this.scrollOffset+=(-this.scrollOffset-(carretPosition+parentWidth/2));\r\n            if(this.scrollOffset>0)this.scrollOffset=0;\r\n            this.text.setAttribute('position',this.scrollOffset+' 0 0');\r\n        }\r\n    },\r\n    updateSchema() {\r\n    }\r\n});\r\n//","/* global AFRAME,TWEEN */\r\n/**\r\n * Button base Component for aframe-material-collection. This is used as the base component for all the button primitives.\r\n * @namespace aframe-material-collection\r\n * @component ui-btn\r\n * @author Shane Harris\r\n */\r\n\r\nmodule.exports = AFRAME.registerComponent('ui-btn', {\r\n    schema:{\r\n        duration:{type:'int',default:250},\r\n        hoverHeight:{type:'number',default:0.01},\r\n        activeHeight:{type:'number',default:-0.001},\r\n        disabled:{type:'boolean',default:false}\r\n    },\r\n    updateSchema(){\r\n      // TODO: handle updates to the button state, disabled flag here.\r\n    },\r\n    init() {\r\n        // Store the current button z value for animating mouse events\r\n        this.defaultZ = this.el.object3D.position.z;\r\n        // register input events for interaction\r\n        if(!this.data.disabled){\r\n            this.el.addEventListener('mouseenter', e=>this.mouseEnter(e));\r\n            this.el.addEventListener('mousedown', e=>this.mouseDown(e));\r\n            this.el.addEventListener('mouseup', e=>this.mouseUp(e));\r\n            this.el.addEventListener('mouseleave', e=>this.mouseLeave(e));\r\n        }\r\n    },\r\n    mouseEnter(e){\r\n        const _this = this;\r\n        // Lift the button up for hover animation\r\n        this.tween(this.defaultZ,this.defaultZ+this.data.hoverHeight,function(){\r\n            _this.el.object3D.position.z = this.x;\r\n        },function(){\r\n            _this.el.object3D.position.z = _this.defaultZ+_this.data.hoverHeight;\r\n        });\r\n        //UI.utils.preventDefault(e)\r\n    },\r\n    mouseLeave(e){\r\n        // Ignore mouse leave event if the button was clicked - mouse up already resets to default state.\r\n        if(this.is_clicked){\r\n            return this.is_clicked = false;\r\n        }\r\n        // Reset button state from hover\r\n        this.resetAnimation(this.defaultZ+this.data.hoverHeight);\r\n        //UI.utils.preventDefault(e)\r\n    },\r\n    mouseUp(e){\r\n        this.is_clicked = true;\r\n        // Reset button state from pressed\r\n        this.resetAnimation(this.defaultZ+this.data.activeHeight);\r\n        UI.utils.preventDefault(e)\r\n    },\r\n    mouseDown(e){\r\n        const _this = this;\r\n        // Press state animation from hovered\r\n        this.tween(this.defaultZ+this.data.hoverHeight,this.defaultZ+this.data.activeHeight,function(){\r\n            _this.el.object3D.position.z = this.x;\r\n        },function(){\r\n            _this.el.object3D.position.z = _this.defaultZ+_this.data.activeHeight;\r\n        });\r\n        UI.utils.preventDefault(e)\r\n    },\r\n    resetAnimation(start_z){\r\n        let _this = this;\r\n        this.tween(start_z,this.defaultZ,function(){\r\n            _this.el.object3D.position.z = this.x;\r\n        },function(){\r\n            _this.el.object3D.position.z = _this.defaultZ;\r\n        })\r\n    },\r\n    tween(from,to,callback,complete){\r\n        let _this = this;\r\n        // Start changes\r\n        UI.utils.isChanging(this.el.sceneEl,this.el.object3D.uuid);\r\n        return new TWEEN.Tween({x:from})\r\n            .to({ x: to}, this.data.duration)\r\n            .onUpdate(callback)\r\n            .onComplete(function(){\r\n                // Stop changes\r\n                UI.utils.stoppedChanging(_this.el.object3D.uuid)\r\n                return complete.call(this);\r\n            })\r\n            .easing(TWEEN.Easing.Exponential.Out).start();\r\n    }\r\n});","/* global AFRAME,THREE */\r\n/**\r\n * A component to load an icon and set some defaults for positioning and transparency.\r\n * @namespace aframe-material-collection\r\n * @component ui-icon\r\n * @author Shane Harris\r\n */\r\nmodule.exports = AFRAME.registerComponent('ui-icon', {\r\n    schema: {\r\n        src: {default: 'icons/send_white_64dp.png'},\r\n        size:{type:'vec2',default:{x:0.1,y:0.1}},\r\n        zIndex:{type:'number',default:0.003},\r\n        color:{default:'#fff'}\r\n    },\r\n    init() {\r\n        this.icon = new THREE.Mesh(new THREE.PlaneGeometry(this.data.size.x,this.data.size.y),new THREE.MeshBasicMaterial({color:this.data.color,alphaTest:0.4,transparent:true,map:new THREE.TextureLoader().load(this.data.src)}));\r\n        this.icon.position.set(0,0,this.data.zIndex);\r\n        this.el.object3D.add(this.icon);\r\n    }\r\n});","/* global AFRAME,THREE */\r\n/**\r\n * Rounded corners Component for aframe-material-collection. Expects an a-plane entity.\r\n * @namespace aframe-material-collection\r\n * @component ui-rounded\r\n * @author Shane Harris\r\n */\r\n\r\nmodule.exports = AFRAME.registerComponent('ui-rounded', {\r\n    schema: {\r\n        borderRadius: {type: 'number', default: 0.01},\r\n        curveSegments:{type: 'int', default: 1},\r\n    },\r\n    init() {\r\n        let mesh = this.el.getObject3D('mesh');\r\n        let roundedRectShape = new THREE.Shape();\r\n        // Draw the Rounded rectangle shape centered in the object - from three.js shapes example.\r\n        ( function roundedRect( ctx, x, y, width, height, radius ) {\r\n            ctx.moveTo( x, y + radius );\r\n            ctx.lineTo( x, y + height - radius );\r\n            ctx.quadraticCurveTo( x, y + height, x + radius, y + height );\r\n            ctx.lineTo( x + width - radius, y + height );\r\n            ctx.quadraticCurveTo( x + width, y + height, x + width, y + height - radius );\r\n            ctx.lineTo( x + width, y + radius );\r\n            ctx.quadraticCurveTo( x + width, y, x + width - radius, y );\r\n            ctx.lineTo( x + radius, y );\r\n            ctx.quadraticCurveTo( x, y, x, y + radius );\r\n        } )( roundedRectShape, -mesh.geometry.metadata.parameters.width/2, -mesh.geometry.metadata.parameters.height/2, mesh.geometry.metadata.parameters.width, mesh.geometry.metadata.parameters.height, this.data.borderRadius );\r\n        // Update the geometry.\r\n        mesh.geometry = new THREE.ShapeGeometry(roundedRectShape,this.data.curveSegments);\r\n        // Emit rounded-loaded event once the geometry has been updated.\r\n        this.el.emit('rounded-loaded', null, false);\r\n    }\r\n});","/* global AFRAME,TWEEN,THREE */\r\n/**\r\n * Ripple Component for aframe-material-collection. Add a ripple to an entity with options for controlling\r\n * clamping the animation and offsetting the ripple z position to place on top or bottom\r\n * @namespace aframe-material-collection\r\n * @component ui-ripple\r\n * @author Shane Harris\r\n */\r\n\r\nmodule.exports = AFRAME.registerComponent('ui-ripple',{\r\n    schema:{\r\n        color: {default: '#fff'},\r\n        duration:{type:'int',default:1000},\r\n        fadeDuration:{type:'int',default:750},\r\n        fadeDelay:{type:'int',default:250},\r\n        clampToSquare:{type:'boolean',default:false},\r\n        size:{type:'vec2',default:{x:1,y:1}},\r\n        zIndex:{type:'number',default:-0.001},\r\n        segments:{type:'int',default:6}\r\n    },\r\n    init(){\r\n        // Setup circle geometry for ripple effect\r\n        this.rippleGeometry = new THREE.CircleGeometry(Math.max(this.data.size.x,this.data.size.y),this.data.segments);\r\n        this.ripple = new THREE.Mesh(this.rippleGeometry.clone(),new THREE.MeshBasicMaterial({color:this.data.color,transparent:true, opacity:0.4,alphaTest:0.1}));\r\n        this.ripple.scale.set(0.00001,0.00001,0.00001);\r\n        this.el.object3D.add(this.ripple);\r\n        this.el.addEventListener('mousedown',this.click.bind(this));\r\n        this.ripple.position.set(0,0,this.data.zIndex);\r\n        // Set clipping planes if clamping to square\r\n        if(this.data.clampToSquare){\r\n\r\n            this.content_clips = [\r\n                new THREE.Plane( new THREE.Vector3( 0, 1, 0 ), (this.data.size.y/2) ),\r\n                new THREE.Plane( new THREE.Vector3( 0, -1, 0 ), (this.data.size.y/2) ),\r\n                new THREE.Plane( new THREE.Vector3( -1, 0, 0 ), (this.data.size.x/2) ),\r\n                new THREE.Plane( new THREE.Vector3( 1, 0, 0 ), (this.data.size.x/2) )\r\n            ];\r\n        }\r\n    },\r\n    click(e){\r\n        if(this.isRippling){\r\n            // Throttle clicks.\r\n            return e.preventDefault();\r\n        }\r\n        this.isRippling = true;\r\n        // Set clipping planes if clamping to square\r\n        if(this.data.clampToSquare){\r\n            this.setRippleClips(this.ripple.material);\r\n        }\r\n        // Animate the size of the circle ripple from the center of the entity.\r\n        this.tweenSize(this.ripple.geometry);\r\n        // Fade the circle out as it ripples.\r\n        this.tweenOpacity(this.ripple.material);\r\n    },\r\n    setRippleClips(){\r\n        // update content clips world positions from this current element.\r\n        this.content_clips[0].set(new THREE.Vector3( 0, 1, 0 ), (this.data.size.y/2));\r\n        this.content_clips[1].set(new THREE.Vector3( 0, -1, 0 ), (this.data.size.y/2));\r\n        this.content_clips[2].set(new THREE.Vector3( -1, 0, 0 ), (this.data.size.x/2));\r\n        this.content_clips[3].set(new THREE.Vector3( 1, 0, 0 ), (this.data.size.x/2));\r\n        //this.el.sceneEl.object3D.updateMatrixWorld();\r\n        this.content_clips[0].applyMatrix4(this.el.object3D.matrixWorld);\r\n        this.content_clips[1].applyMatrix4(this.el.object3D.matrixWorld);\r\n        this.content_clips[2].applyMatrix4(this.el.object3D.matrixWorld);\r\n        this.content_clips[3].applyMatrix4(this.el.object3D.matrixWorld);\r\n        this.ripple.material.clippingPlanes = this.el._content_clips?this.el._content_clips.concat(this.content_clips):this.content_clips;\r\n        this.ripple.material.clipShadows = true;\r\n        this.ripple.material.needsUpdate = true;\r\n    },\r\n    tweenSize(geometry){\r\n        let _this = this;\r\n        // Start changes\r\n        UI.utils.isChanging(this.el.sceneEl,_this.ripple.uuid);\r\n        new TWEEN.Tween({x:0.00001})\r\n            .to({ x: 1}, this.data.duration)\r\n            .onUpdate(function(){\r\n                _this.ripple.scale.set(this.x,this.x,this.x);\r\n            })\r\n            .onComplete(()=>{\r\n                _this.ripple.scale.set(0.00001,0.00001,0.00001);\r\n                // Reset throttle flag.\r\n                this.isRippling = false;\r\n                // Stop changes\r\n                UI.utils.stoppedChanging(_this.ripple.uuid);\r\n            })\r\n            .easing(TWEEN.Easing.Exponential.Out).start();\r\n    },\r\n    tweenOpacity(material){\r\n        new TWEEN.Tween({x:0.4})\r\n            .to({ x: 0}, this.data.fadeDuration)\r\n            .delay(this.data.fadeDelay)\r\n            .onUpdate(function(){\r\n                material.opacity = this.x;\r\n            })\r\n            .onComplete(()=>{\r\n                material.opacity = 0.4;\r\n            })\r\n            .easing(TWEEN.Easing.Exponential.Out).start();\r\n    }\r\n});","/* global AFRAME,TWEEN,THREE */\r\n/**\r\n * Switch Component for aframe-material-collection. Includes a disabled state.\r\n * @namespace aframe-material-collection\r\n * @component ui-switch\r\n * @author Shane Harris\r\n */\r\n\r\nmodule.exports = AFRAME.registerComponent('ui-switch', {\r\n    schema: {\r\n        value: {type:'boolean',default: false},\r\n        disabled:{type:'boolean',default: false},\r\n        progressColor:{default:'#4db6ac'},\r\n        handleColor:{default:'#009688'},\r\n        handleDisabledColor:{default:'#afafaf'},\r\n        railColor:{default:'#fff'},\r\n        switchDuration:{type:'int',default: 350},\r\n        handleZIndex:{type:'number',default:0.01},\r\n        intersectableClass: {default: 'intersectable'},\r\n    },\r\n    updateSchema(){\r\n        if(this.data){\r\n            if(this.data.disabled){\r\n                if(this.data.value){\r\n                    this.data.value=false;\r\n                    this.click();\r\n                }\r\n            }else{\r\n                this.click();\r\n            }\r\n            this.setDisabled();\r\n        }\r\n    },\r\n    init() {\r\n        this.width = 0.3;\r\n        this.height = 0.1;\r\n        // Setup handle circle entity.\r\n        this.handleEl = document.createElement('a-circle');\r\n        this.handleEl.setAttribute('radius',0.055);\r\n        this.handleEl.setAttribute('color',this.data.handleColor);\r\n        this.handleEl.setAttribute('shader','flat');\r\n        this.handleEl.setAttribute('ui-ripple','size:0.1 0.1;color:#999;fadeDelay:300;duration:500');\r\n        this.handleEl.setAttribute('class',this.data.intersectableClass+' no-yoga-layout');\r\n        this.handleEl.setAttribute('position','-0.05 0 '+this.data.handleZIndex);\r\n        this.handleEl.setAttribute('segments',6);\r\n        this.el.appendChild(this.handleEl);\r\n\r\n        // Setup rail entity.\r\n        this.railEl = document.createElement('a-plane');\r\n        this.railEl.setAttribute('width','0.15');\r\n        this.railEl.setAttribute('height','0.05');\r\n        this.railEl.setAttribute('shader','flat');\r\n        this.railEl.setAttribute('ui-rounded','borderRadius:0.025');\r\n        this.railEl.setAttribute('color',this.data.railColor);\r\n        this.railEl.setAttribute('class',this.data.intersectableClass+' no-yoga-layout');\r\n        this.el.appendChild(this.railEl);\r\n        // Wait for the rounded edge on the rail to load to clone the geometry for the\r\n        // selected progress bar part of the rail\r\n        this.railEl.addEventListener('rounded-loaded',()=>{\r\n            this.getRailObject(this.railEl.object3D);\r\n            this.setDisabled();\r\n            this.click();\r\n        });\r\n        this.clickHandler = e=>{\r\n            this.data.value = !this.data.value;\r\n            this.click();\r\n            // Prevent default behaviour of event\r\n            if(e.detail.preventDefault){\r\n                e.detail.preventDefault();\r\n            }\r\n        };\r\n    },\r\n    setDisabled(){\r\n        // Add / Remove click handlers based on disabled state.\r\n        if(this.data.disabled){\r\n            this.handleEl.removeEventListener('mousedown',this.clickHandler);\r\n            this.handleEl.setAttribute('color',this.data.handleDisabledColor);\r\n        }else{\r\n            this.handleEl.addEventListener('mousedown',this.clickHandler);\r\n            this.handleEl.setAttribute('color',this.data.handleColor);\r\n        }\r\n    },\r\n    click(){\r\n        // Emit the current selected value\r\n        this.el.emit('ui-switch-changed',this.data.value);\r\n        // Animate the switch handle and the progress bar.\r\n        this.tweenHandle();\r\n        this.tweenProgress();\r\n    },\r\n    getRailObject(object){\r\n        // Get the rounded shape geomtery.\r\n        object.traverse(child=>{\r\n            if(child.geometry&&child.geometry.type===\"ShapeGeometry\"){\r\n                this.progress = new THREE.Mesh(child.geometry.clone(),new THREE.MeshBasicMaterial({color:this.data.progressColor}));\r\n                this.progress.position.set(-0.075,0,0.001);\r\n                this.progress.scale.set(0.00001,1,1);\r\n                this.el.object3D.add(this.progress);\r\n            }\r\n        });\r\n    },\r\n    tweenProgress(){\r\n        if(this.progress){\r\n            new TWEEN.Tween(this.progress.position)\r\n                .to(new THREE.Vector3(this.data.value?0:-0.075,0,0.001), this.data.switchDuration)\r\n                .easing(TWEEN.Easing.Exponential.Out).start();\r\n            new TWEEN.Tween(this.progress.scale)\r\n                .to(new THREE.Vector3(this.data.value?1:0.00001,1,1), this.data.switchDuration)\r\n                .easing(TWEEN.Easing.Exponential.Out).start();\r\n        }\r\n    },\r\n    tweenHandle(){\r\n        if(this.handleEl){\r\n            // Start changes\r\n            UI.utils.isChanging(this.el.sceneEl,this.el.object3D.uuid);\r\n            new TWEEN.Tween(this.handleEl.object3D.position)\r\n                .to(new THREE.Vector3(this.data.value?0.05:-0.05,0,this.data.handleZIndex), this.data.switchDuration)\r\n                .onComplete(()=>{\r\n                    // Stop changes\r\n                    UI.utils.stoppedChanging(this.el.object3D.uuid);\r\n                })\r\n                .easing(TWEEN.Easing.Exponential.Out).start();\r\n        }\r\n    }\r\n});","/* global AFRAME,TWEEN,THREE */\r\n/**\r\n * Toast Component for aframe-material-collection.\r\n * @namespace aframe-material-collection\r\n * @component ui-toast\r\n * @author Shane Harris\r\n */\r\n\r\nmodule.exports = AFRAME.registerComponent('ui-toast', {\r\n    schema: {\r\n        toastEl:{type:'selector'},\r\n        message:{default:'Hello from toast!'}\r\n    },\r\n    init() {\r\n        this.originalPosition = this.data.toastEl.getAttribute('position').clone();\r\n        this.el.addEventListener('mousedown',()=>{\r\n            if(this.closeTween)this.closeTween.stop();\r\n            UI.utils.isChanging(this.el.sceneEl,this.data.toastEl.object3D.uuid);\r\n            this.data.toastEl.setAttribute('visible',true);\r\n            this.data.toastEl.setAttribute('text-value',UI.utils.shorten(this.data.message,85));\r\n            let _this = this;\r\n            new TWEEN.Tween({x:this.originalPosition.x,y:this.originalPosition.y-0.1,z:this.originalPosition.z})\r\n                .to(this.originalPosition, 350)\r\n                .onUpdate(function(){\r\n                    _this.data.toastEl.setAttribute('position',this);\r\n                })\r\n                .onComplete(()=>{\r\n                    // Stop changes\r\n                    this.closeTween = new TWEEN.Tween({x:0.8})\r\n                        .delay(2000)\r\n                        .to({x:0.0001}, 350)\r\n                        .onUpdate(function(){\r\n                            _this.data.toastEl.setAttribute('opacity',this.x);\r\n                        })\r\n                        .onComplete(()=>{\r\n                            this.data.toastEl.setAttribute('visible',false);\r\n                            UI.utils.stoppedChanging(this.data.toastEl.object3D.uuid);\r\n                        })\r\n                        .easing(TWEEN.Easing.Exponential.Out).start();\r\n                })\r\n                .easing(TWEEN.Easing.Exponential.Out).start();\r\n            new TWEEN.Tween({x:0.0001})\r\n                .to({x:0.8}, 350)\r\n                .onUpdate(function(){\r\n                    _this.data.toastEl.setAttribute('opacity',this.x);\r\n                })\r\n                .easing(TWEEN.Easing.Exponential.Out).start();\r\n        });\r\n    }\r\n});","/* global AFRAME,THREE */\r\n/**\r\n * Scroll Pane for aframe-material-collection. Expects\r\n * @namespace aframe-material-collection\r\n * @component ui-scroll-pane\r\n * @author Shane Harris\r\n */\r\n\r\nmodule.exports = AFRAME.registerComponent('ui-scroll-pane', {\r\n    schema: {\r\n        height:{type:'number',default:1.2},\r\n        width:{type:'number',default:2.9},\r\n        scrollPadding:{type:'number',default:0.05},\r\n        scrollZOffset:{type:'number',default:0},\r\n        scrollHandleColor:{default:'#009688'},\r\n        intersectableClass:{default:'intersectable'},\r\n        cameraEl:{type:'selector'},\r\n        lookControlsComponent:{default:'look-controls'},\r\n    },\r\n    init() {\r\n        // Setup scroll bar and panel backing.\r\n        this.setupElements();\r\n        // Grab content container.\r\n        this.container = this.el.querySelector('.container');\r\n        if(typeof this.container === 'undefined'){\r\n            throw 'ui-scroll-pane needs an entity inside it with the class \"container\" - <a-entity class=\"container\"></a-entity>';\r\n        }\r\n        // Setup scroll bar.\r\n        this.scrollBarWidth = this.rail.getAttribute('width');\r\n        this.container.setAttribute('position',(-this.data.width/2)+' '+((this.data.height/2))+' 0');\r\n        this.rail.setAttribute('position',((this.data.width/2)+this.data.scrollPadding)+' 0 '+(this.data.scrollZOffset+0.0002));\r\n        this.handle.setAttribute('position',((this.data.width/2)+this.data.scrollPadding)+' 0 '+(this.data.scrollZOffset+0.0005));\r\n        this.el.sceneEl.renderer.localClippingEnabled = true;\r\n\r\n        // Setup content clips.\r\n        this.content_clips = [\r\n            new THREE.Plane( new THREE.Vector3( 0, 1, 0 ), (this.data.height/2) ),\r\n            new THREE.Plane( new THREE.Vector3( 0, -1, 0 ), (this.data.height/2) ),\r\n            new THREE.Plane( new THREE.Vector3( -1, 0, 0 ), (this.data.width/2) ),\r\n            new THREE.Plane( new THREE.Vector3( 1, 0, 0 ), (this.data.width/2) )\r\n        ];\r\n        // Pause/play camera look controls\r\n        const playPauseCamera = method=>{\r\n            if(this.data.cameraEl&&this.data.cameraEl.components[this.data.lookControlsComponent]){\r\n                this.data.cameraEl.components[this.data.lookControlsComponent][method]();\r\n            }\r\n        };\r\n        // Setup mouse move handler for scrolling and updating scroll handle.\r\n        const mousemove = e=>this.mouseMove(e);\r\n        // Start scroll\r\n        this.handle.addEventListener('mousedown',e=>{\r\n            // Pause look controls to allow scrolling\r\n            playPauseCamera('pause');\r\n            this.isDragging = true;\r\n            // Store the start point offset\r\n            this.handlePos = this.handle.object3D.worldToLocal(e.detail.intersection.point).y;\r\n            this.backgroundPanel.addEventListener('ui-mousemove',mousemove);\r\n            // Start changes\r\n            UI.utils.isChanging(this.el.sceneEl,this.handle.object3D.uuid);\r\n            // Prevent default behaviour of event\r\n            UI.utils.preventDefault(e);\r\n        });\r\n        // End scroll\r\n        const endScroll = e=>{\r\n            if(this.isDragging){\r\n                this.backgroundPanel.removeEventListener('ui-mousemove',mousemove);\r\n                // Play look controls once scrolling is finished\r\n                playPauseCamera('play');\r\n                this.isDragging = false;\r\n                // Stop changes\r\n                UI.utils.stoppedChanging(this.handle.object3D.uuid);\r\n                // Prevent default behaviour of event\r\n                UI.utils.preventDefault(e);\r\n            }\r\n        };\r\n        this.backgroundPanel.addEventListener('mouseup',endScroll);\r\n        this.backgroundPanel.addEventListener('mouseleave',endScroll);\r\n        // // Handle clicks on rail to scroll\r\n        this.rail.addEventListener('mousedown',e=>{\r\n\r\n            UI.utils.isChanging(this.el.sceneEl,this.handle.object3D.uuid);\r\n            // Pause look controls\r\n            this.isDragging = true;\r\n            // Reset handle pos to center of handle\r\n            this.handlePos = 0;\r\n            // Scroll immediately and register mouse move events.\r\n            this.scroll(this.rail.object3D.worldToLocal(e.detail.intersection.point).y);\r\n            this.backgroundPanel.addEventListener('ui-mousemove',mousemove);\r\n            // Prevent default behaviour of event\r\n            UI.utils.preventDefault(e);\r\n        });\r\n\r\n        // Setup content clips after the scene is loaded to be able to access all entity materials\r\n\r\n        // update content clips world positions from this current element.\r\n\r\n        this.updateContent();\r\n        this.el.emit('scroll-pane-loaded');\r\n        this.setupMouseWheelScroll();\r\n\r\n        // Expose methods to the element to update/set the content of the scroll pane.\r\n        this.el.setContent = this.setContent.bind(this);\r\n        this.el.updateContent = this.updateContent.bind(this);\r\n    },\r\n    updateContentClips(){\r\n        this.el.sceneEl.object3D.updateMatrixWorld();\r\n        // update content clips world positions from this current element.\r\n        this.content_clips[0].set(new THREE.Vector3( 0, 1, 0 ), (this.data.height/2));\r\n        this.content_clips[1].set(new THREE.Vector3( 0, -1, 0 ), (this.data.height/2));\r\n        this.content_clips[2].set(new THREE.Vector3( -1, 0, 0 ), (this.data.width/2));\r\n        this.content_clips[3].set(new THREE.Vector3( 1, 0, 0 ), (this.data.width/2));\r\n        //this.el.sceneEl.object3D.updateMatrixWorld();\r\n        this.content_clips[0].applyMatrix4(this.el.object3D.matrixWorld);\r\n        this.content_clips[1].applyMatrix4(this.el.object3D.matrixWorld);\r\n        this.content_clips[2].applyMatrix4(this.el.object3D.matrixWorld);\r\n        this.content_clips[3].applyMatrix4(this.el.object3D.matrixWorld);\r\n\r\n    },\r\n    setContent(body,noAutoReload){\r\n        if(this.container) {\r\n            // Remove all children in the container and all yoga nodes\r\n            while (this.container.firstChild) {\r\n                let child = this.container.firstChild;\r\n                if (this.container.yoga_node&&child.yoga_node) {\r\n                    this.container.yoga_node.removeChild(child.yoga_node);\r\n                }\r\n                this.container.removeChild(child);\r\n            }\r\n            // Set the content in the scroll pane.\r\n            return new Promise(resolve=>{\r\n                let loadedWrapper = document.createElement('a-entity');\r\n                loadedWrapper.setAttribute('visible',false)\r\n                loadedWrapper.insertAdjacentHTML('afterbegin',body);\r\n                loadedWrapper.addEventListener('loaded',e=>{\r\n                    // Trigger an update to redraw scrollbars and fire change events.\r\n                    if(!noAutoReload)this.updateContent();\r\n                    resolve(loadedWrapper);\r\n                    loadedWrapper.setAttribute('visible',true)\r\n                });\r\n                this.container.appendChild(loadedWrapper);\r\n            })\r\n        }\r\n    },\r\n    updateContent(){\r\n        this.updateContentClips();\r\n        this.currentUuid = THREE.Math.generateUUID();\r\n        UI.utils.isChanging(this.el.sceneEl,this.currentUuid);\r\n        this.setChildClips();\r\n        this.container.object3D.position.y = this.data.height/2;\r\n        if(typeof Yoga !== 'undefined')this.initialiseYoga(this.container,this.data.width*100);\r\n        this.container.yoga_node.calculateLayout(this.data.width*100, 'auto', Yoga.DIRECTION_LTR);\r\n        this.content_height = Number.NEGATIVE_INFINITY;\r\n        if(typeof Yoga !== 'undefined')this.updateYoga(this.container);\r\n        this.handleSize = THREE.Math.clamp((this.data.height/this.content_height),0.1,1);\r\n        this.handle.setAttribute('height',this.data.height*this.handleSize);\r\n        this.handle.setAttribute('width',this.handleSize===1?0.00000001:0.1);\r\n        this.rail.setAttribute('width',this.handleSize===1?0.00000001:0.1);\r\n        this.rail.setAttribute('color',this.handleSize===1?'#efefef':'#fff');\r\n        this.handle.setAttribute('position',((this.data.width/2)+this.data.scrollPadding)+' '+(this.data.height-(this.data.height*this.handleSize))/2+' '+(this.data.scrollZOffset+0.0005));\r\n\r\n    },\r\n    mouseMove(e){\r\n        if(this.isDragging){\r\n            let pos = this.rail.object3D.worldToLocal(e.detail.intersection.point);\r\n            this.scroll(pos.y-this.handlePos);\r\n        }\r\n    },\r\n    scroll(positionY){\r\n        let min = (-this.data.height/2)+(this.data.height*this.handleSize)/2;\r\n        let max = (this.data.height/2)-(this.data.height*this.handleSize)/2;\r\n        // Set scroll position with start point offset.\r\n        let scroll_pos = THREE.Math.clamp(positionY,min,max);\r\n        let scroll_perc = 1-((scroll_pos-min)/(max-min));\r\n        this.container.object3D.position.y = ((this.content_height-this.data.height)*scroll_perc)+(this.data.height/2);\r\n        this.handle.setAttribute('position',((this.data.width/2)+this.data.scrollPadding)+' '+scroll_pos+' '+(this.data.scrollZOffset+0.0005));\r\n    },\r\n    setupMouseWheelScroll(){\r\n        this.backgroundPanel.addEventListener('ui-mousewheel',e=>{\r\n            if(this.handleSize!==1){\r\n                // Start changes\r\n                UI.utils.isChanging(this.el.sceneEl,this.el.object3D.uuid);\r\n                this.scroll(this.handle.getAttribute('position').y+(e.detail.evt.deltaY<0?0.1:-0.1));\r\n                // Stop changes\r\n                UI.utils.stoppedChanging(this.el.object3D.uuid);\r\n                UI.utils.preventDefault(e);\r\n            }\r\n        });\r\n    },\r\n    setupElements(){\r\n        // Setup background with mouse input to catch mouse move events when not exactly over the scroll bar.\r\n        this.backgroundPanel = document.createElement('a-plane');\r\n        this.backgroundPanel.setAttribute('class','background '+this.data.intersectableClass);\r\n        this.backgroundPanel.setAttribute('width',this.data.width+1);\r\n        this.backgroundPanel.setAttribute('height',this.data.height+1);\r\n        this.backgroundPanel.setAttribute('position','0 0 -0.013');\r\n        this.backgroundPanel.setAttribute('opacity',0.0001);//\r\n        this.backgroundPanel.setAttribute('transparent',true);\r\n\r\n        this.el.appendChild(this.backgroundPanel);\r\n\r\n        // Add scroll bar rail.\r\n        this.rail = document.createElement('a-plane');\r\n        this.rail.setAttribute('class','rail '+this.data.intersectableClass);\r\n        this.rail.setAttribute('width',0.1);\r\n        this.rail.setAttribute('height',this.data.height);\r\n        this.rail.setAttribute('shader','flat');\r\n        this.el.appendChild(this.rail);\r\n\r\n        // Add scroll bar handle.\r\n        this.handle = document.createElement('a-plane');\r\n        this.handle.setAttribute('class','handle '+this.data.intersectableClass);\r\n        this.handle.setAttribute('width',0.1);\r\n        this.handle.setAttribute('height',this.data.height);\r\n        this.handle.setAttribute('color',this.data.scrollHandleColor);\r\n        this.handle.setAttribute('shader','flat');\r\n        this.el.appendChild(this.handle);\r\n    },\r\n    setupYogaNode(node,width,height,properties){\r\n        // Parse yoga properties and call the yoga methods to setup this layout node.\r\n        if(!properties.hasOwnProperty('setWidth'))node.setWidth(width);\r\n        if(!properties.hasOwnProperty('setHeight'))node.setHeight(height);\r\n        for(let method in properties){\r\n            if(properties.hasOwnProperty(method)&&method.indexOf('Edge')===-1){\r\n                if([\"setMarginLeft\",\"setMarginPercentLeft\",\"setPaddingLeft\",\"setBorderLeft\",\"setPositionLeft\",\"setPositionPercentLeft\"]\r\n                    .indexOf(method)>-1){\r\n                    node[method](Yoga.EDGE_LEFT,properties[method]);\r\n                }else if([\"setMarginRight\",\"setMarginPercentRight\",\"setPaddingRight\",\"setBorderRight\",\"setPositionRight\",\"setPositionPercentRight\"]\r\n                    .indexOf(method)>-1){\r\n                    node[method](Yoga.EDGE_RIGHT,properties[method]);\r\n                }else if([\"setMarginTop\",\"setMarginPercentTop\",\"setPaddingTop\",\"setBorderTop\",\"setPositionTop\",\"setPositionPercentTop\"]\r\n                    .indexOf(method)>-1){\r\n                    node[method](Yoga.EDGE_TOP,properties[method]);\r\n                }else if([\"setMarginBottom\",\"setMarginPercentBottom\",\"setPaddingBottom\",\"setBorderBottom\",\"setPositionBottom\",\"setPositionPercentBottom\"]\r\n                    .indexOf(method)>-1){\r\n                    node[method](Yoga.EDGE_BOTTOM,properties[method]);\r\n                }else if([\"setMargin\",\"setMarginPercent\",\"setPadding\",\"setBorder\",\"setPosition\",\"setPositionPercent\"]\r\n                    .indexOf(method)>-1){\r\n                    node[method](Yoga.EDGE_ALL,properties[method]);\r\n                }else if(method.indexOf('setMarginAuto')>-1){\r\n                    let side = method.replace('setMarginAuto','');\r\n                    switch(side){\r\n                        case \"\":\r\n                            node[method](Yoga.EDGE_ALL);\r\n                            break;\r\n                        case \"Left\":\r\n                            node[method](Yoga.EDGE_LEFT);\r\n                            break;\r\n                        case \"Right\":\r\n                            node[method](Yoga.EDGE_RIGHT);\r\n                            break;\r\n                        case \"Top\":\r\n                            node[method](Yoga.EDGE_TOP);\r\n                            break;\r\n                        case \"Bottom\":\r\n                            node[method](Yoga.EDGE_BOTTOM);\r\n                            break;\r\n                    }\r\n                }else if([\"setWidthAuto\",\"setHeightAuto\"]\r\n                .indexOf(method)>-1) {\r\n                    node[method]();\r\n                }else{\r\n                    node[method](properties[method]);\r\n                }\r\n            }\r\n        }\r\n    },\r\n    initialiseYoga(parent){\r\n        // Traverse the tree and setup Yoga layout nodes with default settings\r\n        // or settings specified in the elements yoga properties component.\r\n        parent = parent||this.container;\r\n        // Automatically detect the entity width / height by the element tagname.\r\n        let width = 0,height = 0;\r\n        switch(parent.tagName){\r\n            case \"A-TEXT\":\r\n            case \"A-TRIANGLE\":\r\n            case \"A-UI-TEXT-INPUT\":\r\n            case \"A-UI-NUMBER-INPUT\":\r\n            case \"A-UI-INT-INPUT\":\r\n            case \"A-UI-INPUT-TEXT\":\r\n            case \"A-UI-PASSWORD-INPUT\":\r\n                width = parent.getAttribute('width');\r\n                height = parent.getAttribute('height');\r\n                break;\r\n            case \"A-UI-BUTTON\":\r\n            case \"A-PLANE\":\r\n            case \"A-ENTITY\":\r\n                width = Number(parent.components.geometry?parent.components.geometry.data.width:parent.getAttribute('width'));\r\n                height = Number(parent.components.geometry?parent.components.geometry.data.height:parent.getAttribute('height'));\r\n                break;\r\n            case \"A-UI-FAB-BUTTON\":\r\n            case \"A-UI-FAB-BUTTON-SMALL\":\r\n            case \"A-CIRCLE\":\r\n                width = Number(parent.components.geometry?parent.components.geometry.data.radius*2:(parent.getAttribute('radius')||0)*2);\r\n                height = width;\r\n                break;\r\n            case \"A-RING\":\r\n                width = Number(parent.components.geometry?parent.components.geometry.data[\"radius-outer\"]*2:(parent.getAttribute('radius-outer')||0)*2);\r\n                height = width;\r\n                break;\r\n            case \"A-UI-SWITCH\":\r\n            case \"A-UI-CHECKBOX\":\r\n            case \"A-UI-RADIO\":\r\n                let componentName = parent.tagName.substr(2).toLowerCase();\r\n                width = parent.components[componentName].width;\r\n                height = parent.components[componentName].height;\r\n                break;\r\n        }\r\n\r\n        if(!parent.yoga_node){\r\n            parent.yoga_node = Yoga.Node.create();\r\n            if(parent.components[\"ui-yoga\"]){\r\n                this.setupYogaNode(parent.yoga_node,width ? width * 100 : 'auto',height ? height * 100 : 'auto',\r\n                    parent.components[\"ui-yoga\"].getProperties());\r\n            }else{\r\n                parent.yoga_node.setWidth(width ? width * 100 : 'auto');\r\n                parent.yoga_node.setHeight(height ? height * 100 : 'auto');\r\n                parent.yoga_node.setJustifyContent(Yoga.JUSTIFY_FLEX_START);\r\n                parent.yoga_node.setFlexDirection(Yoga.FLEX_DIRECTION_ROW);\r\n                parent.yoga_node.setAlignContent(Yoga.ALIGN_AUTO);\r\n                parent.yoga_node.setFlexWrap(Yoga.WRAP_WRAP);\r\n            }\r\n            // Add the yoga node to the Yoga tree.\r\n            if(parent.parentElement&&parent.parentElement.yoga_node){\r\n                // Default margin if none set;\r\n                if(!parent.components[\"ui-yoga\"]){\r\n                    parent.yoga_node.setMargin(Yoga.EDGE_RIGHT, 5);\r\n                    parent.yoga_node.setMargin(Yoga.EDGE_BOTTOM, 5);\r\n                }\r\n                parent.parentElement.yoga_node.insertChild(parent.yoga_node,parent.parentElement.yoga_node.getChildCount());\r\n            }else{\r\n                // Default root padding if none set;\r\n                if(!parent.components[\"ui-yoga\"]){\r\n                    parent.yoga_node.setPadding(Yoga.EDGE_ALL,2);\r\n                }\r\n            }\r\n        }\r\n        [].slice.call(parent.children).forEach(child=>{\r\n            if(child.classList.contains('no-yoga-layout')){\r\n                return;\r\n            }\r\n            this.initialiseYoga(child);\r\n        });\r\n    },\r\n    updateYoga(parent){\r\n        // Update the entity positions from the Yoga layout.\r\n        [].slice.call(parent.children).forEach(child=>{\r\n            if(child.classList.contains('no-yoga-layout')){\r\n                return;\r\n            }\r\n            let position;\r\n            if(child.tagName===\"A-ENTITY\"){\r\n                position = {\r\n                    x:(child.yoga_node.getComputedLeft()/100),\r\n                    y:(child.yoga_node.getComputedTop()/100),\r\n                };\r\n            }else{\r\n                position = {\r\n                    x:(child.yoga_node.getComputedLeft()/100)+(child.yoga_node.getComputedWidth()/200),\r\n                    y:(child.yoga_node.getComputedTop()/100)+(child.yoga_node.getComputedHeight()/200),\r\n                };\r\n            }\r\n            let highest = (child.yoga_node.getComputedTop()/100)+(child.yoga_node.getComputedHeight()/100);\r\n            if(highest>this.content_height){\r\n                this.content_height = highest;\r\n            }\r\n            child.setAttribute('position',position.x+' '+(-position.y)+' '+child.getAttribute('position').z);\r\n            this.updateYoga(child);\r\n        });\r\n    },\r\n    setChildClips(parent){\r\n        // Traverse the entity tree inside the content container and add content clips to each material found.\r\n        parent = parent||this.container;\r\n        [].slice.call(parent.children).forEach(child=>{\r\n            child._content_clips = this.content_clips;\r\n            let traverse = ()=>{\r\n                child.object3D.traverse(object=>{\r\n                    if(object.material){\r\n                        // Add shader chunks to be able to clip shader materials - needed for <a-text> entities.\r\n                        if(object.material.isRawShaderMaterial){\r\n                            object.material.onBeforeCompile = function ( shader ) {\r\n                                let vertexParts = shader.vertexShader.split('\\n');\r\n                                let vertexMainIndex = vertexParts.indexOf('void main(void) {');\r\n                                vertexParts.splice(vertexMainIndex,0,'#include <clipping_planes_pars_vertex>');\r\n                                vertexParts.splice(vertexMainIndex+2,0,'#include <begin_vertex>');\r\n                                vertexParts.splice(vertexParts.length-2,0,'#include <project_vertex>');\r\n                                vertexParts.splice(vertexParts.length-2,0,'#include <clipping_planes_vertex>');\r\n                                shader.vertexShader = vertexParts.join('\\n');\r\n                                let fragmentParts = shader.fragmentShader.split('\\n');\r\n                                let fragmentMainIndex = fragmentParts.indexOf('void main() {');\r\n                                fragmentParts.splice(fragmentMainIndex,0,'#include <clipping_planes_pars_fragment>');\r\n                                fragmentParts.splice(fragmentMainIndex+2,0,'#include <clipping_planes_fragment>');\r\n                                shader.fragmentShader = fragmentParts.join('\\n');\r\n                            };\r\n                            object.material.clipping = true;\r\n                        }\r\n                        // Set the content clipping planes.\r\n                        object.material.clippingPlanes = this.content_clips;\r\n                        object.material.clipShadows = true;\r\n                        object.material.needsUpdate = true;\r\n                    }\r\n                });\r\n            };\r\n            if(child.components.text){\r\n                // Wait for the font to load first.\r\n                child.addEventListener('textfontset',()=>{\r\n                    clearTimeout(this.fontRenderTimeout);\r\n                    this.fontRenderTimeout = setTimeout(()=>UI.utils.stoppedChanging(this.currentUuid),500);\r\n                    traverse();\r\n                })\r\n            }else{\r\n                traverse();\r\n            }\r\n            // Recurse.\r\n            this.setChildClips(child);\r\n        })\r\n    }\r\n});","/* global AFRAME */\r\n/**\r\n * A component shim the mouse move event for the AFRAME cursor raycaster.\r\n * @namespace aframe-material-collection\r\n * @component ui-mouse-shim\r\n * @author Shane Harris\r\n */\r\nmodule.exports = AFRAME.registerComponent('ui-mouse-shim', {\r\n    schema:{\r\n        fps:{type:'number',default:45}\r\n    },\r\n    init(){\r\n        if (!this.el.components.raycaster) {\r\n            throw 'ui-mouse-move component needs the raycaster component to be added.'\r\n        }\r\n        // Add support for mouse wheel\r\n        this.el.sceneEl.renderer.domElement.addEventListener( 'wheel', this.onMouseWheel.bind(this), false);\r\n    },\r\n    onMouseWheel(e){\r\n        this.emitMouseEvent('ui-mousewheel',e);\r\n    },\r\n    tick() {\r\n        if(new Date().getTime()-this.lastMouseMoveTime<(1000/this.data.fps))return;\r\n        this.emitMouseEvent('ui-mousemove');\r\n        this.lastMouseMoveTime = new Date().getTime();\r\n    },\r\n    emitMouseEvent(eventType,event){\r\n        // Get current intersections from raycaster component.\r\n        this.el.components.raycaster.intersections.forEach(intersection=>{\r\n            if(intersection.object.el){\r\n                // Emit custom mouse move event ont he intersected element.\r\n                intersection.object.el.emit(eventType,{cursorEl:this.el,intersection:intersection,evt:event})\r\n            }\r\n        });\r\n    }\r\n});","/* global AFRAME */\r\n/**\r\n * Checkbox A simple component to listen for two click events in quick succession.\r\n * @namespace aframe-material-collection\r\n * @component ui-double-click\r\n * @author Shane Harris\r\n */\r\nmodule.exports = AFRAME.registerComponent('ui-double-click', {\r\n    schema:{\r\n        timeout:{type:'int',default:200}\r\n    },\r\n    init() {\r\n        let last_click = 0;\r\n        // Add click event for listening for two clicks within the specified timespan.\r\n        this.el.addEventListener('mousedown',e=>{\r\n            let now = new Date().getTime();\r\n            if(now-last_click<this.data.timeout){\r\n                this.el.emit('dblclick',e);\r\n                // Reset last click\r\n                last_click = 0;\r\n                e.preventDefault();\r\n            }\r\n            last_click = now;\r\n        });\r\n    }\r\n});","/* global AFRAME,TWEEN */\r\n/**\r\n * Checkbox Component for aframe-material-collection. Includes animation and disabled state.\r\n * @namespace aframe-material-collection\r\n * @component ui-checkbox\r\n * @author Shane Harris\r\n */\r\n\r\nmodule.exports = AFRAME.registerComponent('ui-checkbox', {\r\n    schema: {\r\n        value: {type:'boolean',default: false},\r\n        selectedColor: {default: '#009688'},\r\n        unselectedColor: {default: '#7f7f7f'},\r\n        disabledColor: {default: '#afafaf'},\r\n        indeterminate: {type:'boolean',default: false},\r\n        disabled:{type:'boolean',default: false},\r\n        intersectableClass: {default: 'intersectable'}\r\n    },\r\n    init() {\r\n        this.width = 0.15;\r\n        this.height = 0.15;\r\n        this.container = document.createElement('a-entity');\r\n        this.container.setAttribute('class','no-yoga-layout');\r\n        this.el.appendChild(this.container);\r\n        this.setupLines();\r\n        // Add backing element to make the whole object clickable.\r\n        let backing = document.createElement('a-plane');\r\n        backing.setAttribute('width',0.105);\r\n        backing.setAttribute('height',0.105);\r\n        backing.setAttribute('position','0 0 -0.002');\r\n        backing.setAttribute('shader','flat');\r\n        backing.setAttribute('class',this.data.intersectableClass+' no-yoga-layout');\r\n        backing.setAttribute('opacity',0.0001);\r\n        backing.setAttribute('transparent',true);\r\n        this.el.appendChild(backing);\r\n        this.clickHandler = ()=>{\r\n            this.data.value = !this.data.value;\r\n            this.click();\r\n        };\r\n        // Setup initial state\r\n        this.setSelected();\r\n        this.setDisabled();\r\n        this.setTransform(1);\r\n    },\r\n    updateSchema(){\r\n        if(this.data){\r\n            this.setDisabled();\r\n            if(this.data.disabled){\r\n                if(this.data.value){\r\n                    this.data.value=false;\r\n                    this.data.indeterminate=false;\r\n                    this.click();\r\n                }\r\n            }else{\r\n                this.click();\r\n            }\r\n        }\r\n    },\r\n    setTransform(x){\r\n        // Adjust position and rotation based on the interpolated value x between 0 and 1.\r\n        // Used to offset the checkbox when in a checked state\r\n        if(this.data.value){\r\n            this.container.setAttribute('rotation',{x:0,y:0,z:-45*x});\r\n            this.container.setAttribute('position',{x:-0.025*x,y:0.05*x,z:0});\r\n        }else{\r\n            this.container.setAttribute('rotation',{x:0,y:0,z:-45+(45*x)});\r\n            this.container.setAttribute('position',{x:0.025-(0.025*x),y:0.05-(0.05*x),z:0});\r\n        }\r\n    },\r\n    click(){\r\n        // Reset indeterminate state on click\r\n        this.data.indeterminate = false;\r\n        // Hide / Show left and top lines for checked state, or right line aswell for intermediate state.\r\n        this.setSelected();\r\n        // run animation\r\n        this.animateSelected()\r\n    },\r\n    animateSelected(){\r\n        let _this = this;\r\n        // Start changes\r\n        UI.utils.isChanging(this.el.sceneEl,this.el.object3D.uuid);\r\n        new TWEEN.Tween({x:0})\r\n            .to({ x: 1}, 200)\r\n            .onUpdate(function(){\r\n                _this.setTransform(this.x);\r\n            })\r\n            .onComplete(function(){\r\n                // Stop changes\r\n                UI.utils.stoppedChanging(_this.el.object3D.uuid);\r\n            })\r\n            .easing(TWEEN.Easing.Exponential.Out).start();\r\n    },\r\n    setSelected(){\r\n        // Hide / Show lines that make up checkbox based on the current state.\r\n        if(this.data.value){\r\n            this.topLine.setAttribute('scale','0.000001 0.000001 0.000001');\r\n            this.leftLine.setAttribute('scale','0.000001 0.000001 0.000001');\r\n            this.bottomLine.setAttribute('scale','1 1 1');\r\n            this.rightLine.setAttribute('scale','1 1 1');\r\n            this.bottomLine.setAttribute('position','0.025 -0.05 0');\r\n            this.rightLine.setAttribute('position','0.05 0 0');\r\n            this.bottomLine.setAttribute('rotation','0 0 90');\r\n            this.bottomLine.setAttribute('height',0.05);\r\n            this.bottomLine.setAttribute('color',this.data.selectedColor);\r\n            this.rightLine.setAttribute('color',this.data.selectedColor);\r\n        }else if(this.data.indeterminate){\r\n            this.topLine.setAttribute('scale','0.000001 0.000001 0.000001');\r\n            this.leftLine.setAttribute('scale','0.000001 0.000001 0.000001');\r\n            this.bottomLine.setAttribute('scale','1 1 1');\r\n            this.rightLine.setAttribute('scale','0.000001 0.000001 0.000001');\r\n            this.bottomLine.setAttribute('position','0 0 0');\r\n            this.bottomLine.setAttribute('rotation','0 0 90');\r\n            this.bottomLine.setAttribute('height',0.1);\r\n            this.bottomLine.setAttribute('color',this.data.unselectedColor);\r\n            this.rightLine.setAttribute('color',this.data.unselectedColor);\r\n        }else{\r\n            this.topLine.setAttribute('scale','1 1 1');\r\n            this.leftLine.setAttribute('scale','1 1 1');\r\n            this.bottomLine.setAttribute('scale','1 1 1');\r\n            this.rightLine.setAttribute('scale','1 1 1');\r\n            this.bottomLine.setAttribute('height',0.1);\r\n            this.leftLine.setAttribute('position','-0.05 0 0');\r\n            this.rightLine.setAttribute('position','0.05 0 0');\r\n            this.topLine.setAttribute('position','0 0.05 0');\r\n            this.bottomLine.setAttribute('position','0 -0.05 0');\r\n            this.topLine.setAttribute('rotation','0 0 90');\r\n            this.bottomLine.setAttribute('rotation','0 0 90');\r\n            this.bottomLine.setAttribute('color',this.data.unselectedColor);\r\n            this.rightLine.setAttribute('color',this.data.unselectedColor);\r\n        }\r\n    },\r\n    setupLines(){\r\n        // Add four lines to make a square wireframe\r\n        this.leftLine = this.line(true);\r\n        this.rightLine = this.line(true);\r\n        this.topLine = this.line(true);\r\n        this.bottomLine = this.line(true);\r\n        this.container.appendChild(this.topLine);\r\n        this.container.appendChild(this.leftLine);\r\n        this.container.appendChild(this.bottomLine);\r\n        this.container.appendChild(this.rightLine);\r\n    },\r\n    setDisabled(){\r\n        // Check and set the disabled state of the checkbox - add / remove click handler.\r\n        if(this.data.disabled){\r\n            this.el.removeEventListener('mousedown',this.clickHandler);\r\n            this.topLine.setAttribute('color',this.data.disabledColor);\r\n            this.leftLine.setAttribute('color',this.data.disabledColor);\r\n            this.rightLine.setAttribute('color',this.data.disabledColor);\r\n            this.bottomLine.setAttribute('color',this.data.disabledColor);\r\n        }else{\r\n            this.el.addEventListener('mousedown',this.clickHandler);\r\n            this.topLine.setAttribute('color',this.data.unselectedColor);\r\n            this.leftLine.setAttribute('color',this.data.unselectedColor);\r\n            this.rightLine.setAttribute('color',this.data.value?this.data.selectedColor:this.data.unselectedColor);\r\n            this.bottomLine.setAttribute('color',this.data.value?this.data.selectedColor:this.data.unselectedColor);\r\n        }\r\n    },\r\n    line(is_vertical){\r\n        // Create horizontal/vertical line.\r\n        let line = document.createElement('a-plane');\r\n        line.setAttribute('width',is_vertical?0.01:0.105);\r\n        line.setAttribute('height',is_vertical?0.105:0.01);\r\n        line.setAttribute('class','no-yoga-layout');\r\n        line.setAttribute('shader','flat');\r\n        return line;\r\n    }\r\n});","/* global AFRAME,TWEEN */\r\n/**\r\n * Radio Component for aframe-material-collection. Resets other radio buttons siblings and includes a disabled state.\r\n * @namespace aframe-material-collection\r\n * @component ui-radio\r\n * @author Shane Harris\r\n */\r\n\r\nmodule.exports = AFRAME.registerComponent('ui-radio', {\r\n    schema: {\r\n        value: {default: ''},\r\n        selected:{type: 'boolean', default: false},\r\n        selectedColor: {default: '#009688'},\r\n        selectedRadius: {type:'number',default: 0.045},\r\n        unselectedColor: {default: '#5f5f5f'},\r\n        disabledColor: {default: '#afafaf'},\r\n        disabled: {type: 'boolean', default: false},\r\n        intersectableClass: {default: 'intersectable'},\r\n    },\r\n    init() {\r\n        this.width = this.data.size||0.15;\r\n        this.height = this.data.size||0.15;\r\n        // Create center circle for checked state.\r\n        this.filled_circle = document.createElement('a-circle');\r\n        this.filled_circle.setAttribute('radius',this.data.selectedRadius);\r\n        this.filled_circle.setAttribute('scale','0 0 0');\r\n        this.filled_circle.setAttribute('color',this.data.disabled?this.data.disabledColor:this.data.selectedColor);\r\n        this.filled_circle.setAttribute('shader','flat');\r\n        this.filled_circle.setAttribute('class','no-yoga-layout');\r\n        this.filled_circle.setAttribute('segments',6);\r\n        this.el.components.material.material.color = new THREE.Color(this.data.disabled?this.data.disabledColor:this.data.unselectedColor);\r\n        this.el.appendChild(this.filled_circle);\r\n        // Create backing for getting click events.\r\n        let backing = document.createElement('a-circle');\r\n        backing.setAttribute('radius',this.data.selectedRadius);\r\n        backing.setAttribute('position','0 0 -0.002');\r\n        backing.setAttribute('class',this.data.intersectableClass+' no-yoga-layout');\r\n        backing.setAttribute('shader','flat');\r\n        backing.setAttribute('segments',6);\r\n        backing.setAttribute('opacity',0.0001);\r\n        backing.setAttribute('transparent',true);\r\n        this.el.appendChild(backing);\r\n        // Set this if it is checked.\r\n        if(this.data.selected){\r\n            this.click();\r\n        }\r\n        // TODO: need to add play/pause methods for registering/unregistering events.\r\n        if(!this.data.disabled){\r\n            this.el.addEventListener('mousedown',e=>this.click(e));\r\n        }\r\n    },\r\n    deselect(){\r\n        // Deselect this radio with a scale animation on the circle.\r\n        this.el.setAttribute('selected',false);\r\n        let _this = this;\r\n        // Start changes\r\n        UI.utils.isChanging(this.el.sceneEl,this.filled_circle.object3D.uuid);\r\n        new TWEEN.Tween({x:1})\r\n            .to({ x: 0.000001}, 200)\r\n            .onUpdate(function(){\r\n                _this.filled_circle.object3D.scale.set(this.x,this.x,this.x);\r\n            })\r\n            .onComplete(()=>{\r\n                // Stop changes\r\n                UI.utils.stoppedChanging(_this.filled_circle.object3D.uuid);\r\n                this.isRippling = false;\r\n            })\r\n            .easing(TWEEN.Easing.Exponential.Out).start();\r\n    },\r\n    click(){\r\n        // Get all other radio siblings and reset their state if they are selected.\r\n        [].slice.call(this.el.parentNode.querySelectorAll('a-ring,a-ui-radio')).filter(el=>el!==this.el).forEach(ring=>{\r\n            if(ring.components['ui-radio']&&ring.getAttribute('selected')===\"true\"){\r\n                ring.components['ui-radio'].deselect();\r\n            }\r\n        });\r\n        // Emit the current selected value\r\n        this.el.emit('ui-radio-changed',this.data.value);\r\n        // Set this radio's selected state.\r\n        this.el.setAttribute('selected',true);\r\n        // Throttle animations.\r\n        if(this.isSelecting)return;\r\n        this.isSelecting = true;\r\n        let _this = this;\r\n        // Start changes\r\n        UI.utils.isChanging(this.el.sceneEl,this.filled_circle.object3D.uuid);\r\n        new TWEEN.Tween({x:0.000001})\r\n            .to({ x: 1}, 250)\r\n            .onUpdate(function(){\r\n                _this.filled_circle.object3D.scale.set(this.x,this.x,this.x);\r\n            })\r\n            .onComplete(()=>{\r\n                // Stop changes\r\n                UI.utils.stoppedChanging(this.filled_circle.object3D.uuid);\r\n                this.isSelecting = false;\r\n            })\r\n            .easing(TWEEN.Easing.Exponential.Out).start();\r\n    }\r\n});","/* global AFRAME,THREE */\r\n/**\r\n * Rounded borders Component for aframe-material-collection. Expects an a-plane entity.\r\n * @namespace aframe-material-collection\r\n * @component ui-border\r\n * @author Shane Harris\r\n */\r\nmodule.exports = AFRAME.registerComponent('ui-border', {\r\n    schema: {\r\n        borderRadius: {type: 'number', default: 0.01},\r\n        curveSegments:{type: 'int', default: 5},\r\n        borderWidth:{type: 'number', default: 0.008},\r\n        color:{default:\"#5f5f5f\"},\r\n        numberOfPoints:{type:'int',default:180}\r\n    },\r\n    init() {\r\n        let mesh = this.el.getObject3D('mesh');\r\n        let roundedRectShape = new THREE.Shape();\r\n        this.roundedRect(roundedRectShape,\r\n            mesh.geometry.metadata.parameters.width,\r\n            mesh.geometry.metadata.parameters.height,\r\n            this.data.borderRadius);\r\n        this.roundedRect(roundedRectShape,\r\n            mesh.geometry.metadata.parameters.width-this.data.borderWidth*2,\r\n            mesh.geometry.metadata.parameters.height-this.data.borderWidth*2,\r\n            this.data.borderRadius,true);\r\n\r\n        this.el.setObject3D('mesh',new THREE.Mesh( new THREE.ShapeGeometry(roundedRectShape,this.data.curveSegments), new THREE.MeshBasicMaterial( { color: this.data.color } ) ));\r\n    \r\n    },\r\n    roundedRect( ctx, width, height, radius, isHole) {\r\n        let x = -width/2, y = -height/2;\r\n        // Draw the Rounded rectangle shape centered in the object - from three.js shapes example.\r\n        let shapeCtx;\r\n        if(isHole){\r\n            shapeCtx = ctx;\r\n            ctx = new THREE.Path()\r\n        }\r\n        ctx.moveTo( x, y + radius );\r\n        ctx.lineTo( x, y + height - radius );\r\n        ctx.quadraticCurveTo( x, y + height, x + radius, y + height );\r\n        ctx.lineTo( x + width - radius, y + height );\r\n        ctx.quadraticCurveTo( x + width, y + height, x + width, y + height - radius );\r\n        ctx.lineTo( x + width, y + radius );\r\n        ctx.quadraticCurveTo( x + width, y, x + width - radius, y );\r\n        ctx.lineTo( x + radius, y );\r\n        ctx.quadraticCurveTo( x, y, x, y + radius );\r\n        if(isHole){\r\n            shapeCtx.holes.push(ctx);\r\n        }\r\n    }\r\n});","/* global AFRAME */\r\n/**\r\n * A curved-plane component to curve a plane primitive.\r\n * @namespace aframe-material-collection\r\n * @component ui-curved-plane\r\n * @author Shane Harris\r\n */\r\n\r\nmodule.exports = AFRAME.registerComponent('ui-curved-plane', {\r\n    schema: {\r\n        depth:{type:'number',default:0.03}\r\n    },\r\n    init(){\r\n        let mesh = this.el.getObject3D('mesh');\r\n        let width = this.el.getAttribute('width');\r\n        let height = this.el.getAttribute('height');\r\n        let browser_pane = new THREE.PlaneGeometry(width, height, 5, 1);\r\n        let curve = new THREE.CubicBezierCurve3(\r\n            browser_pane.vertices[0],\r\n            new THREE.Vector3(0.375*width, 0, -this.data.depth*width ),\r\n            new THREE.Vector3(0.625*width, 0, -this.data.depth*width ),\r\n            browser_pane.vertices[(browser_pane.vertices.length/2) - 1]\r\n        );\r\n        let planePoints = curve.getPoints(Math.abs(browser_pane.vertices.length/2)-1);\r\n        for (let edgeI = 1; edgeI < 3; edgeI++) {\r\n            for (let pointI = 0; pointI < planePoints.length; pointI++) {\r\n                browser_pane.vertices[(edgeI === 2 ? planePoints.length + pointI : pointI)].z = planePoints[pointI].z;\r\n            }\r\n        }\r\n        mesh.geometry = browser_pane;\r\n    }\r\n});","/* global AFRAME */\r\n/**\r\n * A component to pick a color - based on https://github.com/mokargas/aframe-colorwheel-component\r\n * @namespace aframe-material-collection\r\n * @component ui-renderer\r\n * @author Shane Harris\r\n */\r\nmodule.exports = AFRAME.registerComponent('ui-color-picker', {\r\n    schema: {\r\n        backingColor:{default:\"#dfdfdf\"},\r\n        backingColorBottom:{default:\"#4db6ac\"},\r\n        targetEl:{type:'selector'}\r\n    },\r\n    init() {\r\n        this.setupColorWheel();\r\n        this.setupBrightnessSlider();\r\n        this.setupColorPreview();\r\n        this.setupBacking();\r\n        this.setupEvents();\r\n        this.el.setAttribute('visible',false);\r\n        this.el.setAttribute('scale','0.00001 0.00001 0.00001');\r\n        // Expose methods to open/close the color picker.\r\n        this.el.open = this.open.bind(this);\r\n        this.el.close = this.close.bind(this);\r\n    },\r\n    open(){\r\n        return new Promise(resolve=>{\r\n            this.selectCallback = resolve;\r\n            this.el.setAttribute('visible',true);\r\n            this.tweenPickerScale(0.00001,0.5);\r\n        });\r\n    },\r\n    close(){\r\n        this.tweenPickerScale(0.5,0.00001)\r\n            .then(()=>this.el.setAttribute('visible',false));\r\n    },\r\n    tweenPickerScale(from,to){\r\n        UI.utils.isChanging(this.el.sceneEl,this.el.object3D.uuid);\r\n        return new Promise(r=>{\r\n            let _this = this;\r\n            new TWEEN.Tween({x:from})\r\n                .to({x:to}, 250)\r\n                .onUpdate(function(){\r\n                    _this.el.setAttribute('scale',this.x+' '+this.x+' '+this.x);\r\n                })\r\n                .onComplete(()=>{\r\n                    UI.utils.stoppedChanging(this.el.object3D.uuid);\r\n                    r();\r\n                })\r\n                .easing(TWEEN.Easing.Exponential.Out).start();\r\n        });\r\n    },\r\n    setupBacking(){\r\n        let circleBacking = document.createElement('a-circle');\r\n        circleBacking.className = 'no-yoga-layout';\r\n        circleBacking.setAttribute('position','0 0 -0.001');\r\n        circleBacking.setAttribute('material',{\r\n            color: this.data.backingColor,\r\n            flatShading: true,\r\n            shader: 'flat',\r\n            fog: false,\r\n            side: 'double'\r\n        });\r\n        circleBacking.setAttribute('radius',0.65);\r\n        circleBacking.setAttribute('theta-length',180);\r\n\r\n        this.el.appendChild(circleBacking);\r\n\r\n        let planeBacking = document.createElement('a-plane');\r\n        planeBacking.setAttribute('position','0 -0.375 -0.001');\r\n        planeBacking.className = 'no-yoga-layout';\r\n        planeBacking.setAttribute('material',{\r\n            color: this.data.backingColor,\r\n            flatShading: true,\r\n            shader: 'flat',\r\n            fog: false,\r\n            side: 'double'\r\n        });\r\n        planeBacking.setAttribute('width',1.3);\r\n        planeBacking.setAttribute('height',0.75);\r\n\r\n        this.el.appendChild(planeBacking);\r\n\r\n\r\n        let planeBackingBottom = document.createElement('a-plane');\r\n        planeBackingBottom.setAttribute('position','0 -1.05 -0.001');\r\n        planeBackingBottom.className = 'no-yoga-layout';\r\n        planeBackingBottom.setAttribute('material',{\r\n            color: this.data.backingColorBottom,\r\n            flatShading: true,\r\n            shader: 'flat',\r\n            fog: false,\r\n            side: 'double'\r\n        });\r\n        planeBackingBottom.setAttribute('width',1.3);\r\n        planeBackingBottom.setAttribute('height',0.6);\r\n        this.el.appendChild(planeBackingBottom);\r\n\r\n        let buttonConfirm = document.createElement('a-ui-button');\r\n        buttonConfirm.setAttribute('position','0.315 -1.17 0.001');\r\n        buttonConfirm.className = 'intersectable no-yoga-layout';\r\n        buttonConfirm.setAttribute('text-value','SAVE');\r\n        buttonConfirm.setAttribute('color','#ffffff');\r\n        buttonConfirm.setAttribute('wrap-count','9');\r\n        buttonConfirm.setAttribute('ripple-color','#009688');\r\n        buttonConfirm.setAttribute('font-color','#009688');\r\n        buttonConfirm.setAttribute('ripple-size','0.5 0.18');\r\n        buttonConfirm.setAttribute('width',0.5);\r\n        buttonConfirm.setAttribute('height',0.18);\r\n        if(this.data.targetEl)\r\n            this.data.targetEl.addEventListener('mousedown',()=> {\r\n                this.el.open();\r\n            });\r\n        this.el.appendChild(buttonConfirm);\r\n        buttonConfirm.addEventListener('mousedown',e=> {\r\n            let hex = this.getHex();\r\n            this.el.emit('color-selected',hex);\r\n            this.el.close();\r\n            UI.utils.preventDefault(e);\r\n            if(this.data.targetEl){\r\n                this.data.targetEl.setAttribute('color',hex);\r\n            }\r\n            if(this.selectCallback&& typeof this.selectCallback === \"function\"){\r\n                this.selectCallback(hex);\r\n            }\r\n        });\r\n\r\n        let buttonCancel = document.createElement('a-ui-button');\r\n        buttonCancel.setAttribute('position','-0.315 -1.17 0.001');\r\n        buttonCancel.className = 'intersectable no-yoga-layout';\r\n        buttonCancel.setAttribute('text-value','CANCEL');\r\n        buttonCancel.setAttribute('color','#ffffff');\r\n        buttonCancel.setAttribute('wrap-count','9');\r\n        buttonCancel.setAttribute('ripple-color','#ff9800');\r\n        buttonCancel.setAttribute('font-color','#ff9800');\r\n        buttonCancel.setAttribute('ripple-size','0.5 0.18');\r\n        buttonCancel.setAttribute('width',0.5);\r\n        buttonCancel.setAttribute('height',0.18);\r\n\r\n        this.el.appendChild(buttonCancel);\r\n        buttonCancel.addEventListener('mousedown',e=> {\r\n            this.el.emit('color-cancelled');\r\n            this.el.close();\r\n            UI.utils.preventDefault(e);\r\n        });\r\n        this.hexValue = document.createElement('a-text');\r\n        this.hexValue.setAttribute('value','#ffffff');\r\n        this.hexValue.setAttribute('align','center');\r\n        this.hexValue.setAttribute('position','0 -0.9 0.001');\r\n        this.hexValue.setAttribute('wrap-count',15);\r\n        this.hexValue.setAttribute('width',1.3);\r\n\r\n        this.el.appendChild(this.hexValue);\r\n    },\r\n    setupColorPreview(){\r\n        this.colorPreview = document.createElement('a-circle');\r\n        this.colorPreview.setAttribute('position','-0.45 -0.9 0');\r\n        this.colorPreview.setAttribute('material',{\r\n            color: '#ffffff',\r\n            flatShading: true,\r\n            transparent: true,\r\n            shader: 'flat',\r\n            fog: false,\r\n            side: 'double'\r\n        });\r\n        this.colorPreview.setAttribute('radius',0.05);\r\n        this.el.appendChild(this.colorPreview);\r\n    },\r\n    setupColorWheel(){\r\n        this.hsv = {\r\n            h: 0.0,\r\n            s: 0.0,\r\n            v: 1.0\r\n        };\r\n        this.colorWheel = document.createElement('a-circle');\r\n        this.colorWheel.setAttribute('material',{\r\n            color: '#ffffff',\r\n            flatShading: true,\r\n            transparent: true,\r\n            shader: 'flat',\r\n            fog: false,\r\n            side: 'double'\r\n        });\r\n        this.colorWheel.setAttribute('radius',0.5);\r\n        this.el.appendChild(this.colorWheel);\r\n        this.colorWheel.className = 'intersectable no-yoga-layout';\r\n        this.colorWheel.addEventListener('loaded',()=>{\r\n            let colorWheel = this.colorWheel.getObject3D('mesh');\r\n            let vertexShader = '\\n\\n      varying vec2 vUv;\\n      void main() {\\n        vUv = uv;\\n        vec4 mvPosition = modelViewMatrix * vec4(position, 1.0);\\n        gl_Position = projectionMatrix * mvPosition;\\n      }\\n    ';\r\n\r\n            let fragmentShader = '\\n      #define M_PI2 6.28318530718\\n      uniform float brightness;\\n      varying vec2 vUv;\\n      vec3 hsb2rgb(in vec3 c){\\n          vec3 rgb = clamp(abs(mod(c.x * 6.0 + vec3(0.0, 4.0, 2.0), 6.0) - 3.0) - 1.0, 0.0, 1.0 );\\n          rgb = rgb * rgb * (3.0 - 2.0 * rgb);\\n          return c.z * mix( vec3(1.0), rgb, c.y);\\n      }\\n\\n      void main() {\\n        vec2 toCenter = vec2(0.5) - vUv;\\n        float angle = atan(toCenter.y, toCenter.x);\\n        float radius = length(toCenter) * 2.0;\\n        vec3 color = hsb2rgb(vec3((angle / M_PI2) + 0.5, radius, brightness));\\n        gl_FragColor = vec4(color, 1.0);\\n      }\\n      ';\r\n\r\n            colorWheel.material = new THREE.ShaderMaterial({\r\n                uniforms: {\r\n                    brightness: {\r\n                        type: 'f',\r\n                        value: this.hsv.v\r\n                    }\r\n                },\r\n                vertexShader: vertexShader,\r\n                fragmentShader: fragmentShader\r\n            });\r\n            colorWheel.material.needsUpdate = true;\r\n        })\r\n    },\r\n    setupBrightnessSlider(){\r\n        this.brightnessSlider = document.createElement('a-plane');\r\n        this.brightnessSlider.setAttribute('height',0.1);\r\n        this.brightnessSlider.setAttribute('width',0.8);\r\n        this.brightnessSlider.setAttribute('position','0 -0.6 0');\r\n        this.brightnessSlider.className = 'intersectable no-yoga-layout';\r\n        this.el.appendChild(this.brightnessSlider);\r\n        this.brightnessSlider.addEventListener('loaded',()=>{\r\n\r\n            let vertexShader = '\\n      varying vec2 vUv;\\n      void main(){\\n        vUv = uv;\\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position,1.0);\\n      }\\n    ';\r\n\r\n            let fragmentShader = '\\n      uniform vec3 color1;\\n      uniform vec3 color2;\\n      varying vec2 vUv;\\n\\n      void main(){\\n        vec4 c1 = vec4(color1, 1.0);\\n  \\t    vec4 c2 = vec4(color2, 1.0);\\n\\n        vec4 color = mix(c2, c1, smoothstep(0.0, 1.0, vUv.x));\\n        gl_FragColor = color;\\n      }\\n    ';\r\n\r\n\r\n            this.brightnessSlider.getObject3D('mesh').material = new THREE.ShaderMaterial({\r\n                uniforms: {\r\n                    color1: {\r\n                        type: 'c',\r\n                        value: new THREE.Color(0xFFFFFF)\r\n                    },\r\n                    color2: {\r\n                        type: 'c',\r\n                        value: new THREE.Color(0x000000)\r\n                    }\r\n                },\r\n                vertexShader: vertexShader,\r\n                fragmentShader: fragmentShader\r\n            });\r\n            this.brightnessSlider.getObject3D('mesh').material.needsUpdate = true;\r\n        });\r\n        let brightnessResetLeft = document.createElement('a-triangle');\r\n        brightnessResetLeft.setAttribute('vertex-a','0 0.05 0');\r\n        brightnessResetLeft.setAttribute('vertex-b','-0.05 -0.05 0');\r\n        brightnessResetLeft.setAttribute('vertex-c','0.05 -0.05 0');\r\n        brightnessResetLeft.setAttribute('position','-0.475 -0.6 0');\r\n        brightnessResetLeft.setAttribute('rotation','0 0 90');\r\n        brightnessResetLeft.setAttribute('shader','flat');\r\n        brightnessResetLeft.setAttribute('color','#009688');\r\n        brightnessResetLeft.setAttribute('ui-btn','');\r\n        brightnessResetLeft.className = 'intersectable';\r\n        this.el.appendChild(brightnessResetLeft);\r\n\r\n\r\n        let brightnessResetRight = document.createElement('a-triangle');\r\n        brightnessResetRight.setAttribute('vertex-a','0 0.05 0');\r\n        brightnessResetRight.setAttribute('vertex-b','-0.05 -0.05 0');\r\n        brightnessResetRight.setAttribute('vertex-c','0.05 -0.05 0');\r\n        brightnessResetRight.setAttribute('position','0.475 -0.6 0');\r\n        brightnessResetRight.setAttribute('rotation','0 0 -90');\r\n        brightnessResetRight.setAttribute('color','#009688');\r\n        brightnessResetRight.setAttribute('shader','flat');\r\n        brightnessResetRight.setAttribute('ui-btn','');\r\n        brightnessResetRight.className = 'intersectable';\r\n        this.el.appendChild(brightnessResetRight);\r\n\r\n        brightnessResetLeft.addEventListener('mousedown',()=>{\r\n\r\n            UI.utils.isChanging(this.el.sceneEl,this.el.object3D.uuid);\r\n            this.colorWheel.getObject3D('mesh').material.uniforms['brightness'].value = 0;\r\n            this.hsv.v = 0;\r\n            this.hsv.h = 0;\r\n            this.hsv.s = 0;\r\n            this.updateColor();\r\n            UI.utils.stoppedChanging(this.el.object3D.uuid);\r\n        });\r\n        brightnessResetRight.addEventListener('mousedown',()=>{\r\n\r\n            UI.utils.isChanging(this.el.sceneEl,this.el.object3D.uuid);\r\n            this.colorWheel.getObject3D('mesh').material.uniforms['brightness'].value = 1;\r\n            this.hsv.v = 1;\r\n            this.hsv.h = 0;\r\n            this.hsv.s = 0;\r\n            this.updateColor();\r\n            UI.utils.stoppedChanging(this.el.object3D.uuid);\r\n        });\r\n    },\r\n    getHex(){\r\n        let rgb = this.hsvToRgb(this.hsv),\r\n            color = 'rgb(' + rgb.r + ', ' + rgb.g + ', ' + rgb.b + ')';\r\n        return '#' + new THREE.Color(color).getHexString()\r\n    },\r\n    updateColor(){\r\n        let hex = this.getHex();\r\n        this.colorPreview.setAttribute('color',hex);\r\n        this.hexValue.setAttribute('value',hex);\r\n    },\r\n    setupEvents(){\r\n        this.colorWheel.addEventListener('mousedown',e=>{\r\n            this.isMouseDown = true;\r\n            UI.utils.preventDefault(e);\r\n        });\r\n        this.colorWheel.addEventListener('mouseup',e=>{\r\n            this.isMouseDown = false;\r\n            UI.utils.preventDefault(e);\r\n        });\r\n        this.colorWheel.addEventListener('ui-mousemove',e=>{\r\n            if(!this.isMouseDown)return;\r\n            UI.utils.preventDefault(e);\r\n\r\n            UI.utils.isChanging(this.el.sceneEl,this.el.object3D.uuid);\r\n            let colorWheel = this.colorWheel.getObject3D('mesh'),\r\n                radius = 0.5,\r\n                position = e.detail.intersection.point;\r\n\r\n            colorWheel.updateMatrixWorld();\r\n            colorWheel.worldToLocal(position);\r\n\r\n            //Determine Hue and Saturation value from polar co-ordinates\r\n            let polarPosition = {\r\n                r: Math.sqrt(position.x * position.x + position.y * position.y),\r\n                theta: Math.PI + Math.atan2(position.y, position.x)\r\n            };\r\n\r\n            let angle = (polarPosition.theta * (180 / Math.PI) + 180) % 360;\r\n            this.hsv.h = angle / 360;\r\n            this.hsv.s = polarPosition.r / radius;\r\n            this.updateColor();\r\n            UI.utils.stoppedChanging(this.el.object3D.uuid);\r\n        });\r\n        this.brightnessSlider.addEventListener('mousedown',e=>{\r\n            this.isMouseDown = true;\r\n            UI.utils.preventDefault(e);\r\n        });\r\n        this.brightnessSlider.addEventListener('mouseup',e=>{\r\n            this.isMouseDown = false;\r\n            UI.utils.preventDefault(e);\r\n        });\r\n        this.brightnessSlider.addEventListener('ui-mousemove',e=>{\r\n\r\n            UI.utils.preventDefault(e);\r\n            UI.utils.isChanging(this.el.sceneEl,this.el.object3D.uuid);\r\n            if(!this.isMouseDown)return;\r\n            let brightnessSlider = this.brightnessSlider.getObject3D('mesh'),\r\n                colorWheel = this.colorWheel.getObject3D('mesh'),\r\n                position = e.detail.intersection.point;\r\n\r\n            brightnessSlider.updateMatrixWorld();\r\n            brightnessSlider.worldToLocal(position);\r\n\r\n            //Brightness is a value between 0 and 1. The parent plane is centre registered, hence offset\r\n            let cursorOffset = position.x + 0.4;//this.brightnessSliderHeight / 2;\r\n            let brightness = cursorOffset / 0.8;//this.brightnessSliderHeight;\r\n\r\n            //Update material brightness\r\n            colorWheel.material.uniforms['brightness'].value = brightness;\r\n            this.hsv.v = brightness;\r\n            this.updateColor();\r\n            UI.utils.stoppedChanging(this.el.object3D.uuid);\r\n        });\r\n    },\r\n    hsvToRgb(hsv) {\r\n        let r, g, b, i, f, p, q, t;\r\n        let h = THREE.Math.clamp(hsv.h, 0, 1);\r\n        let s = THREE.Math.clamp(hsv.s, 0, 1);\r\n        let v = hsv.v;\r\n\r\n        i = Math.floor(h * 6);\r\n        f = h * 6 - i;\r\n        p = v * (1 - s);\r\n        q = v * (1 - f * s);\r\n        t = v * (1 - (1 - f) * s);\r\n        switch (i % 6) {\r\n            case 0:\r\n                r = v;\r\n                g = t;\r\n                b = p;\r\n                break;\r\n            case 1:\r\n                r = q;\r\n                g = v;\r\n                b = p;\r\n                break;\r\n            case 2:\r\n                r = p;\r\n                g = v;\r\n                b = t;\r\n                break;\r\n            case 3:\r\n                r = p;\r\n                g = q;\r\n                b = v;\r\n                break;\r\n            case 4:\r\n                r = t;\r\n                g = p;\r\n                b = v;\r\n                break;\r\n            case 5:\r\n                r = v;\r\n                g = p;\r\n                b = q;\r\n                break;\r\n        }\r\n        return {\r\n            r: Math.round(r * 255),\r\n            g: Math.round(g * 255),\r\n            b: Math.round(b * 255)\r\n        };\r\n    }\r\n});\r\n\r\n","/* global AFRAME,THREE */\r\n/**\r\n * Modal Component for aframe-material-collection.\r\n * @namespace aframe-material-collection\r\n * @component ui-modal\r\n * @author Shane Harris\r\n */\r\nmodule.exports = AFRAME.registerComponent('ui-modal', {\r\n    schema: {\r\n        modal:{type:'selector'},\r\n        main:{type:'selector'}\r\n    },\r\n    init(){\r\n        if(this.data.modal&&this.data.main){\r\n            // Get the modal panel to be able to animate its scale on open/close.\r\n            this.modalPanel = document.querySelector(this.data.modal.getAttribute('ui-panel'));\r\n\r\n            this.mainComponents = this.data.main.components;\r\n            this.modalComponents = this.data.modal.components;\r\n            // Pause rendering of modal until opened.\r\n            if(this.modalComponents&&this.modalComponents['ui-renderer']){\r\n                this.modalComponents['ui-renderer'].pause();\r\n            }\r\n            // Setup close listeners for anything with the class close-modal.\r\n            let close_buttons = this.data.modal.querySelectorAll('.close-modal');\r\n            for(let i = 0; i < close_buttons.length; i++ ){\r\n                let close_button = close_buttons[i];\r\n                close_button.addEventListener('mousedown',()=>{\r\n                    this.close();\r\n                });\r\n            }\r\n            // Add click handler for opening the modal, pause the main render screen and play the modal renderer\r\n            this.el.addEventListener('mousedown',()=>{\r\n                this.open();\r\n            });\r\n            this.data.main.modal = this;\r\n\r\n            // Expose methods to open/close the modal.\r\n            this.el.open = this.open.bind(this);\r\n            this.el.close = this.close.bind(this);\r\n        }\r\n    },\r\n    open(){\r\n        if(this.mainComponents&&this.mainComponents['ui-renderer']){\r\n            this.mainComponents['ui-renderer'].pauseRender();\r\n            this.tweenModalScale(0.0000001,1);\r\n            this.modalComponents['ui-renderer'].play();\r\n        }\r\n    },\r\n    close(){\r\n        // Pause the modal rendering and play the main rendering again.\r\n        this.modalComponents['ui-renderer'].pause();\r\n        this.mainComponents['ui-renderer'].play();\r\n        this.mainComponents['ui-renderer'].playRender();\r\n        this.tweenModalScale(1,0.0000001)\r\n            .then(()=>{\r\n                this.el.sceneEl.emit('modal-closed');\r\n            });\r\n    },\r\n    tweenModalScale(from,to){\r\n        return new Promise(r=>{\r\n            let _this = this;\r\n            new TWEEN.Tween({x:from})\r\n                .to({x:to}, 250)\r\n                .onUpdate(function(){\r\n                    if(_this.modalPanel)\r\n                        _this.modalPanel.setAttribute('scale',this.x+' '+this.x+' '+this.x);\r\n                })\r\n                .onComplete(r)\r\n                .easing(TWEEN.Easing.Exponential.Out).start();\r\n        });\r\n    }\r\n});","/* global AFRAME */\r\n/**\r\n * A component to render the UI to a flat plane, removing the objects from the scene and rendering them separately to a\r\n * render target.\r\n * @namespace aframe-material-collection\r\n * @component ui-renderer\r\n * @author Shane Harris\r\n */\r\nmodule.exports = AFRAME.registerComponent('ui-renderer', {\r\n    schema: {\r\n        uiPanel: {type: 'selector'},\r\n        lookControlsEl: {type: 'selector'},\r\n        lookControlsComponent:{default:'look-controls'},\r\n        panelPosition:{type:'vec3',default:{x:0,y:1.6,z:-1}},\r\n        panelSize:{type:'vec2',default:{x:6,y:3}},\r\n        renderResolution:{type:'vec2',default:{x:2048,y:1024}},\r\n        debugRaycaster:{type:'boolean',default: false},\r\n        fps:{type:'number',default:60},\r\n        intersectableClass:{default:'intersectable'}\r\n    },\r\n    init() {\r\n        this.setupBackDrop();\r\n        if(!this.data.uiPanel){\r\n            this.meshEl = this.setupUIPanel();\r\n        }else{\r\n            this.meshEl = this.data.uiPanel;\r\n        }\r\n        // Remove this object from the scene to be rendered separately.\r\n        this.el.object3D.parent.remove(this.el.object3D);\r\n        // Setup fixed camera nd render target.\r\n        this.camera = new THREE.PerspectiveCamera( 100, 2, 0.1, 1000 );\r\n        // Setup render target\r\n        this.renderTarget = new THREE.WebGLRenderTarget(this.data.renderResolution.x,this.data.renderResolution.y, { antialias: true } );\r\n        // Set the texture to the ui panel mesh.\r\n        this.meshEl.getObject3D('mesh').material.map = this.renderTarget.texture;\r\n        // Listen for change events to enable rendering.\r\n        this.stoppedRendering = false;\r\n        this.isRendering = true;\r\n        // Listen for change events to enable/disable rendering\r\n        this.el.sceneEl.addEventListener('ui-changing',()=>{\r\n            //console.log(JSON.stringify(new Date()),'ui-changing');\r\n            this.stoppedRendering = false;\r\n            this.isRendering = true;\r\n        });\r\n        this.el.sceneEl.addEventListener('ui-changing-stopped',()=>{\r\n            //console.log(JSON.stringify(new Date()),'ui-changing-stopped');\r\n            this.isRendering = false;\r\n        });\r\n        // Setup raycaster for relaying mouse/keyboard events\r\n        this.raycaster = new THREE.Raycaster();\r\n        this.helper = new THREE.Mesh(new THREE.SphereGeometry(0.01),new THREE.MeshBasicMaterial({color:'#ff0000'}));\r\n        // Add cursor helper to object\r\n        if(this.data.debugRaycaster)this.el.object3D.add(this.helper);\r\n        // Set last render time\r\n        this.lastRenderTime = 0;\r\n        this.isFrozen = false;\r\n\r\n        // Expose methods to the element to pause/play the renderer.\r\n        this.el.pauseRender = this.pauseRender.bind(this);\r\n        this.el.playRender = this.playRender.bind(this);\r\n    },\r\n    pauseRender(time){\r\n        return this.playRender(time,true)\r\n    },\r\n    playRender(time,isPaused){\r\n        let _this = this;\r\n        return new Promise(resolve=>{\r\n            if(_this.isFrozen===isPaused||_this.isAnimatingBackground)return resolve();\r\n            _this.isAnimatingBackground = true;\r\n            if(!_this.isFrozen)this.backdrop.setAttribute('scale','1 1 1');\r\n            let fromScale = _this.isFrozen?0.9:0.000001;\r\n            let toScale = _this.isFrozen?0.000001:0.9;\r\n            let duration = _this.isFrozen?time||350:time||500;\r\n            if(_this.isFrozen){\r\n                _this.isFrozen = isPaused;\r\n                _this.play();\r\n            }\r\n            UI.utils.isChanging(_this.el.sceneEl,_this.backdrop.uuid);\r\n            new TWEEN.Tween({x:fromScale})\r\n                .to({x:toScale}, duration)\r\n                .onUpdate(function(){\r\n                    _this.backdrop.setAttribute('opacity',this.x);\r\n                })\r\n                .onComplete(()=>{\r\n                    _this.isFrozen = isPaused;\r\n                    _this.isAnimatingBackground = false;\r\n                    if(_this.isFrozen){\r\n                        _this.pause();\r\n                    }else{\r\n                        this.backdrop.setAttribute('scale','0.000001 0.000001 0.000001');\r\n                    }\r\n                    // Stop changes\r\n                    UI.utils.stoppedChanging(this.backdrop.uuid);\r\n                    resolve();\r\n                })\r\n                .easing(TWEEN.Easing.Exponential.Out).start();\r\n        });\r\n    },\r\n    setupBackDrop(){\r\n        this.backdrop = document.createElement('a-plane');\r\n        this.backdrop.setAttribute('transparent',true);\r\n        this.backdrop.setAttribute('opacity',0.000001);\r\n        this.backdrop.setAttribute('color','#000');\r\n        this.backdrop.setAttribute('shader','flat');\r\n        this.backdrop.setAttribute('position',{x:0,y:0,z:-0.2});\r\n        this.backdrop.setAttribute('width',1);\r\n        this.backdrop.setAttribute('height',1);\r\n        this.backdrop.setAttribute('scale','0.000001 0.000001 0.000001');\r\n        this.el.appendChild(this.backdrop);\r\n    },\r\n    play(){\r\n        this.lastMouseMoveTime = 0;\r\n        // Register event listeners\r\n        // Mousedown and mouseup do not have the correct intersection point. Use last mouse move event if available instead.\r\n        // TODO: raise issue with aframe / submit PR;\r\n        this.click = e=>this.mouseEvent('click',this.lastMoveEvent||e);\r\n        this.mousedown = e=>this.mouseEvent('mousedown',this.lastMoveEvent||e);\r\n        this.mouseup = e=>this.mouseEvent('mouseup',this.lastMoveEvent||e);\r\n        this.mousewheel = e=>this.mouseEvent('ui-mousewheel',e.detail.evt);\r\n        this.mousemove = e=>{\r\n            // Save mousemove event for mousedown/mouseup events.\r\n            this.lastMoveEvent = e;\r\n            this.mouseEvent('ui-mousemove',e);\r\n        };\r\n        this.meshEl.addEventListener('mousedown',this.mousedown);\r\n        this.meshEl.addEventListener('mouseup',this.mouseup);\r\n        this.meshEl.addEventListener('click',this.click);\r\n        this.meshEl.addEventListener('ui-mousemove',this.mousemove);\r\n        this.meshEl.addEventListener('ui-mousewheel',this.mousewheel);\r\n    },\r\n    pause(){\r\n        this.meshEl.removeEventListener('mousedown',this.mousedown);\r\n        this.meshEl.removeEventListener('mouseup',this.mouseup);\r\n        this.meshEl.removeEventListener('click',this.click);\r\n        this.meshEl.removeEventListener('ui-mousemove',this.mousemove);\r\n        this.meshEl.removeEventListener('ui-mousewheel',this.mousewheel);\r\n    },\r\n    setupUIPanel(){\r\n        let uiPanel = document.createElement('a-plane');\r\n        uiPanel.setAttribute('position',this.data.panelPosition);\r\n        uiPanel.setAttribute('width',this.data.panelSize.x);\r\n        uiPanel.setAttribute('height',this.data.panelSize.y);\r\n        this.el.sceneEl.appendChild(uiPanel);\r\n        return uiPanel;\r\n    },\r\n    mouseEvent(type,e){\r\n        let mouse = {x:0,y:0};\r\n        if(e.detail.intersection){\r\n            let localPoint = this.meshEl.object3D.worldToLocal(e.detail.intersection.point.clone());\r\n\r\n            mouse = {\r\n                x:localPoint.x/this.meshEl.getAttribute('width')*2,\r\n                y:localPoint.y/this.meshEl.getAttribute('height')*2\r\n            };\r\n        }\r\n        if(type==='ui-mousewheel'&&e.detail.evt){\r\n            mouse.deltaY = e.detail.deltaY;\r\n            mouse.deltaX = e.detail.deltaX;\r\n        }\r\n        if(type==='mousedown'&&this.lookControlsEl&&this.lookControlsEl.components['look-controls']){\r\n            this.lookControlsEl.components[this.data.lookControlsComponent].pause()\r\n        }\r\n        if(type==='mouseup'&&this.lookControlsEl&&this.lookControlsEl.components['look-controls']){\r\n            this.lookControlsEl.components[this.data.lookControlsComponent].play()\r\n        }\r\n        this.raycastIntersections(e,mouse,type);\r\n    },\r\n    raycastIntersections(e,mouse,type){\r\n        if(!this.camera)return;\r\n        //console.log(mouse);\r\n        this.raycaster.setFromCamera( mouse, this.camera );\r\n        // this.helper.setDirection(this.raycaster.ray.direction);\r\n        let intersections = this.raycaster.intersectObjects( this.el.object3D.children, true );\r\n        this.prevIntersectionEls = this.prevIntersectionEls||[];\r\n        let intersectionEls = [];\r\n        if(intersections.length&&this.data.debugRaycaster){\r\n            let intersectionPoint = intersections[0].point;\r\n            if(intersections[0].object===this.helper&&intersections.length>1){\r\n                intersectionPoint = intersections[1].point;\r\n            }\r\n            this.helper.position.copy(intersectionPoint);\r\n            this.helper.position.x-=0.03;\r\n        }\r\n        let defaultPrevented = false;\r\n        for(let i = 0;i < intersections.length; i++){\r\n            let intersection = intersections[i];\r\n            // Only emit events on objecst with an element attached\r\n            if(intersection.object.el&&intersection.object.el.classList.contains(this.data.intersectableClass)){\r\n                let currentEvent = {intersection:intersection,evt:e,preventDefault:()=>{defaultPrevented=true}};\r\n                // If this is the first time weve seen this element then emit the mouseenter event.\r\n                if(this.prevIntersectionEls.indexOf(intersection.object.el)===-1&&!defaultPrevented){\r\n                    intersection.object.el.emit('mouseenter',currentEvent);\r\n                }\r\n                // Emit the mouse event received\r\n                if(!defaultPrevented||type==='ui-mousewheel'){\r\n                    intersection.object.el.emit(type,currentEvent);\r\n                }\r\n                // Store the intersection on the element.\r\n                intersection.object.el.intersection = intersection;\r\n                // Add the current el to the list to check against previous intersection els.\r\n                intersectionEls.push(intersection.object.el);\r\n            }\r\n        }\r\n        // Find any intersections that have disappeared to emit the mouse leave event.\r\n        for(let i = 0;i < this.prevIntersectionEls.length; i++){\r\n            let intersectionEl = this.prevIntersectionEls[i];\r\n            if(intersectionEls.indexOf(intersectionEl)===-1){\r\n                intersectionEl.emit('mouseleave',{intersection:intersectionEl.intersection});\r\n            }\r\n        }\r\n        // Store the current intersected elements for the next iteration.\r\n        this.prevIntersectionEls = intersectionEls;\r\n    },\r\n    tick(delta){\r\n        if(this.isFrozen||this.stoppedRendering)return;\r\n        if(delta-this.lastRenderTime<(1000/this.data.fps)&&this.isRendering)return;\r\n        this.el.object3D.traverse(child=>{\r\n            child.updateMatrixWorld();\r\n        });\r\n\r\n        let renderer = this.el.sceneEl.renderer;\r\n        let vrModeEnabled = renderer.vr.enabled;\r\n        renderer.vr.enabled = false;\r\n        renderer.render(this.el.object3D,this.camera,this.renderTarget);\r\n        renderer.vr.enabled = vrModeEnabled;\r\n        //console.log('render');\r\n        this.lastRenderTime = delta;\r\n        if(!this.isRendering){\r\n            this.stoppedRendering = true;\r\n        }\r\n    }\r\n});","/* global AFRAME,Yoga */\r\n/**\r\n * Yogo Layout Engine mapped to a Component for aframe-material-collection - https://yogalayout.com\r\n * @namespace aframe-material-collection\r\n * @component ui-yoga\r\n * @author Shane Harris\r\n */\r\n\r\nif (typeof Yoga === 'undefined') {\r\n    throw 'ui-yoga component requires the Yoga Layout Engine to be loaded - https://yogalayout.com';\r\n}\r\n// Map yoga enums to frendly names.\r\n// TODO: Need to expose the padding/border/margin side as seperate options to allow for combinations.\r\nmodule.exports = AFRAME.registerComponent('ui-yoga', {\r\n    schema: {\r\n        alignContent: {default: 'flex-start'},\r\n        alignItems: {default: 'auto'},\r\n        alignSelf: {default: 'auto'},\r\n        display: {default: 'default'},\r\n        flex: {type:'number',default: 1},\r\n        flexDirection: {default: 'row'},\r\n        flexWrap:{default: 'default'},\r\n        aspectRatio: {default: 'default'},\r\n        overflow:{default:'default'},\r\n        justifyContent:{default:'start'},\r\n        border: {type:'int',default: 0},\r\n        borderLeft: {type:'int',default: 0},\r\n        borderRight: {type:'int',default: 0},\r\n        borderTop: {type:'int',default: 0},\r\n        borderBottom: {type:'int',default: 0},\r\n        padding: {type:'int',default: 0},\r\n        paddingLeft: {type:'int',default: 0},\r\n        paddingRight: {type:'int',default: 0},\r\n        paddingTop: {type:'int',default: 0},\r\n        paddingBottom: {type:'int',default: 0},\r\n        margin: {type:'int',default: 0},\r\n        marginLeft: {type:'int',default: 0},\r\n        marginRight: {type:'int',default: 0},\r\n        marginTop: {type:'int',default: 0},\r\n        marginBottom: {type:'int',default: 0},\r\n        marginAuto: {type:'boolean',default: false},\r\n        marginAutoLeft: {type:'boolean',default: false},\r\n        marginAutoRight: {type:'boolean',default: false},\r\n        marginAutoTop: {type:'boolean',default: false},\r\n        marginAutoBottom: {type:'boolean',default: false},\r\n        marginPercent:{type:'number',default: 0},\r\n        marginPercentLeft: {type:'int',default: 0},\r\n        marginPercentRight: {type:'int',default: 0},\r\n        marginPercentTop: {type:'int',default: 0},\r\n        marginPercentBottom: {type:'int',default: 0},\r\n        flexBasis: {default: 'default'},\r\n        flexBasisPercent: {type:'number',default: 0},\r\n        flexGrow:{type:'number',default: 0},\r\n        flexShrink:{type:'number',default: 1},\r\n        maxHeight:{default: 'default'},\r\n        minHeight:{default: 'default'},\r\n        maxWidth:{default: 'default'},\r\n        minWidth:{default: 'default'},\r\n        maxHeightPercent:{default: 'default'},\r\n        minHeightPercent:{default: 'default'},\r\n        maxWidthPercent:{default: 'default'},\r\n        minWidthPercent:{default: 'default'},\r\n        position:{default: 'default'},\r\n        positionLeft: {type:'int',default: 0},\r\n        positionRight: {type:'int',default: 0},\r\n        positionTop: {type:'int',default: 0},\r\n        positionBottom: {type:'int',default: 0},\r\n        positionPercent:{default: 'default'},\r\n        positionPercentLeft: {type:'int',default: 0},\r\n        positionPercentRight: {type:'int',default: 0},\r\n        positionPercentTop: {type:'int',default: 0},\r\n        positionPercentBottom: {type:'int',default: 0},\r\n        width:{default: 'default'},\r\n        height:{default: 'default'},\r\n        widthAuto:{type:'boolean',default: false},\r\n        heightAuto:{type:'boolean',default: false},\r\n        widthPercent:{default: 'default'},\r\n        heightPercent:{default: 'default'},\r\n    },\r\n    init(){\r\n        this.setProperties();\r\n    },\r\n    updateSchema(){\r\n        this.setProperties();\r\n    },\r\n    setProperties(){\r\n        this.properties = this.properties||[];\r\n        this.properties.length = 0;\r\n        // Store the current valid yoga properties;\r\n        for(let name in this.data){\r\n            if(this.data.hasOwnProperty(name)&&\r\n                this.data[name]!=='default'&&this.data[name]){\r\n                let value = this.mapPropertyToEnum(name);\r\n                if(value)this.properties.push({method:'set'+name.charAt(0).toUpperCase() + name.substr(1),value:this.mapPropertyToEnum(name)});\r\n            }\r\n        }\r\n    },\r\n    getProperties(){\r\n        // Get the current yoga properties array as an object\r\n        let propertiesObj = {};\r\n        for(let i = 0;i < this.properties.length;i++){\r\n            propertiesObj[this.properties[i].method] = this.properties[i];\r\n        }\r\n        return propertiesObj;\r\n    },\r\n    mapPropertyToEnum(name){\r\n        // Get the yoga enum for the friendly name.\r\n        switch(true){\r\n            case name.indexOf('align') > -1:\r\n                return this.enums.align[this.data[name]];\r\n            case name.indexOf('Edge') > -1:\r\n                return this.enums.edge[this.data[name]];\r\n            case name === 'flexDirection':\r\n            case name === 'flexWrap':\r\n            case name === 'positionType':\r\n            case name === 'overflow':\r\n            case name === 'display':\r\n            case name === 'justifyContent':\r\n                return this.enums[name][this.data[name]];\r\n            default:\r\n                return this.data[name];\r\n        }\r\n    },\r\n    enums:{\r\n        align:{\r\n            count:Yoga.ALIGN_COUNT,\r\n            auto:Yoga.ALIGN_AUTO,\r\n            \"flex-start\":Yoga.ALIGN_FLEX_START,\r\n            center:Yoga.ALIGN_CENTER,\r\n            \"flex-end\":Yoga.ALIGN_FLEX_END,\r\n            stretch:Yoga.ALIGN_STRETCH,\r\n            baseline:Yoga.ALIGN_BASELINE,\r\n            \"space-between\":Yoga.ALIGN_SPACE_BETWEEN,\r\n            \"space-around\":Yoga.ALIGN_SPACE_AROUND,\r\n        },\r\n        dimension:{\r\n            count:Yoga.DIMENSION_COUNT,\r\n            width:Yoga.DIMENSION_WIDTH,\r\n            height:Yoga.DIMENSION_HEIGHT,\r\n        },\r\n        direction:{\r\n            count:Yoga.DIRECTION_COUNT,\r\n            inherit:Yoga.DIRECTION_INHERIT,\r\n            ltr:Yoga.DIRECTION_LTR,\r\n            rtl:Yoga.DIRECTION_RTL,\r\n        },\r\n        display:{\r\n            count:Yoga.DISPLAY_COUNT,\r\n            flex:Yoga.DISPLAY_FLEX,\r\n            none:Yoga.DISPLAY_NONE,\r\n        },\r\n        edge:{\r\n            count:Yoga.EDGE_COUNT,\r\n            left:Yoga.EDGE_LEFT,\r\n            top:Yoga.EDGE_TOP,\r\n            right:Yoga.EDGE_RIGHT,\r\n            bottom:Yoga.EDGE_BOTTOM,\r\n            start:Yoga.EDGE_START,\r\n            end:Yoga.EDGE_END,\r\n            horizontal:Yoga.EDGE_HORIZONTAL,\r\n            vertical:Yoga.EDGE_VERTICAL,\r\n            all:Yoga.EDGE_ALL,\r\n        },\r\n        experimental:{\r\n            count:Yoga.EXPERIMENTAL_FEATURE_COUNT,\r\n            \"flex-basis\":Yoga.EXPERIMENTAL_FEATURE_WEB_FLEX_BASIS,\r\n        },\r\n        flexDirection:{\r\n            count:Yoga.FLEX_DIRECTION_COUNT,\r\n            column:Yoga.FLEX_DIRECTION_COLUMN,\r\n            \"column-reverse\":Yoga.FLEX_DIRECTION_COLUMN_REVERSE,\r\n            row:Yoga.FLEX_DIRECTION_ROW,\r\n            reverse:Yoga.FLEX_DIRECTION_ROW_REVERSE,\r\n        },\r\n        justifyContent:{\r\n            count:Yoga.JUSTIFY_COUNT,\r\n            start:Yoga.JUSTIFY_FLEX_START,\r\n            center:Yoga.JUSTIFY_CENTER,\r\n            end:Yoga.JUSTIFY_FLEX_END,\r\n            between:Yoga.JUSTIFY_SPACE_BETWEEN,\r\n            around:Yoga.JUSTIFY_SPACE_AROUND,\r\n            evenly:Yoga.JUSTIFY_SPACE_EVENLY,\r\n        },\r\n        logLevel:{\r\n            count:Yoga.LOG_LEVEL_COUNT,\r\n            error:Yoga.LOG_LEVEL_ERROR,\r\n            warn:Yoga.LOG_LEVEL_WARN,\r\n            info:Yoga.LOG_LEVEL_INFO,\r\n            debug:Yoga.LOG_LEVEL_DEBUG,\r\n            verbose:Yoga.LOG_LEVEL_VERBOSE,\r\n            fatal:Yoga.LOG_LEVEL_FATAL,\r\n        },\r\n        measureMode:{\r\n            count:Yoga.MEASURE_MODE_COUNT,\r\n            undefined:Yoga.MEASURE_MODE_UNDEFINED,\r\n            exactly:Yoga.MEASURE_MODE_EXACTLY,\r\n            \"at-most\":Yoga.MEASURE_MODE_AT_MOST,\r\n        },\r\n        nodeType:{\r\n            count:Yoga.NODE_TYPE_COUNT,\r\n            default:Yoga.NODE_TYPE_DEFAULT,\r\n            text:Yoga.NODE_TYPE_TEXT,\r\n        },\r\n        overflow:{\r\n            count:Yoga.OVERFLOW_COUNT,\r\n            visible:Yoga.OVERFLOW_VISIBLE,\r\n            hidden:Yoga.OVERFLOW_HIDDEN,\r\n            scroll:Yoga.OVERFLOW_SCROLL,\r\n        },\r\n        positionType:{\r\n            count:Yoga.POSITION_TYPE_COUNT,\r\n            relative:Yoga.POSITION_TYPE_RELATIVE,\r\n            absolute:Yoga.POSITION_TYPE_ABSOLUTE,\r\n        },\r\n        printOptions:{\r\n            count:Yoga.PRINT_OPTIONS_COUNT,\r\n            layout:Yoga.PRINT_OPTIONS_LAYOUT,\r\n            style:Yoga.PRINT_OPTIONS_STYLE,\r\n            children:Yoga.PRINT_OPTIONS_CHILDREN,\r\n        },\r\n        unit:{\r\n            count:Yoga.UNIT_COUNT,\r\n            undefined:Yoga.UNIT_UNDEFINED,\r\n            point:Yoga.UNIT_POINT,\r\n            percent:Yoga.UNIT_PERCENT,\r\n            auto:Yoga.UNIT_AUTO,\r\n        },\r\n        flexWrap:{\r\n            count:Yoga.WRAP_COUNT,\r\n            \"no-wrap\":Yoga.WRAP_NO_WRAP,\r\n            wrap:Yoga.WRAP_WRAP,\r\n            \"wrap-reverse\":Yoga.WRAP_WRAP_REVERSE,\r\n        }\r\n    }\r\n});","/* global AFRAME */\r\n/**\r\n * Application entry point\r\n * @author Shane Harris\r\n */\r\nimport {Utils} from \"./utils\";\r\n\r\nlet version = require('./../package.json').version;\r\nconsole.log('aframe-material-collection version '+version);\r\n\r\nif (typeof AFRAME === 'undefined') {\r\n    throw 'aframe-material-collection requires AFRAME to be loaded first. - <script src=\"https://aframe.io/releases/0.8.2/aframe.min.js\"></script>';\r\n}\r\nlet utils = new Utils();\r\n\r\nwindow.UI = {\r\n    // Utils\r\n    utils:utils,\r\n    // Primitives\r\n    a_ui_button: require('./primitives/button'),\r\n    a_ui_fab_button: require('./primitives/fab_button'),\r\n    a_ui_fab_button_small: require('./primitives/fab_button_small'),\r\n    a_ui_switch: require('./primitives/switch'),\r\n    a_ui_toast: require('./primitives/toast'),\r\n    a_ui_checkbox: require('./primitives/checkbox'),\r\n    a_ui_radio: require('./primitives/radio'),\r\n    a_ui_input_text: require('./primitives/input-text'),\r\n    a_ui_text_input: require('./primitives/text-input'),\r\n    a_ui_number_input: require('./primitives/number-input'),\r\n    a_ui_int_input: require('./primitives/int-input'),\r\n    a_ui_password_input: require('./primitives/password-input'),\r\n    a_ui_scroll_pane: require('./primitives/scroll-pane'),\r\n    a_ui_renderer: require('./primitives/renderer'),\r\n\r\n    // Components\r\n    text: require('./components/text'),\r\n    input_text: require('./components/input-text'),\r\n    btn: require('./components/btn'),\r\n    icon: require('./components/icon'),\r\n    rounded: require('./components/rounded'),\r\n    ripple: require('./components/ripple'),\r\n    switch: require('./components/switch'),\r\n    toast: require('./components/toast'),\r\n    scroll_pane: require('./components/scroll-pane'),\r\n    mouse_shim: require('./components/mouse-shim'),\r\n    double_click: require('./components/double-click'),\r\n    checkbox: require('./components/checkbox'),\r\n    radio: require('./components/radio'),\r\n    border: require('./components/border'),\r\n    curvedPlane: require('./components/curved-plane'),\r\n    colorPicker: require('./components/color-picker'),\r\n    modal: require('./components/modal'),\r\n    renderer: require('./components/renderer'),\r\n    yoga_properties: require('./components/yoga'),\r\n};\r\n//module.exports = UI;\r\n\r\n","export class Utils{\r\n    constructor(){\r\n        this.changesDetected = [];\r\n        this.is_changeing = false;\r\n    }\r\n    isFirstOrLastChange(){\r\n        if(!this.is_changeing&&this.changesDetected.length){\r\n            this.scene.emit('ui-changing');\r\n            this.is_changeing = true;\r\n        }else if(this.is_changeing&&!this.changesDetected.length){\r\n            if(this.is_changeing){\r\n                this.scene.emit('ui-changing-stopped');\r\n                this.is_changeing = false;\r\n            }\r\n        }\r\n    }\r\n    preventDefault(e){\r\n        if(e.detail && e.detail.preventDefault && typeof e.detail.preventDefault === \"function\"){\r\n            e.detail.preventDefault();\r\n        }\r\n    }\r\n    shorten(string,length){\r\n        return string.length>length?string.substr(0,length)+\"...\":string;\r\n    }\r\n    isChanging(scene,ref){\r\n        let index = this.changesDetected.indexOf(ref);\r\n        if(index===-1){\r\n            this.scene = this.scene||scene;\r\n            this.changesDetected.push(ref);\r\n            this.isFirstOrLastChange();\r\n        }\r\n    }\r\n    stoppedChanging(ref){\r\n        let index = this.changesDetected.indexOf(ref);\r\n        if(index>-1){\r\n            this.changesDetected.splice(index, 1)\r\n        }\r\n        this.isFirstOrLastChange();\r\n    }\r\n}"],"sourceRoot":""}